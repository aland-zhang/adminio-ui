{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/buckets/buckets.component.ts","webpack:///src/app/env.service.provider.ts","webpack:///src/app/env.service.ts","webpack:///src/app/filter.pipe.ts","webpack:///src/app/groups/groups.component.ts","webpack:///src/app/loader.interceptor.ts","webpack:///src/app/loader.service.ts","webpack:///src/app/loader/loader.component.ts","webpack:///src/app/policies/policies.component.ts","webpack:///src/app/server/server.component.ts","webpack:///src/app/users/users.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/app/app.component.scss","webpack:///src/app/buckets/buckets.component.scss","webpack:///src/app/groups/groups.component.scss","webpack:///src/app/loader/loader.component.scss","webpack:///src/app/policies/policies.component.scss","webpack:///src/app/server/server.component.scss","webpack:///src/app/users/users.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/buckets/buckets.component.html","webpack:///src/app/groups/groups.component.html","webpack:///src/app/loader/loader.component.html","webpack:///src/app/policies/policies.component.html","webpack:///src/app/server/server.component.html","webpack:///src/app/users/users.component.html"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","ApiService","httpClient","router","env","multiBackend","apiMultiBackend","backendsUrls","apiBackends","baseUrl","getCurrentBackend","apiBaseUrl","console","log","envDefaultBackend","savedBackend","localStorage","getItem","activeBackend","newBackend","setItem","onSameUrlNavigation","routeReuseStrategy","shouldReuseRoute","navigate","url","data","oauth","auth","window","location","href","get","access","secret","form","FormData","append","post","policy","status","policyName","policyString","bucket","stsARN","eventTypes","filterPrefix","filterSuffix","group","members","IsRemove","entityName","isGroup","bucketName","lifecycle","quotaType","quotaValue","tagsString","encType","encMasterKeyID","HttpClient","Router","EnvService","Injectable","providedIn","routes","path","component","UsersComponent","ServerComponent","PoliciesComponent","GroupsComponent","BucketsComponent","AppRoutingModule","NgModule","imports","RouterModule","AppComponent","apiService","title","checkAuthStatus","subscribe","validateAuthInResponse","Component","selector","template","AppModule","declarations","FilterPipe","LoaderComponent","BrowserModule","MDBBootstrapModule","HttpClientModule","ReactiveFormsModule","NgxJsonViewerModule","AngularMultiSelectModule","FormsModule","CommonModule","BrowserAnimationsModule","ToastrModule","providers","EnvServiceProvider","LoaderService","provide","HTTP_INTERCEPTORS","useClass","LoaderInterceptor","multi","bootstrap","cdRef","toastr","sanitizer","math","Math","objectKeys","Object","isNaN","Number","buckets","updateEncryptionTypeChanged","newBucketName","uiShowQuota","newBucketQuotaType","newBucketQuota","quotaTypes","newBucketEncryption","encryptionTypes","newBucketMasterKeyID","newBucketEventARN","updateBucketEventARN","updateBucketEventFilterPrefix","updateBucketEventFilterSuffix","updateBucketQuotaObj","updateBucketEncryptionObj","updateQuotaTypeChanged","updateQuotaChanged","newBucketPolicy","policyTypes","updatePolicyTypeChanged","dropdownEventTypesList","selectedEventTypes","dropdownEventTypesSettings","newBucketEventFilterPrefix","newBucketEventFilterSuffix","newBucketTagName","newBucketTagValue","newBucketTagsList","tagListChanged","downloadLifecycleAvailable","searchText","event","undefined","target","searchItems","getBuckets","getServerInfo","getDiskInfo","singleSelection","text","selectAllText","unSelectAllText","enableSearchFilter","classes","item","items","serverInfo","serviceInfo","diskInfo","diskUsageInfo","prev","mdbTable","getDataSource","setDataSource","previous","searchLocalDataBy","mdbTablePagination","setMaxVisibleItemsNumberTo","calculateFirstItemIndex","calculateLastItemIndex","detectChanges","getBucketsExtended","bucketToDelete","bucketToRemoveNotifications","currentQuota","currentQtype","currentTags","editBucketName","getBucketTag","dataKeys","getBucketEncryption","dataVals","values","getBucketQuota","emptyData","quotatype","getBucketPolicy","bucketToRemoveQuota","bucketToRemoveEncryption","deleteBucket","success","error","JSON","stringify","resetUploadForm","uploadPolicyFile","files","uploadPolicyFileName","name","uploadFileInput","nativeElement","value","uploadPolicyName","updateListAfter","setBucketPolicy","fileReader","FileReader","onload","result","policyFileString","toString","replace","readAsText","indexOf","bucketsArr","split","i","length","createBucketSimple","lifecycleBucketName","tagName","quotaVal","enableNotificationForBucket","setTagsForBucket","setQuotaForBucket","setPolicy","setBucketEncryption","eventTypesArr","push","itemName","join","reloadBucketList","setBucketQuota","removeBucketEvents","removeBucketQuota","removeBucketEncryption","masterKeyID","eventARN","encryption","numberOfBuckets","currentBucketNumber","createBucket","setTimeout","uploadLifecycleFile","uploadLifecycleFileName","uploadLifecycleName","lifecycleCurrentData","getLifecycle","uri","bypassSecurityTrustUrl","encodeURIComponent","downloadJsonHref","lifecycleFileString","setLifecycle","tagsObj","tagsKeys","tagArr","tagString","setBucketTag","fileName","link","document","createElement","download","click","ChangeDetectorRef","ToastrService","DomSanitizer","ViewChild","MdbTablePaginationComponent","MdbTableDirective","HostListener","EnvServiceFactory","browserWindow","browserWindowEnv","key","hasOwnProperty","useFactory","deps","searchPolicy","toLocaleLowerCase","filter","it","includes","Pipe","jsn","groups","groupsWithMembers","users","rawPolicies","groupToUpdate","newGroupName","newGroupPolicy","newGroupStatus","updateStatusValues","modalEditMode","rawView","usersToRemove","groupToDelete","dropdownList","selectedItems","dropdownSettings","isEditMode","isNowCopyMode","getGroups","getListOfUsers","getListOfPolicies","state","modalCreateEditTitle","modalCreateEditButtonText","arr","str","parse","atob","b64unpack","tempGroupName","getGroupDescription","getUsers","entries","map","tempMember","getPolicies","policies","updateMembersGroup","refreshList","setStatusGroup","updatePolicy","updateStatus","newMembers","wipeGroupMembers","loaderService","requests","splice","isLoading","next","clone","withCredentials","isError","Observable","observer","subscription","handle","HttpResponse","removeRequest","err","complete","unsubscribe","BehaviorSubject","v","loading","objectValues","policiesRaw","dropdownActionList","dropdownAdminList","dropdownConditionList","dropdownConditionKeyList","selectedActions","selectedAdmins","selectedCondition","selectedConditionKey","dropdownActionSettings","dropdownAdminSettings","dropdownConditionSettings","dropdownConditionKeySettings","advancedInterface","advancedInterfaceLabel","newPolicy","effect","newPolicyRaw","Version","Statement","newStatement","Action","Effect","Resource","Condition","Principal","newConditionValue","policyToUpdate","removeName","arrayOfPolicies","deletePolicy","policyToDelete","jsonObj","theJSON","obj","valueId","keyName","conditionName","constructor","resetPloicyForm","substring","g","addPolicy","prepareNewPolicyRaw","oldPolicy","bucketSizes","hgChartDatasets","label","hgChartLabels","hgChartType","hgChartColors","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","hgChartOptions","responsive","szChartDatasets","szChartLabels","szChartType","szChartColors","szChartOptions","objectsSizesHistogram","histogramKeysRawArr","histogramValsRawArr","histogramLabel","bucketsSizes","objectBucketSizes","bucketSizesKeysRawArr","bucketSizesValsRawArr","usersRaw","resetForm","updateUserFrom","validatingForm","charset","retVal","n","charAt","floor","random","updateUser","FormGroup","accessKeyUpdate","FormControl","disabled","Validators","secretKeyUpdate","policyUpdate","statusUpdate","newUserAccess","generatePassword","newUserSecret","newUserPolicy","arrayOfUsers","userAccess","userSecret","userPolicy","addUserExtended","addUser","accessKey","setStatusUser","userToDelete","userToUpdate","patchValue","updatedSecret","updatedPolicy","updatedStatus","deleteUser","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\nimport { EnvService } from './env.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private httpClient: HttpClient, private router: Router, private env: EnvService) {\n    if(env.apiBaseUrl) {\n      console.log('apiBaseUrl', env.apiBaseUrl);\n    }\n    if(env.apiMultiBackend) {\n      console.log('apiMultiBackend', env.apiMultiBackend);\n    }\n    if(env.apiBackends) {\n      console.log('apiBackends', env.apiBackends);\n    }\n\n   }\n\n\n  multiBackend = this.env.apiMultiBackend;\n  backendsUrls = this.env.apiBackends;\n  baseUrl = this.getCurrentBackend();\n\n  private getCurrentBackend(){\n    let envDefaultBackend = this.env.apiBaseUrl;\n    if(this.multiBackend && this.multiBackend == true) {\n      let savedBackend = localStorage.getItem('currentBackend');\n\n      let activeBackend = \"\";\n\n      if(savedBackend && savedBackend != \"\"){\n        activeBackend = savedBackend;\n      }else{\n        activeBackend = envDefaultBackend;\n      }\n      return activeBackend;\n    } else {\n      return envDefaultBackend;\n    }\n  }\n\n  public overrideBackend(newBackend){\n    localStorage.setItem('currentBackend', newBackend);\n    this.baseUrl = newBackend;\n\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n\n    this.router.navigate([this.router.url])\n    this.router.onSameUrlNavigation = 'ignore';\n  }\n\n  public getMultiBackendStatus(){\n    return this.multiBackend;\n  }\n\n  public getBackendsUrls(){\n    return this.backendsUrls;\n  }\n\n  public validateAuthInResponse(data){\n    if(data != null && typeof data.oauth != \"undefined\" && typeof data.auth != \"undefined\" && data.oauth != false && data.auth != true){\n      window.location.href = this.env.apiBaseUrl+'/auth/?state='+window.location.href;\n    }\n  }\n\n  public serverInfo(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/server/common-info');\n  }\n\n  public diskInfo(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/server/disk-info');\n  }\n\n  public getUsers(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/users/list');\n  }\n\n  public addUser(access,secret){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('secretKey', secret);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/create', form)\n  }\n\n  public addUserExtended(access,secret,policy){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('secretKey', secret);\n    form.append('policyName', policy);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/create-extended', form)\n  }\n\n  public updateUser(access,secret,policy,status){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('secretKey', secret);\n    form.append('policyName', policy);\n    form.append('status', status);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/update', form)\n  }\n\n\n  public setStatusUser(access,status){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('status', status);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/set-status', form)\n  }\n\n  public deleteUser(access){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/delete', form)\n  }\n\n  public getPolicies(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/policies/list');\n  }\n\n  public deletePolicy(policy){\n    let form = new FormData();\n\n    form.append('policyName', policy);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/policy/delete', form)\n  }\n\n  public addPolicy(policyName, policyString){\n    let form = new FormData();\n\n    form.append('policyName', policyName);\n    form.append('policyString', policyString);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/policy/create', form)\n  }\n\n  public getBuckets(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/buckets/list');\n  }\n\n  public getBucketsExtended(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/buckets/list-extended');\n  }\n\n  public enableNotificationForBucket(bucket, stsARN, eventTypes, filterPrefix, filterSuffix){\n    //put,get,delete\n    let form = new FormData();\n\n    form.append('bucket', bucket);\n    form.append('stsARN', stsARN);\n    form.append('eventTypes', eventTypes);\n    form.append('filterPrefix', filterPrefix);\n    form.append('filterSuffix', filterSuffix);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-events', form)\n  }\n\n  public getBucketEvents(bucket){\n    let form = new FormData();\n\n    form.append('bucket', bucket);\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-events',form)\n  }\n\n  public removeBucketEvents(bucket){\n    let form = new FormData();\n\n    form.append('bucket', bucket);\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/remove-events',form)\n  }\n\n  public deleteBucket(bucket){\n    let form = new FormData();\n\n    form.append('bucketName', bucket);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/delete', form)\n  }\n\n  public createBucket(bucket){\n    let form = new FormData();\n\n    form.append('newBucket', bucket);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/create', form)\n  }\n\n  public getGroups(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/groups/list');\n  }\n\n  public updateMembersGroup(group,members,IsRemove){\n    let form = new FormData();\n\n    form.append('group', group);\n    form.append('members', members);\n    form.append('IsRemove', IsRemove);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/group/update-members', form);\n  }\n\n  public getGroupDescription(group){\n    let form = new FormData();\n\n    form.append('group', group);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/group/get-description', form);\n  }\n\n  public setStatusGroup(group,status){\n    let form = new FormData();\n\n    form.append('group', group);\n    form.append('status', status);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/group/set-status', form);\n  }\n\n  public setPolicy(policyName,entityName,isGroup){\n    let form = new FormData();\n\n    form.append('policyName', policyName);\n    form.append('entityName', entityName);\n    form.append('isGroup', isGroup);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/policy/update', form);\n  }\n\n  public setLifecycle(bucketName,lifecycle){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('lifecycle', lifecycle);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-lifecycle', form);\n  }\n\n\n  public getLifecycle(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-lifecycle', form);\n  }\n\n  public checkAuthStatus(){\n    return this.httpClient.get(this.baseUrl+'/auth/check');\n  }\n\n  public getBucketQuota(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-quota', form);\n  }\n\n  public setBucketQuota(bucketName, quotaType, quotaValue){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('quotaType', quotaType);\n    form.append('quotaValue', quotaValue);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-quota', form);\n  }\n\n  public removeBucketQuota(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/remove-quota', form);\n  }\n\n  public setBucketTag(bucketName,tagsString){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('bucketTags', tagsString);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-tags', form);\n  }\n\n  public getBucketTag(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-tags', form);\n  }\n\n  public setBucketPolicy(bucketName,policyString){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('bucketPolicy', policyString);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-policy', form);\n  }\n\n  public getBucketPolicy(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-policy', form);\n  }\n\n  public getBucketEncryption(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-encryption', form);\n  }\n\n  public setBucketEncryption(bucketName, encType, encMasterKeyID){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('bucketEncryptionType', encType);\n    form.append('kmsMasterKey', encMasterKeyID);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-encryption', form);\n  }\n\n  public removeBucketEncryption(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/remove-encryption', form);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { ServerComponent } from './server/server.component';\nimport { PoliciesComponent } from './policies/policies.component';\nimport { BucketsComponent } from './buckets/buckets.component';\nimport { GroupsComponent } from './groups/groups.component';\n\nconst routes: Routes = [\n\t{path:'users', component: UsersComponent},\n\t{path:'server', component: ServerComponent},\n\t{path:'policies', component: PoliciesComponent},\n\t{path:'groups', component: GroupsComponent},\n\t{path:'', component: BucketsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { environment } from './../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Adminio-UI';\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n  \tthis.checkAuthStatus()\n  }\n\n  private checkAuthStatus(){\n    this.apiService.checkAuthStatus().subscribe((data)=>{\n      console.log(\"DATA AUTH>>>\", data);\n      this.apiService.validateAuthInResponse(data)\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { UsersComponent } from './users/users.component';\nimport { FormsModule, FormControl, FormGroup, Validators, ReactiveFormsModule} from \"@angular/forms\";\nimport { ServerComponent } from './server/server.component';\nimport { FilterPipe } from './filter.pipe';\nimport { PoliciesComponent } from './policies/policies.component';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { LoaderComponent } from './loader/loader.component';\nimport { LoaderService } from './loader.service';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LoaderInterceptor } from './loader.interceptor';\nimport { BucketsComponent } from './buckets/buckets.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { GroupsComponent } from './groups/groups.component';\nimport { EnvServiceProvider } from './env.service.provider';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    ServerComponent,\n    FilterPipe,\n    PoliciesComponent,\n    LoaderComponent,\n    BucketsComponent,\n    GroupsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxJsonViewerModule,\n    AngularMultiSelectModule,\n    FormsModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    EnvServiceProvider,\n    LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\nimport { ApiService } from '../api.service';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-buckets',\n  templateUrl: './buckets.component.html',\n  styleUrls: ['./buckets.component.scss']\n})\nexport class BucketsComponent implements OnInit,  AfterViewInit  {\n  math = Math;\n  objectKeys = Object.keys;\n  isNaN: Function = Number.isNaN;\n  buckets = {};\n  bucketToDelete;\n  bucketToRemoveNotifications;\n  bucketToRemoveQuota;\n  bucketToRemoveEncryption;\n  updateEncryptionTypeChanged = false;\n  editBucketName;\n  newBucketName = \"\";\n  uiShowQuota = false;\n  newBucketQuotaType = \"\";\n  newBucketQuota = \"\";\n  quotaTypes = [\"fifo\", \"hard\"];\n  serviceInfo;\n  diskUsageInfo;\n  newBucketEncryption = \"\";\n  encryptionTypes = [\"sse-s3\", \"sse-kms\"];\n  newBucketMasterKeyID = \"\";\n  newBucketEventARN = \"\";\n  updateBucketEventARN = \"\";\n  updateBucketEventFilterPrefix = \"\";\n  updateBucketEventFilterSuffix = \"\";\n  updateBucketQuotaObj = {};\n  updateBucketEncryptionObj = {};\n  updateQuotaTypeChanged = false;\n  updateQuotaChanged = false;\n\n  newBucketPolicy = \"none\";\n  // updateBucketPolicy = \"none\"\n  policyTypes = [\"none\", \"upload\", \"download\", \"public\", \"custom\"];\n  updatePolicyTypeChanged = false;\n  uploadPolicyName;\n  uploadPolicyFile;\n  uploadPolicyFileName;\n\n  dropdownEventTypesList = [];\n  selectedEventTypes = [];\n  dropdownEventTypesSettings = {};\n  newBucketEventFilterPrefix = \"\";\n  newBucketEventFilterSuffix = \"\";\n  newBucketTagName = \"\";\n  newBucketTagValue = \"\";\n  newBucketTagsList = {};\n\n  tagListChanged = false;\n\n  uploadLifecycleName;\n  uploadLifecycleFile;\n  uploadLifecycleFileName;\n  lifecycleBucketName;\n  downloadJsonHref;\n  downloadLifecycleAvailable = 0;\n\n  lifecycleCurrentData;\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  previous: string;\n\n  searchText: string = '';\n\n  constructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService, private sanitizer: DomSanitizer) { }\n\n  @HostListener('input') oninput() {\n    if(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n       this.searchItems();\n    }\n  }\n\n  @ViewChild('uploadLifecycleFile', { static: true })\n  uploadFileInput: any;\n\n  ngOnInit() {\n  \tthis.getBuckets()\n    this.getServerInfo()\n    this.getDiskInfo()\n\n    this.dropdownEventTypesList = [\n\t    {\"id\":1,\"itemName\":\"put\"},\n\t    {\"id\":2,\"itemName\":\"get\"},\n\t    {\"id\":3,\"itemName\":\"delete\"},\n    ];\n\n    this.dropdownEventTypesSettings = {\n  \t\tsingleSelection: false,\n  \t\ttext:\"Select Event Types\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true,\n      classes: \"dropdownFix\"\n\t  };\n  }\n\n  //condition select actions\n  onEventTypesItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedEventTypes);\n\t}\n\tonEventTypesItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedEventTypes);\n\t}\n\tonEventTypesSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonEventTypesDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n  private toggleShowQuota(){\n    (this.uiShowQuota) ? this.uiShowQuota = false : this.uiShowQuota = true;\n  }\n\n  // private toggleUpdateShowQuota(){\n  //   (this.updateUiShowQuota) ? this.updateUiShowQuota = false : this.updateUiShowQuota = true;\n  // }\n\n  private getServerInfo(){\n    this.apiService.serverInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.serviceInfo = data;\n    });\n  }\n\n  private getDiskInfo(){\n  \tthis.apiService.diskInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.diskUsageInfo = data;\n    });\n  }\n\n  private searchItems() {\n    const prev = this.mdbTable.getDataSource();\n\n    if (!this.searchText) {\n      this.mdbTable.setDataSource(this.previous);\n      this.buckets = this.mdbTable.getDataSource();\n    }\n\n    if (this.searchText) {\n      this.buckets = this.mdbTable.searchLocalDataBy(this.searchText);\n      this.mdbTable.setDataSource(prev);\n    }\n  }\n\n  ngAfterViewInit() {\n      this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n      this.mdbTablePagination.calculateFirstItemIndex();\n      this.mdbTablePagination.calculateLastItemIndex();\n      this.cdRef.detectChanges();\n  }\n\n  private getBuckets(){\n  \tthis.apiService.getBucketsExtended().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(\"BUCKETS >>>>>>\",data);\n      if(data!==null){\n        this.buckets = data;\n      }else{\n        this.buckets = {};\n      }\n      this.mdbTable.setDataSource(this.buckets);\n      this.previous = this.mdbTable.getDataSource();\n    });\n  }\n\n  private deleteBucketPrepare(bucketName){\n  \tthis.bucketToDelete = bucketName;\n  }\n\n  private removeBucketNotificationPrepare(bucketName){\n  \tthis.bucketToRemoveNotifications = bucketName;\n  }\n\n  private updateBucketPrepare(bucketName, currentQuota, currentQtype, currentTags){\n    this.editBucketName = bucketName;\n\n    this.apiService.getBucketTag(bucketName).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(Object.keys(data));\n      console.log(data);\n\n      var dataKeys = Object.keys(data);\n      console.log(dataKeys[0]);\n      if(dataKeys[0]!=\"error\"){\n        this.newBucketTagsList = data;\n      }\n    });\n\n    this.apiService.getBucketEncryption(bucketName).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(Object.keys(data));\n      console.log(data);\n\n      var dataKeys = Object.keys(data);\n      console.log(\"Bucket Encryption >>\",dataKeys[1]);\n      if(dataKeys[1]==\"Rules\"){\n        this.updateBucketEncryptionObj = data;\n        var dataVals = Object.values(data);\n        console.log(\"Enc datavals\", dataVals[1][0]['Apply']['KmsMasterKeyID'])\n        if(dataVals[1][0]['Apply']['KmsMasterKeyID'] == \"\"){\n          this.updateBucketEncryptionObj = \"sse-s3\"\n        }else{\n          this.updateBucketEncryptionObj = \"sse-kms\"\n        }\n      }else{\n        this.updateBucketEncryptionObj = \"\";\n      }\n    });\n\n    this.apiService.getBucketQuota(bucketName).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(Object.keys(data));\n      console.log(data);\n\n      var dataKeys = Object.keys(data);\n      console.log(dataKeys[0]);\n      if(dataKeys[0]!=\"error\"){\n        this.updateBucketQuotaObj = data;\n      }else{\n        var emptyData = {\n          quotatype: \"\"\n        };\n        this.updateBucketQuotaObj = emptyData;\n      }\n    });\n\n    this.apiService.getBucketPolicy(bucketName).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(Object.keys(data));\n      console.log(data);\n      this.newBucketPolicy = data[\"name\"];\n    });\n  }\n\n  private deleteBucketQuotaPrepare(bucketName){\n    this.bucketToRemoveQuota = bucketName;\n  }\n\n  private updateQuotaType(){\n    this.updateQuotaTypeChanged = true;\n  }\n\n  private updatePolicyType(){\n    this.updatePolicyTypeChanged = true;\n  }\n\n  private updateEncryptionType(){\n    this.updateEncryptionTypeChanged = true;\n  }\n\n  private updateQuota(){\n    this.updateQuotaChanged = true;\n  }\n\n  private deleteBucketEncryptionPrepare(bucketName){\n    this.bucketToRemoveEncryption = bucketName;\n  }\n\n  private deleteBucket(){\n  \tthis.apiService.deleteBucket(this.bucketToDelete).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Bucket has been deleted', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while deleting bucket');\n      }\n      this.getBuckets();\n    });\n  }\n\n  private resetForm(){\n  \tthis.newBucketName = \"\";\n    this.newBucketEventARN = \"\";\n    this.newBucketEncryption = \"\";\n    this.newBucketMasterKeyID = \"\";\n    this.updateEncryptionTypeChanged = false;\n    this.newBucketEventFilterPrefix = \"\";\n    this.newBucketEventFilterSuffix = \"\";\n    this.selectedEventTypes = [];\n    this.newBucketQuotaType = \"\";\n    this.newBucketPolicy = \"none\";\n    this.newBucketQuota = \"\";\n    this.newBucketTagName = \"\";\n    this.newBucketTagValue = \"\";\n    this.newBucketTagsList = {};\n    this.updatePolicyTypeChanged = false;\n    this.tagListChanged = false;\n    this.resetUploadForm();\n  }\n\n  private resetUpdateForm() {\n    this.updateBucketEventARN = \"\";\n    this.newBucketEncryption = \"\";\n    this.newBucketMasterKeyID = \"\";\n    this.updateEncryptionTypeChanged = false;\n    this.selectedEventTypes = [];\n    this.updateBucketEventFilterPrefix = \"\";\n    this.updateBucketEventFilterSuffix = \"\";\n    this.updateBucketQuotaObj = {};\n    this.updateBucketEncryptionObj = \"\";\n    this.updateQuotaTypeChanged = false;\n    this.updateQuotaChanged = false;\n    this.tagListChanged = false;\n    this.updatePolicyTypeChanged = false;\n    this.resetUploadForm();\n  }\n\n  private filePolicyChanged(e) {\n    console.log(\"file event\");\n\n    this.uploadPolicyFile = e.target.files[0];\n    this.uploadPolicyFileName = e.target.files[0].name;\n  }\n\n  private resetUploadForm(){\n    this.uploadFileInput.nativeElement.value = \"\";\n    this.uploadPolicyFile;\n    this.uploadPolicyName = \"\";\n    this.uploadPolicyFileName = \"\";\n  }\n\n  private setPolicy(bucketName, updateListAfter){\n    if(this.newBucketPolicy!=\"custom\"){\n      this.apiService.setBucketPolicy(bucketName, this.newBucketPolicy).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Policy '+this.newBucketPolicy+' has been append to '+bucketName, 'Success');\n          if(updateListAfter){\n            this.getBuckets();\n          }\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating policy');\n        }\n      });\n    } else {\n      let fileReader = new FileReader();\n      fileReader.onload = (e) => {\n        console.log(\"Policy>>>>\",fileReader.result);\n\n        let policyFileString = ((fileReader.result).toString()).replace(/\\n/g, ' ').replace(/\\r/g, ' ')\n        console.log(\"Policy2>>>>\",policyFileString);\n        this.apiService.setBucketPolicy(bucketName, policyFileString).subscribe((data)=>{\n          this.apiService.validateAuthInResponse(data)\n          console.log(data);\n          if(data[\"Success\"]){\n            this.toastr.success('Policy custom has been append to '+bucketName, 'Success');\n            if(updateListAfter){\n              this.getBuckets();\n            }\n          }else{\n            this.toastr.error(JSON.stringify(data), 'Error while creating policy');\n          }\n        });\n\n      }\n      fileReader.readAsText(this.uploadPolicyFile);\n    }\n  }\n\n\n  private createBucket(){\n  \tif(this.newBucketName.indexOf(',')>-1){\n  \t\tvar bucketsArr = this.newBucketName.split(',')\n  \t\tfor (var i = 0; i < bucketsArr.length; i++) {\n  \t\t\tif(bucketsArr[i]!=''){\n  \t\t\t\tthis.createBucketSimple(bucketsArr[i],this.newBucketEventARN,this.newBucketQuotaType,this.newBucketQuota,this.newBucketPolicy,this.newBucketEncryption,this.newBucketMasterKeyID, bucketsArr.length,i+1)\n  \t\t\t}\n  \t\t}\n  \t}else{\n  \t\tthis.createBucketSimple(this.newBucketName,this.newBucketEventARN,this.newBucketQuotaType,this.newBucketQuota,this.newBucketPolicy,this.newBucketEncryption,this.newBucketMasterKeyID,1,1)\n  \t}\n  }\n\n  private bucketLifecycle(bucket){\n    this.lifecycleBucketName = bucket;\n    // this.lifecycleCurrentData = \"\";\n  }\n\n  private createFormAddTag() {\n    if(this.newBucketTagName != \"\" && this.newBucketTagValue != \"\"){\n      this.newBucketTagsList[this.newBucketTagName] = this.newBucketTagValue;\n      this.newBucketTagName = \"\";\n      this.newBucketTagValue = \"\";\n      this.tagListChanged = true;\n    }\n  }\n\n  private createFormRemoveTag(tagName) {\n    delete this.newBucketTagsList[tagName];\n    this.tagListChanged = true;\n  }\n\n  private updateBucket(quotaType, quotaVal) {\n    if(this.updateBucketEventARN != \"\"){\n      this.enableNotificationForBucket(this.editBucketName, this.updateBucketEventARN, this.selectedEventTypes, this.updateBucketEventFilterPrefix, this.updateBucketEventFilterSuffix, true)\n    }\n\n    if(this.tagListChanged){\n      this.setTagsForBucket(this.editBucketName,true)\n    }\n\n    if(this.updateQuotaTypeChanged || this.updateQuotaChanged){\n      this.setQuotaForBucket(this.editBucketName, quotaType, quotaVal, true)\n    }\n\n    if(this.updatePolicyTypeChanged){\n      this.setPolicy(this.editBucketName, true)\n    }\n\n    if(this.updateEncryptionTypeChanged){\n      this.setBucketEncryption(this.editBucketName, this.updateBucketEncryptionObj, this.newBucketMasterKeyID, true)\n    }\n  }\n\n  private enableNotificationForBucket(bucket, stsARN, eventTypes, filterPrefix, filterSuffix, updateListAfter){\n    var eventTypesArr = []\n    for (var i = 0; i < eventTypes.length; i++) {\n      eventTypesArr.push(eventTypes[i].itemName)\n    }\n    this.apiService.enableNotificationForBucket(bucket, stsARN, eventTypesArr.join(','), filterPrefix, filterSuffix).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      if(data[\"Success\"]){\n        this.toastr.success('Events for bucket: '+bucket+' has been enabled', 'Success');\n        if(updateListAfter){\n          this.getBuckets();\n        }\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while enabling events for bucket'+bucket );\n      }\n    });\n  }\n\n  private setQuotaForBucket(bucket, quotaType, quotaVal, reloadBucketList){\n    this.apiService.setBucketQuota(bucket, quotaType, quotaVal).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      if(data[\"Success\"]){\n        this.toastr.success('Quota for bucket '+bucket+' has been set', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while set quota for bucket');\n      }\n      if(reloadBucketList){\n        this.getBuckets();\n      }\n    });\n  }\n\n  private removeBucketEvents(){\n    var bucket = this.bucketToRemoveNotifications;\n    this.apiService.removeBucketEvents(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Events for bucket '+bucket+' has been removed', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while removing bucket events');\n      }\n      this.getBuckets();\n    });\n  }\n\n  private removeBucketQuota(){\n      var bucket = this.bucketToRemoveQuota;\n      this.apiService.removeBucketQuota(bucket).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Quota for bucket '+bucket+' has been removed', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while removing bucket quota');\n        }\n        this.getBuckets();\n      });\n  }\n\n  private removeBucketEncryption(){\n      var bucket = this.bucketToRemoveEncryption;\n      this.apiService.removeBucketEncryption(bucket).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Encryption for bucket '+bucket+' has been removed', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while removing bucket encryption');\n        }\n        this.getBuckets();\n      });\n  }\n\n\n  private setBucketEncryption(bucket, encType, masterKeyID, reloadBucketList){\n    this.apiService.setBucketEncryption(bucket, encType, masterKeyID).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      if(data[\"Success\"]){\n        this.toastr.success('Encryption for bucket '+bucket+' has been set', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while set encryption for bucket');\n      }\n      if(reloadBucketList){\n        this.getBuckets();\n      }\n    });\n  }\n\n\n\n  private createBucketSimple(bucket, eventARN, quotaType, quotaVal, policy, encryption, masterKeyID, numberOfBuckets, currentBucketNumber){\n  \tthis.apiService.createBucket(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Bucket: '+bucket+' has been created', 'Success');\n        if(eventARN != \"\"){\n          this.enableNotificationForBucket(bucket, eventARN, this.selectedEventTypes, this.newBucketEventFilterPrefix, this.newBucketEventFilterSuffix, false);\n        }\n        if(quotaType != \"\" && quotaVal != \"\" && quotaVal >= 0){\n          this.setQuotaForBucket(bucket, quotaType, quotaVal, false);\n        }\n        if(Object.keys(this.newBucketTagsList).length > 0){\n          this.setTagsForBucket(bucket, false)\n        }\n        if(this.updatePolicyTypeChanged){\n          this.setPolicy(bucket, false)\n        }\n        if(encryption != \"\"){\n          this.setBucketEncryption(bucket, encryption, masterKeyID, false)\n        }\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while creating bucket');\n      }\n      if(numberOfBuckets == currentBucketNumber){\n        setTimeout(()=>{\n            this.getBuckets();\n        }, 500);\n      }\n    });\n  }\n\n  private fileChanged(e) {\n    console.log(\"eventTriggered\");\n\n    this.uploadLifecycleFile = e.target.files[0];\n    this.uploadLifecycleFileName = e.target.files[0].name;\n  }\n\n  private resetLifecycleForm(){\n    this.uploadFileInput.nativeElement.value = \"\";\n    this.uploadLifecycleFile;\n    this.uploadLifecycleName = \"\";\n    this.uploadLifecycleFileName = \"\";\n    this.downloadLifecycleAvailable = 0;\n    this.lifecycleCurrentData = \"\";\n  }\n\n  private downloadLifecycle(bucket) {\n    this.apiService.getLifecycle(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(bucket, data);\n      if(data[\"error\"]){\n        if(data[\"error\"]!=\"The lifecycle configuration does not exist\"){\n          this.toastr.error(JSON.stringify(data), 'Error while getting lifecycle');\n        }\n      }else{\n        if(data==\"\"){\n          // this.toastr.error(\"Bucket has no lifecycle\", 'Error while getting lifecycle');\n        }else{\n          this.downloadLifecycleAvailable = 1;\n          console.log(\"Lifecycle>>>>\",JSON.stringify(data));\n          this.lifecycleCurrentData = data;\n\n          var uri = this.sanitizer.bypassSecurityTrustUrl(\"data:text/json;charset=UTF-8,\" + encodeURIComponent(JSON.stringify(data)));\n          this.downloadJsonHref = uri;\n        }\n      }\n    });\n  }\n\n  private uploadLifecycle(){\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      let lifecycleFileString = ((fileReader.result).toString()).replace(/\\n/g, ' ').replace(/\\r/g, ' ')\n      this.apiService.setLifecycle(this.lifecycleBucketName,lifecycleFileString).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Lifecycyle has been uploaded for bucket: '+this.lifecycleBucketName+'', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while uploading lifecycyle');\n        }\n      });\n    }\n    fileReader.readAsText(this.uploadLifecycleFile);\n  }\n\n  private setTagsForBucket(bucket,reloadBucketList){\n    var tagsObj = this.newBucketTagsList;\n    var tagsKeys = this.objectKeys(tagsObj);\n    var tagArr = [];\n    for (let i = 0; i < tagsKeys.length; i++) {\n      var tagString = tagsKeys[i]+\"=\"+tagsObj[tagsKeys[i]]\n      tagArr.push(tagString)\n    }\n    var tagString = tagArr.join(\"&\");\n    console.log(\"TAG STRING >>>>\", tagString)\n    this.apiService.setBucketTag(bucket, tagString).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      if(data[\"Success\"]){\n        this.toastr.success('Tags for bucket '+bucket+' has been set', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while set tags for bucket');\n      }\n      if(reloadBucketList){\n        this.getBuckets();\n      }\n    });\n  }\n\n  private downloadPolicy(bucket,fileName) {\n    this.apiService.getBucketPolicy(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(\"download policy >>> \", bucket, data);\n      if(data[\"error\"]){\n        this.toastr.error(JSON.stringify(data), 'Error while getting policy');\n      }else{\n        if(data==\"\"){\n          this.toastr.error(\"Bucket has no policy\", 'Error while getting policy');\n        }else{\n          var link = document.createElement('a');\n          link.href = \"data:text/json;charset=UTF-8,\" + encodeURIComponent(data[\"policy\"].toString());\n          link.download = fileName\n          link.click();\n        }\n      }\n    });\n  }\n\n\n\n}\n","import { EnvService } from './env.service';\n\nexport const EnvServiceFactory = () => {\n  // Create env\n  const env = new EnvService();\n\n  // Read environment variables from browser window\n  const browserWindow = window || {};\n  const browserWindowEnv = browserWindow['__env'] || {};\n\n  // Assign environment variables from browser window to env\n  // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n  // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n  for (const key in browserWindowEnv) {\n    if (browserWindowEnv.hasOwnProperty(key)) {\n      env[key] = window['__env'][key];\n    }\n  }\n\n  return env;\n};\n\nexport const EnvServiceProvider = {\n  provide: EnvService,\n  useFactory: EnvServiceFactory,\n  deps: [],\n};\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EnvService {\n\n  // The values that are defined here are the default values that can\n  // be overridden by env.js\n\n  // API url\n  public apiBaseUrl = '';\n  public apiMultiBackend = false;\n  public apiBackends = '';\n\n  constructor() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: any[], searchPolicy: string): any[] {\n\n    if (!items) {\n      return [];\n    }\n    if (!searchPolicy) {\n      return items;\n    }\n    searchPolicy = searchPolicy.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.toLocaleLowerCase().includes(searchPolicy);\n    });\n  }\n\n}\n","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n\tselector: 'app-groups',\n\ttemplateUrl: './groups.component.html',\n\tstyleUrls: ['./groups.component.scss']\n})\n\nexport class GroupsComponent implements OnInit,  AfterViewInit  {\n\tobjectKeys = Object.keys;\n\tjsn = JSON;\n\tgroups = {};\n\tgroupsWithMembers = [];\n\tusers = {};\n\trawPolicies = {};\n\tgroupToUpdate = {};\n\tnewGroupName = \"\";\n\tnewGroupPolicy = \"\";\n\tnewGroupStatus = \"\";\n\tpolicies;\n\tupdateStatusValues = ['enabled','disabled'];\n\tmodalCreateEditTitle;\n\tmodalCreateEditButtonText;\n\tmodalEditMode = false;\n\trawView = \"\";\n\tusersToRemove = [];\n\tgroupToDelete = \"\";\n\n\n\n\tdropdownList = [];\n\tselectedItems = [];\n\tdropdownSettings = {};\n\n\n\n\t@ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n\t@ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n\n\tprevious: string;\n\tsearchText: string = '';\n\n  \tconstructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService) { }\n\n  \t@HostListener('input') oninput() {\n\t\tif(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n\t\t   this.searchItems();\n\t\t}\n\t\tif(event && event['target'] !== undefined && event.target[\"name\"] !== undefined && event.target[\"name\"] == \"newGroupName\"){\n\t      if(this.modalEditMode){\n\t        if(this.newGroupName == this.groupToUpdate[\"name\"]){\n\t          console.log('hit')\n\t          this.isEditMode(true)\n\t        }else{\n\t          this.isNowCopyMode();\n\t        }\n\t      }\n\t    }\n\t}\n\n\tngOnInit() {\n\t\tthis.getGroups()\n\t\tthis.getListOfUsers()\n\t\tthis.getListOfPolicies()\n\t\tthis.isEditMode(false)\n\n\t\tthis.dropdownList = [\n\t\t    {\"id\":1,\"itemName\":\"wait! i'm getting policies ASAP\"}\n\t    ];\n\n\t    this.dropdownSettings = {\n\t\t\tsingleSelection: false,\n\t\t\ttext:\"Select Members\",\n\t\t\tselectAllText:'Select All',\n\t\t\tunSelectAllText:'UnSelect All',\n\t\t\tenableSearchFilter: true\n\t\t};\n\t}\n\n\tonItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedItems);\n\t}\n\tOnItemDeSelect(item:any){\n\t\tthis.usersToRemove.push(item[\"itemName\"])\n\t    console.log(item);\n\t    console.log(this.selectedItems);\n\t}\n\tonSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonDeSelectAll(items: any){\n\n\t\t\tfor (let i = 0; i < this.selectedItems.length; i++) {\n\t\t\t\tthis.usersToRemove.push(this.selectedItems[i][\"itemName\"])\n\t\t\t}\n\n\t    this.selectedItems = [];\n\t}\n\n\tprivate searchItems() {\n\t\tconst prev = this.mdbTable.getDataSource();\n\n\t\tif (!this.searchText) {\n\t\t  this.mdbTable.setDataSource(this.previous);\n\t\t  this.groups = this.mdbTable.getDataSource();\n\t\t}\n\n\t\tif (this.searchText) {\n\t\t  this.groups = this.mdbTable.searchLocalDataBy(this.searchText);\n\t\t  this.mdbTable.setDataSource(prev);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t  this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n\t  this.mdbTablePagination.calculateFirstItemIndex();\n\t  this.mdbTablePagination.calculateLastItemIndex();\n\t  this.cdRef.detectChanges();\n\t}\n\n\tprivate isEditMode(state){\n\t\tthis.modalEditMode = state;\n\t\tif(state){\n\t\t  this.modalCreateEditTitle = \"Edit group\"\n\t\t  this.modalCreateEditButtonText = \"Update\"\n\t\t}else{\n\t\t  this.modalCreateEditTitle = \"Create group\"\n\t\t  this.modalCreateEditButtonText = \"Create\"\n\t\t}\n\t}\n\n\tprivate isNowCopyMode(){\n\t\tthis.modalCreateEditTitle = \"Copy group\"\n\t\tthis.modalCreateEditButtonText = \"Copy\"\n\t}\n\n\tprivate commaToBr(arr) {\n\t\t// console.log(arr)\n\t    var str = arr.join('\\n\\r');\n\t    return str;\n\t}\n\n\tpublic b64unpack(str){\n\t// console.log(JSON.parse(atob(str)))\n\t\treturn JSON.parse(atob(str));\n\t}\n\n\tprivate rawPrepare(str){\n\t\tconsole.log(this.rawPolicies[str])\n\t\tthis.rawView = this.b64unpack(this.rawPolicies[str]);\n\t}\n\n\n\tprivate getGroups(){\n\t\tthis.groups = {};\n\t\tthis.groupsWithMembers = [];\n\t\tthis.previous = \"\";\n\t\tthis.apiService.getGroups().subscribe((data)=>{\n\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t  console.log(data);\n\t\t  if(data!==null){\n\t\t    this.groups = data;\n\t\t    for (var i = 0; i < this.objectKeys(data).length; i++) {\n\t\t\t\t\tlet tempGroupName = data[i]\n\t\t\t\t\tthis.apiService.getGroupDescription(tempGroupName).subscribe((data)=>{\n\t\t\t\t\t\tif(data!==null){\n\t\t\t\t\t\t\tthis.groupsWithMembers.push(data)\n\t\t\t\t\t\t\tthis.mdbTable.setDataSource(this.groupsWithMembers);\n\t\t  \t\t\t\t\tthis.previous = this.mdbTable.getDataSource();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tconsole.log(this.groupsWithMembers)\n\t\t\tthis.groups = this.groupsWithMembers;\n\t\t  }\n\n\n\t\t});\n\t}\n\tprivate getListOfUsers(){\n\t\tthis.apiService.getUsers().subscribe((data)=>{\n\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t\tif(data!==null){\n\t\t\t\tthis.dropdownList = Object.entries(data).map((e) => ( { \"id\":e[0],\"itemName\":e[0] } ));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getGroupDescription(group){\n\t\tthis.isEditMode(true);\n\t\tconsole.log(group)\n\t\tthis.apiService.getGroupDescription(group).subscribe((data)=>{\n\t\t\tif(data!==null){\n\t\t\t\tconsole.log(data)\n\t\t\t\tthis.groupToUpdate = data;\n\t\t\t\tthis.newGroupName = data[\"name\"]\n\t\t\t\tthis.newGroupPolicy = data[\"policy\"]\n\t\t\t\tthis.newGroupStatus = data[\"status\"]\n\t\t\t\tfor (var i = 0; i < data[\"members\"].length; i++) {\n\t\t\t\t\tvar tempMember = data[\"members\"][i];\n\t\t\t\t\tthis.selectedItems.push({\"id\":tempMember,\"itemName\":tempMember})\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getListOfPolicies(){\n\t\tthis.apiService.getPolicies().subscribe((data)=>{\n\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t  this.policies = Object.keys(data);\n\t\t  this.rawPolicies = data;\n\t\t});\n\t}\n\n\tprivate resetForm(){\n\t\tthis.newGroupName = \"\";\n\t\tthis.selectedItems = [];\n\t\tthis.newGroupPolicy = \"\";\n\t\tthis.newGroupStatus = \"\";\n\t}\n\n\tprivate markGroupToDelete(group){\n\t\tconsole.log(\"GROUP TO DELETE\", group);\n\n\t\tthis.groupToDelete = group\n\t}\n\n\tprivate deleteGroup(){\n\t\tconsole.log(\"GROUP TO DELETE >>>\", this.groupToDelete);\n\n\t\tthis.apiService.updateMembersGroup(this.groupToDelete,[],\"true\").subscribe((data)=>{\n\t\t\t  this.apiService.validateAuthInResponse(data)\n\t      if(data[\"Success\"]){\n\t        this.toastr.success('Group: '+this.newGroupName+' has been removed', 'Success');\n\t        this.usersToRemove = [];\n\t\t\t\t\tthis.refreshList();\n\t\t\t\t\tthis.groupToDelete = \"\";\n\t      }else{\n\t        this.toastr.error(JSON.stringify(data), 'Error while removing group');\n\t\t\t\t\tthis.refreshList();\n\t\t\t\t\tthis.groupToDelete = \"\";\n\t      }\n\t    });\n\t}\n\n\tprivate wipeGroupMembers(){\n\n\t\tthis.apiService.updateMembersGroup(this.newGroupName,this.usersToRemove,\"true\").subscribe((data)=>{\n\t\t\t  this.apiService.validateAuthInResponse(data)\n\t      if(data[\"Success\"]){\n\t        this.toastr.success('Group: '+this.newGroupName+' members has been removed', 'Success');\n\t        this.usersToRemove = [];\n\t      }else{\n\t        this.toastr.error(JSON.stringify(data), 'Error while removing members from group');\n\t      }\n\t    });\n\t}\n\n\tprivate updatePolicy(){\n\t\tif(this.newGroupPolicy !== null && this.newGroupPolicy != \"\"){\n\t    \tthis.apiService.setPolicy(this.newGroupPolicy,this.newGroupName,\"true\").subscribe((data)=>{\n\t\t\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t      if(data[\"Success\"]){\n\t\t        this.toastr.success('Group: '+this.newGroupName+' policy has been set to '+this.newGroupPolicy, 'Success');\n\t\t      }else{\n\t\t        this.toastr.error(JSON.stringify(data), 'Error while setting policy to group');\n\t\t      }\n\t\t    });\n\t    }\n\t}\n\n\tprivate updateStatus(){\n\t\tif(this.newGroupStatus !== null && this.newGroupStatus != \"\"){\n\t    \tthis.apiService.setStatusGroup(this.newGroupName,this.newGroupStatus).subscribe((data)=>{\n\t\t\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t      if(data[\"Success\"]){\n\t\t        this.toastr.success('Group: '+this.newGroupName+' status has been set to '+this.newGroupStatus, 'Success');\n\t\t      }else{\n\t\t        this.toastr.error(JSON.stringify(data), 'Error while setting status to group');\n\t\t      }\n\t\t    });\n\t    }\n\t}\n\n\tprivate refreshList(){\n\t\tthis.updatePolicy();\n\t\tthis.updateStatus();\n\t\tthis.getGroups();\n\t}\n\n\tprivate createGroup(){\n\t\tconsole.log(\"CREATE GROUP CALLED\")\n\t\tlet newMembers = []\n\t\tfor (var i = 0; i < this.selectedItems.length; i++) {\n\t\t\tnewMembers.push(this.selectedItems[i].itemName)\n\t\t}\n\n\t\t//remove users from group\n\t\tconsole.log(\"grouptoUpdate\",this.groupToUpdate);\n\n\t\tif(this.groupToUpdate!==null && this.groupToUpdate!=\"\" && this.groupToUpdate){\n\t\t\tif(this.usersToRemove.length > 0){\n\t\t\t\tthis.wipeGroupMembers()\n\t\t\t}\n\t\t}\n\n\t\t//add all new users to group\n\t\tif(newMembers.length > 0){\n\t\t\tthis.apiService.updateMembersGroup(this.newGroupName,newMembers,\"false\").subscribe((data)=>{\n\t\t\t\t  this.apiService.validateAuthInResponse(data)\n\t\t      if(data[\"Success\"]){\n\t\t        this.toastr.success('Group: '+this.newGroupName+' has been created', 'Success');\n\t\t      }else{\n\t\t        this.toastr.error(JSON.stringify(data), 'Error while creating group');\n\t\t      }\n\t\t      this.refreshList();\n\t\t  });\n\t\t}else{\n\t\t\tthis.refreshList();\n\t\t}\n    this.isEditMode(false);\n    this.groupToUpdate = {};\n\t}\n\n}\n","// loader.interceptors.ts\nimport { Injectable } from '@angular/core';\nimport {\n    HttpErrorResponse,\n    HttpResponse,\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n    private requests: HttpRequest<any>[] = [];\n\n    constructor(private loaderService: LoaderService) { }\n\n    removeRequest(req: HttpRequest<any>) {\n        const i = this.requests.indexOf(req);\n        if (i >= 0) {\n            this.requests.splice(i, 1);\n        }\n        this.loaderService.isLoading.next(this.requests.length > 0);\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = req.clone({\n          withCredentials: true\n        });\n        this.requests.push(req);\n        this.loaderService.isLoading.next(true);\n        this.loaderService.isError = false;\n        return Observable.create(observer => {\n            const subscription = next.handle(req)\n                .subscribe(\n                    event => {\n                        if (event instanceof HttpResponse) {\n                            this.removeRequest(req);\n                            observer.next(event);\n                        }\n                    },\n                    err => {\n                        this.loaderService.isError = true;\n                        this.removeRequest(req);\n                        observer.error(err);\n                    },\n                    () => {\n                        this.removeRequest(req);\n                        observer.complete();\n                    });\n            // remove request from queue when cancelled\n            return () => {\n                this.removeRequest(req);\n                subscription.unsubscribe();\n            };\n        });\n    }\n}\n","//loader.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  public isError = false\n  public isLoading = new BehaviorSubject(false);\n  constructor() { }\n}\n","//loader.interceptor.ts\nimport { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../loader.service';\n\n@Component({\nselector: 'app-loading',\ntemplateUrl: './loader.component.html',\nstyleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\nloading: boolean;\nerror: boolean;\nconstructor(private loaderService: LoaderService) {\n  this.loaderService.isLoading.subscribe((v) => {\n    this.loading = v;\n    this.error = this.loaderService.isError;\n  });\n}\nngOnInit() {\n}\n\n}\n","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\nimport { ApiService } from '../api.service';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-policies',\n  templateUrl: './policies.component.html',\n  styleUrls: ['./policies.component.scss']\n})\nexport class PoliciesComponent implements OnInit {\n  objectKeys = Object.keys;\n  objectValues = Object.values;\n  policies = {};\n  policiesRaw = {};\n  b64decode;\n  rawView = '';\n  policyToDelete;\n  policyToUpdate;\n  modalEditMode;\n  jsn = JSON;\n  uploadPolicyName;\n  uploadPolicyFile;\n  uploadPolicyFileName;\n  downloadJsonHref;\n  modalCreateEditTitle;\n  modalCreateEditButtonText;\n\n  dropdownActionList = [];\n  dropdownAdminList = [];\n  dropdownConditionList = [];\n  dropdownConditionKeyList = [];\n\n  selectedActions = [];\n  selectedAdmins = [];\n  selectedCondition = [];\n  selectedConditionKey = [];\n\n  dropdownActionSettings = {};\n  dropdownAdminSettings = {};\n  dropdownConditionSettings = {};\n  dropdownConditionKeySettings = {};\n\n  advancedInterface = false;\n  advancedInterfaceLabel = \"advanced\"\n\n  newPolicy = {\n  \tname:\"\",\n  \teffect:\"allow\",\n  \tbucket:\"\",\n  };\n\n  newPolicyRaw = {\n  \tVersion:\"\",\n  \tStatement: []\n  }\n\n  newStatement = {\n    Action: [],\n    Effect: \"\",\n    Resource: [],\n    Condition: {},\n    Principal: \"\"\n  }\n\n  newConditionValue = \"\"\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  previous: string;\n\n  searchText: string = '';\n\n\n  constructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService, private sanitizer: DomSanitizer) { }\n\n  @HostListener('input') oninput() {\n    if(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n       this.searchItems();\n    }\n    if(event && event['target'] !== undefined && event.target[\"name\"] !== undefined && event.target[\"name\"] == \"newPolicyName\"){\n      if(this.modalEditMode){\n        if(this.newPolicy.name == this.policyToUpdate){\n          this.isEditMode(true)\n        }else{\n          this.isNowCopyMode();\n        }\n      }\n    }\n\n  }\n\n  @ViewChild('uploadPolicyFile', { static: true })\n  uploadFileInput: any;\n\n  ngOnInit() {\n  \tthis.getPolicies()\n\n\n  \tthis.dropdownActionList = [\n      {\"id\":1,\"itemName\":\"s3:AbortMultipartUpload\"},\n      {\"id\":2,\"itemName\":\"s3:CreateBucket\"},\n      {\"id\":3,\"itemName\":\"s3:DeleteBucket\"},\n      {\"id\":4,\"itemName\":\"s3:ForceDeleteBucket\"},\n      {\"id\":5,\"itemName\":\"s3:DeleteBucketPolicy\"},\n      {\"id\":6,\"itemName\":\"s3:DeleteObject\"},\n      {\"id\":7,\"itemName\":\"s3:GetBucketLocation\"},\n      {\"id\":8,\"itemName\":\"s3:GetBucketNotification\"},\n      {\"id\":9,\"itemName\":\"s3:GetBucketPolicy\"},\n      {\"id\":10,\"itemName\":\"s3:GetObject\"},\n      {\"id\":11,\"itemName\":\"s3:HeadBucket\"},\n      {\"id\":12,\"itemName\":\"s3:ListAllMyBuckets\"},\n      {\"id\":13,\"itemName\":\"s3:ListBucket\"},\n      {\"id\":14,\"itemName\":\"s3:ListBucketVersions\"},\n      {\"id\":15,\"itemName\":\"s3:ListBucketMultipartUploads\"},\n      {\"id\":16,\"itemName\":\"s3:ListenNotification\"},\n      {\"id\":17,\"itemName\":\"s3:ListenBucketNotification\"},\n      {\"id\":18,\"itemName\":\"s3:ListMultipartUploadParts\"},\n      {\"id\":19,\"itemName\":\"s3:PutLifecycleConfiguration\"},\n      {\"id\":20,\"itemName\":\"s3:GetLifecycleConfiguration\"},\n      {\"id\":21,\"itemName\":\"s3:PutBucketNotification\"},\n      {\"id\":22,\"itemName\":\"s3:PutBucketPolicy\"},\n      {\"id\":23,\"itemName\":\"s3:PutObject\"},\n      {\"id\":24,\"itemName\":\"s3:DeleteObjectVersion\"},\n      {\"id\":25,\"itemName\":\"s3:DeleteObjectVersionTagging\"},\n      {\"id\":26,\"itemName\":\"s3:GetObjectVersion\"},\n      {\"id\":27,\"itemName\":\"s3:GetObjectVersionTagging\"},\n      {\"id\":28,\"itemName\":\"s3:PutObjectVersionTagging\"},\n      {\"id\":29,\"itemName\":\"s3:BypassGovernanceRetention\"},\n      {\"id\":30,\"itemName\":\"s3:PutObjectRetention\"},\n      {\"id\":31,\"itemName\":\"s3:GetObjectRetention\"},\n      {\"id\":32,\"itemName\":\"s3:GetObjectLegalHold\"},\n      {\"id\":33,\"itemName\":\"s3:PutObjectLegalHold\"},\n      {\"id\":34,\"itemName\":\"s3:GetBucketObjectLockConfiguration\"},\n      {\"id\":35,\"itemName\":\"s3:PutBucketObjectLockConfiguration\"},\n      {\"id\":36,\"itemName\":\"s3:GetBucketTagging\"},\n      {\"id\":37,\"itemName\":\"s3:PutBucketTagging\"},\n      {\"id\":38,\"itemName\":\"s3:GetObjectTagging\"},\n      {\"id\":39,\"itemName\":\"s3:PutObjectTagging\"},\n      {\"id\":40,\"itemName\":\"s3:DeleteObjectTagging\"},\n      {\"id\":41,\"itemName\":\"s3:PutEncryptionConfiguration\"},\n      {\"id\":42,\"itemName\":\"s3:GetEncryptionConfiguration\"},\n      {\"id\":43,\"itemName\":\"s3:PutBucketVersioning\"},\n      {\"id\":44,\"itemName\":\"s3:GetBucketVersioning\"},\n      {\"id\":45,\"itemName\":\"s3:GetReplicationConfiguration\"},\n      {\"id\":46,\"itemName\":\"s3:PutReplicationConfiguration\"},\n      {\"id\":47,\"itemName\":\"s3:ReplicateObject\"},\n      {\"id\":48,\"itemName\":\"s3:ReplicateDelete\"},\n      {\"id\":49,\"itemName\":\"s3:ReplicateTags\"},\n      {\"id\":50,\"itemName\":\"s3:GetObjectVersionForReplication\"}\n    ];\n\n    this.dropdownActionSettings = {\n  \t\tsingleSelection: false,\n  \t\ttext:\"Select Actions\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true\n\t  };\n\n    this.dropdownAdminList = [\n      {\"id\":1,\"itemName\":\"admin:ConfigUpdate\"},\n      {\"id\":2,\"itemName\":\"admin:CreateUser\"},\n      {\"id\":3,\"itemName\":\"admin:DeleteUser\"},\n      {\"id\":4,\"itemName\":\"admin:ListUsers\"},\n      {\"id\":5,\"itemName\":\"admin:EnableUser\"},\n      {\"id\":6,\"itemName\":\"admin:DisableUser\"},\n      {\"id\":7,\"itemName\":\"admin:GetUser\"},\n      {\"id\":8,\"itemName\":\"admin:ServerInfo\"},\n      {\"id\":9,\"itemName\":\"admin:ServerUpdate\"},\n      {\"id\":10,\"itemName\":\"admin:StorageInfo\"},\n      {\"id\":11,\"itemName\":\"admin:DataUsageInfo\"},\n      {\"id\":12,\"itemName\":\"admin:TopLocks\"},\n      {\"id\":13,\"itemName\":\"admin:OBDInfo\"},\n      {\"id\":14,\"itemName\":\"admin:Profiling\"},\n      {\"id\":15,\"itemName\":\"admin:ServerTrace\"},\n      {\"id\":16,\"itemName\":\"admin:ConsoleLog\"},\n      {\"id\":17,\"itemName\":\"admin:KMSKeyStatus\"},\n      {\"id\":18,\"itemName\":\"admin:AddUserToGroup\"},\n      {\"id\":19,\"itemName\":\"admin:RemoveUserFromGroup\"},\n      {\"id\":20,\"itemName\":\"admin:GetGroup\"},\n      {\"id\":21,\"itemName\":\"admin:ListGroups\"},\n      {\"id\":22,\"itemName\":\"admin:EnableGroup\"},\n      {\"id\":23,\"itemName\":\"admin:DisableGroup\"},\n      {\"id\":24,\"itemName\":\"admin:CreatePolicy\"},\n      {\"id\":25,\"itemName\":\"admin:DeletePolicy\"},\n      {\"id\":26,\"itemName\":\"admin:GetPolicy\"},\n      {\"id\":27,\"itemName\":\"admin:AttachUserOrGroupPolicy\"},\n      {\"id\":28,\"itemName\":\"admin:ListUserPolicies\"}\n    ];\n\n    this.dropdownAdminSettings = {\n      singleSelection: false,\n      text:\"Select Admin actions for statement\",\n      selectAllText:'Select All',\n      unSelectAllText:'UnSelect All',\n      enableSearchFilter: true\n    };\n\n  \tthis.dropdownConditionList = [\n      {\"id\":1,\"itemName\":\"ArnEquals\"},\n      {\"id\":2,\"itemName\":\"ArnEqualsIfExists\"},\n      {\"id\":3,\"itemName\":\"ArnLike\"},\n      {\"id\":4,\"itemName\":\"ArnLikeIfExists\"},\n      {\"id\":5,\"itemName\":\"ArnNotEquals\"},\n      {\"id\":6,\"itemName\":\"ArnNotEqualsIfExists\"},\n      {\"id\":7,\"itemName\":\"ArnNotLike\"},\n      {\"id\":8,\"itemName\":\"ArnNotLikeIfExists\"},\n      {\"id\":9,\"itemName\":\"BinaryEquals\"},\n      {\"id\":10,\"itemName\":\"BinaryEqualsIfExists\"},\n      {\"id\":11,\"itemName\":\"BinaryNotEquals\"},\n      {\"id\":12,\"itemName\":\"BinaryNotEqualsIfExists\"},\n      {\"id\":13,\"itemName\":\"Bool\"},\n      {\"id\":14,\"itemName\":\"BoolIfExists\"},\n      {\"id\":15,\"itemName\":\"DateEquals\"},\n      {\"id\":16,\"itemName\":\"DateEqualsIfExists\"},\n      {\"id\":17,\"itemName\":\"DateGreaterThan\"},\n      {\"id\":18,\"itemName\":\"DateGreaterThanEquals\"},\n      {\"id\":19,\"itemName\":\"DateGreaterThanEqualsIfExists\"},\n      {\"id\":20,\"itemName\":\"DateGreaterThanIfExists\"},\n      {\"id\":21,\"itemName\":\"DateLessThan\"},\n      {\"id\":22,\"itemName\":\"DateLessThanEquals\"},\n      {\"id\":23,\"itemName\":\"DateLessThanEqualsIfExists\"},\n      {\"id\":24,\"itemName\":\"DateLessThanIfExists\"},\n      {\"id\":25,\"itemName\":\"DateNotEquals\"},\n      {\"id\":26,\"itemName\":\"DateNotEqualsIfExists\"},\n      {\"id\":27,\"itemName\":\"IpAddress\"},\n      {\"id\":28,\"itemName\":\"IpAddressIfExists\"},\n      {\"id\":29,\"itemName\":\"NotIpAddress\"},\n      {\"id\":30,\"itemName\":\"NotIpAddressIfExists\"},\n      {\"id\":31,\"itemName\":\"Null\"},\n      {\"id\":32,\"itemName\":\"NumericEquals\"},\n      {\"id\":33,\"itemName\":\"NumericEqualsIfExists\"},\n      {\"id\":34,\"itemName\":\"NumericGreaterThan\"},\n      {\"id\":35,\"itemName\":\"NumericGreaterThanEquals\"},\n      {\"id\":36,\"itemName\":\"NumericGreaterThanEqualsIfExists\"},\n      {\"id\":37,\"itemName\":\"NumericGreaterThanIfExists\"},\n      {\"id\":38,\"itemName\":\"NumericLessThan\"},\n      {\"id\":39,\"itemName\":\"NumericLessThanEquals\"},\n      {\"id\":40,\"itemName\":\"NumericLessThanEqualsIfExists\"},\n      {\"id\":41,\"itemName\":\"NumericLessThanIfExists\"},\n      {\"id\":42,\"itemName\":\"NumericNotEquals\"},\n      {\"id\":43,\"itemName\":\"NumericNotEqualsIfExists\"},\n      {\"id\":44,\"itemName\":\"StringEquals\"},\n      {\"id\":45,\"itemName\":\"StringEqualsIfExists\"},\n      {\"id\":46,\"itemName\":\"StringEqualsIgnoreCase\"},\n      {\"id\":47,\"itemName\":\"StringEqualsIgnoreCaseIfExists\"},\n      {\"id\":48,\"itemName\":\"StringLike\"},\n      {\"id\":49,\"itemName\":\"StringLikeIfExists\"},\n      {\"id\":50,\"itemName\":\"StringNotEquals\"},\n      {\"id\":51,\"itemName\":\"StringNotEqualsIfExists\"},\n      {\"id\":52,\"itemName\":\"StringNotEqualsIgnoreCase\"},\n      {\"id\":53,\"itemName\":\"StringNotEqualsIgnoreCaseIfExists\"},\n      {\"id\":54,\"itemName\":\"StringNotLike\"},\n      {\"id\":55,\"itemName\":\"StringNotLikeIfExists\"}\n    ];\n\n    this.dropdownConditionSettings = {\n  \t\tsingleSelection: true,\n  \t\ttext:\"Select Condition\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true\n\t  };\n\n  \tthis.dropdownConditionKeyList = [\n      {\"id\":1,\"itemName\":\"aws:CurrentTime\"},\n      {\"id\":2,\"itemName\":\"aws:EpochTime\"},\n      {\"id\":3,\"itemName\":\"aws:MultiFactorAuthAge\"},\n      {\"id\":4,\"itemName\":\"aws:MultiFactorAuthPresent\"},\n      {\"id\":5,\"itemName\":\"aws:PrincipalArn\"},\n      {\"id\":6,\"itemName\":\"aws:PrincipalOrgID\"},\n      {\"id\":7,\"itemName\":\"aws:PrincipalTag/${TagKey}\"},\n      {\"id\":8,\"itemName\":\"aws:PrincipalType\"},\n      {\"id\":9,\"itemName\":\"aws:Referer\"},\n      {\"id\":10,\"itemName\":\"aws:RequestTag/${TagKey}\"},\n      {\"id\":11,\"itemName\":\"aws:RequestedRegion\"},\n      {\"id\":12,\"itemName\":\"aws:SecureTransport\"},\n      {\"id\":13,\"itemName\":\"aws:SourceAccount\"},\n      {\"id\":14,\"itemName\":\"aws:SourceArn\"},\n      {\"id\":15,\"itemName\":\"aws:SourceIp\"},\n      {\"id\":16,\"itemName\":\"aws:SourceVpc\"},\n      {\"id\":17,\"itemName\":\"aws:SourceVpce\"},\n      {\"id\":18,\"itemName\":\"aws:TagKeys\"},\n      {\"id\":19,\"itemName\":\"aws:TokenIssueTime\"},\n      {\"id\":20,\"itemName\":\"aws:UserAgent\"},\n      {\"id\":21,\"itemName\":\"aws:userid\"},\n      {\"id\":22,\"itemName\":\"aws:username\"},\n      {\"id\":23,\"itemName\":\"s3:AccessPointNetworkOrigin\"},\n      {\"id\":24,\"itemName\":\"s3:DataAccessPointAccount\"},\n      {\"id\":25,\"itemName\":\"s3:DataAccessPointArn\"},\n      {\"id\":26,\"itemName\":\"s3:ExistingJobOperation\"},\n      {\"id\":27,\"itemName\":\"s3:ExistingJobPriority\"},\n      {\"id\":28,\"itemName\":\"s3:ExistingObjectTag/<key>\"},\n      {\"id\":29,\"itemName\":\"s3:JobSuspendedCause\"},\n      {\"id\":30,\"itemName\":\"s3:LocationConstraint\"},\n      {\"id\":31,\"itemName\":\"s3:RequestJobOperation\"},\n      {\"id\":32,\"itemName\":\"s3:RequestJobPriority\"},\n      {\"id\":33,\"itemName\":\"s3:RequestObjectTag/<key>\"},\n      {\"id\":34,\"itemName\":\"s3:RequestObjectTagKeys\"},\n      {\"id\":35,\"itemName\":\"s3:VersionId\"},\n      {\"id\":36,\"itemName\":\"s3:authtype\"},\n      {\"id\":37,\"itemName\":\"s3:delimiter\"},\n      {\"id\":38,\"itemName\":\"s3:locationconstraint\"},\n      {\"id\":39,\"itemName\":\"s3:max-keys\"},\n      {\"id\":40,\"itemName\":\"s3:object-lock-legal-hold\"},\n      {\"id\":41,\"itemName\":\"s3:object-lock-mode\"},\n      {\"id\":42,\"itemName\":\"s3:object-lock-remaining-retention-days\"},\n      {\"id\":43,\"itemName\":\"s3:object-lock-retain-until-date\"},\n      {\"id\":44,\"itemName\":\"s3:prefix\"},\n      {\"id\":45,\"itemName\":\"s3:signatureage\"},\n      {\"id\":46,\"itemName\":\"s3:signatureversion\"},\n      {\"id\":47,\"itemName\":\"s3:versionid\"},\n      {\"id\":48,\"itemName\":\"s3:x-amz-acl\"},\n      {\"id\":49,\"itemName\":\"s3:x-amz-content-sha256\"},\n      {\"id\":50,\"itemName\":\"s3:x-amz-copy-source\"},\n      {\"id\":51,\"itemName\":\"s3:x-amz-grant-full-control\"},\n      {\"id\":52,\"itemName\":\"s3:x-amz-grant-read\"},\n      {\"id\":53,\"itemName\":\"s3:x-amz-grant-read-acp\"},\n      {\"id\":54,\"itemName\":\"s3:x-amz-grant-write\"},\n      {\"id\":55,\"itemName\":\"s3:x-amz-grant-write-acp\"},\n      {\"id\":56,\"itemName\":\"s3:x-amz-metadata-directive\"},\n      {\"id\":57,\"itemName\":\"s3:x-amz-server-side-encryption\"},\n      {\"id\":58,\"itemName\":\"s3:x-amz-server-side-encryption-aws-kms-key-id\"},\n      {\"id\":59,\"itemName\":\"s3:x-amz-storage-class\"},\n      {\"id\":60,\"itemName\":\"s3:x-amz-website-redirect-location\"}\n    ];\n\n    this.dropdownConditionKeySettings = {\n  \t\tsingleSelection: true,\n  \t\ttext:\"Select Condition Key\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true\n\t  };\n  }\n\n  switchAdvanced(){\n    if(this.advancedInterface){\n      this.advancedInterface = false;\n      this.advancedInterfaceLabel = \"Advanced\"\n    }else{\n      this.advancedInterface = true;\n      this.advancedInterfaceLabel = \"Basic\"\n    }\n  }\n\n\tonActionItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedActions);\n\t}\n\tonActionItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedActions);\n\t}\n\tonActionSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonActionDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n\tonAdminItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedAdmins);\n\t}\n\tonAdminItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedAdmins);\n\t}\n\tonAdminSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonAdminDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n\n  //condition select actions\n  onConditionItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedCondition);\n\t}\n\tonConditionItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedCondition);\n\t}\n\tonConditionSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonConditionDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n  //condition key select actions\n  onConditionKeyItemSelect(item:any){\n      console.log(item);\n      console.log(this.selectedConditionKey);\n  }\n  onConditionKeyItemDeSelect(item:any){\n      console.log(item);\n      console.log(this.selectedConditionKey);\n  }\n  onConditionKeySelectAll(items: any){\n      console.log(items);\n  }\n  onConditionKeyDeSelectAll(items: any){\n      console.log(items);\n  }\n\n\n  searchItems() {\n    console.log(this.searchText)\n    const prev = this.mdbTable.getDataSource();\n\n    if (!this.searchText) {\n      this.mdbTable.setDataSource(this.previous);\n      this.policies = this.mdbTable.getDataSource();\n    }\n\n    if (this.searchText) {\n      this.policies = this.mdbTable.searchLocalDataBy(this.searchText);\n      this.mdbTable.setDataSource(prev);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  private resetPloicyForm(removeName){\n  \tconsole.log(removeName);\n  \tthis.selectedActions = [];\n  \tthis.selectedAdmins = []\n  \tif(!removeName){\n  \t\tthis.newPolicy.effect = \"Allow\"\n\t\t  this.newPolicy.bucket = \"\"\n  \t}else{\n  \t\tthis.newPolicy.name = \"\",\n  \t\tthis.newPolicy.effect = \"Allow\"\n  \t\tthis.newPolicy.bucket = \"\"\n  \t}\n\n    this.newStatement = {\n      Action: [],\n      Effect: \"\",\n      Resource: [],\n      Condition: {},\n      Principal: \"\"\n    }\n\n  }\n\n  private getPolicies(){\n  \tthis.apiService.getPolicies().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      this.policiesRaw = data;\n      const arrayOfPolicies = Object.entries(data).map((e) => ( { [e[0]]: e[1] } ));\n      this.policies = arrayOfPolicies;\n      this.mdbTable.setDataSource(arrayOfPolicies);\n      console.log(arrayOfPolicies)\n      this.previous = this.mdbTable.getDataSource();\n    });\n  }\n\n  private deletePolicy(){\n  \tthis.apiService.deletePolicy(this.policyToDelete).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      this.getPolicies();\n      if(data[\"Success\"]){\n        this.toastr.success('Policy '+this.policyToDelete+' has been deleted', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while deleting policy');\n      }\n    });\n  }\n\n  private downloadPolicy(jsonObj) {\n    var theJSON = JSON.stringify(jsonObj);\n    console.log(\"theJSON>>>>>>>>>>>\",theJSON);\n    var uri = this.sanitizer.bypassSecurityTrustUrl(\"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON));\n    this.downloadJsonHref = uri;\n  }\n\n  private rawPrepare(obj){\n  \tthis.rawView = obj;\n  }\n\n  private deletePolicyPrepare(policy){\n  \tthis.policyToDelete = policy\n  }\n\n  private prepareNewPolicyRaw(){\n  \tthis.newPolicyRaw = {\n\t  \tVersion:\"2012-10-17\",\n\t  \tStatement: []\n  \t}\n  }\n\n  private removeCondition(valueId,keyName,conditionName){\n    console.log(this.newStatement)\n    console.log(valueId,keyName,conditionName)\n    this.newStatement.Condition[conditionName][keyName].splice(valueId,1)\n  }\n\n  private addCondition(){\n    console.log(this.selectedCondition[0].itemName)\n    console.log(this.selectedConditionKey[0].itemName)\n    console.log(this.newConditionValue)\n    if(!this.newStatement.Condition){\n      this.newStatement.Condition = {}\n    }\n    if(this.newStatement.Condition[this.selectedCondition[0].itemName]){\n      if(this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName]){\n        this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName].push(this.newConditionValue)\n      }else{\n        this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName] = []\n        this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName].push(this.newConditionValue)\n      }\n    }else{\n      this.newStatement.Condition[this.selectedCondition[0].itemName] = {}\n      this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName] = []\n      this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName].push(this.newConditionValue)\n    }\n\n    this.selectedCondition = []\n    this.selectedConditionKey = []\n    this.newConditionValue = \"\"\n    console.log(this.newStatement.Condition)\n  }\n\n\n  private addStatement(){\n    console.log(\"called add statement\");\n\n    if(this.selectedActions.length>0){\n    \tif(this.selectedActions.length == this.dropdownActionList.length){\n    \t\tthis.newStatement.Action.push(\"s3:*\")\n    \t}else{\n  \t  \tfor (var i = 0; i < this.selectedActions.length; i++) {\n  \t  \t\tthis.newStatement.Action.push(this.selectedActions[i].itemName)\n  \t  \t}\n  \t  }\n    }else{\n      if(this.selectedAdmins.length == this.dropdownAdminList.length){\n    \t\tthis.newStatement.Action.push(\"admin:*\")\n    \t}else{\n  \t  \tfor (var i = 0; i < this.selectedAdmins.length; i++) {\n  \t  \t\tthis.newStatement.Action.push(this.selectedAdmins[i].itemName)\n  \t  \t}\n  \t  }\n    }\n  \tthis.newStatement.Effect = this.newPolicy.effect\n\n   \tconsole.log(this.newStatement)\n    if(this.newStatement.Condition && Object.entries(this.newStatement.Condition).length === 0 && this.newStatement.Condition.constructor === Object){\n      console.log(\"Condition removed cause empty\")\n      delete this.newStatement.Condition\n    }else{\n      if(!this.newStatement.Principal || this.newStatement.Principal == \"\"){\n        console.log(\"Principal set to * cause condition not empty\")\n        this.newStatement.Principal = \"*\"\n      }\n    }\n\n  \tthis.newPolicyRaw.Statement.push(this.newStatement);\n  \tconsole.log(this.newPolicyRaw)\n\n  \tthis.resetPloicyForm(false);\n  }\n\n  private editStatement(i){\n    console.log(\"called Edit Statement\");\n\n    this.newStatement = this.newPolicyRaw.Statement[i]\n    this.newPolicy.effect = this.newPolicyRaw.Statement[i].Effect\n\n    switch ((this.newStatement.Action[0]).substring(0, 3)) {\n      case \"s3:\":\n        if(this.newStatement.Action[0] == \"s3:*\"){\n            for (var g = 0; g < this.dropdownActionList.length; g++) {\n              this.selectedActions.push({\"id\":this.dropdownActionList[g].id,\"itemName\":this.dropdownActionList[g].itemName})\n            }\n        }else{\n          for (var g = 0; g < this.newStatement.Action.length; g++) {\n            this.selectedActions.push({\"id\":g,\"itemName\":this.newStatement.Action[g]})\n          }\n        }\n        break;\n      case \"adm\":\n        if(this.newStatement.Action[0] == \"admin:*\"){\n            for (var g = 0; g < this.dropdownAdminList.length; g++) {\n              this.selectedAdmins.push({\"id\":this.dropdownAdminList[g].id,\"itemName\":this.dropdownAdminList[g].itemName})\n            }\n        }else{\n          for (var g = 0; g < this.newStatement.Action.length; g++) {\n            this.selectedAdmins.push({\"id\":g,\"itemName\":this.newStatement.Action[g]})\n          }\n        }\n        break;\n    }\n\n\n    this.newStatement.Action = []\n    this.newPolicyRaw.Statement.splice(i,1)\n  }\n\n  private addBucketStatement(){\n    this.newStatement.Resource.push(\"arn:aws:s3:::\"+this.newPolicy.bucket)\n    this.newPolicy.bucket = ''\n  }\n\n  private removeStatement(i){\n  \tthis.newPolicyRaw.Statement.splice(i,1)\n  }\n\n  private removeBucketStatement(i){\n    this.newStatement.Resource.splice(i,1)\n  }\n\n  private fileChanged(e) {\n    console.log(\"eventTriggered\");\n\n    this.uploadPolicyFile = e.target.files[0];\n    this.uploadPolicyFileName = e.target.files[0].name;\n  }\n\n  private uploadPolicy(){\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      console.log(fileReader.result);\n      let policyFileString = ((fileReader.result).toString()).replace(/\\n/g, ' ').replace(/\\r/g, ' ')\n      this.apiService.addPolicy(this.uploadPolicyName,policyFileString).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Policy '+this.newPolicy.name+' has been created', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating policy');\n        }\n        this.getPolicies();\n      });\n    }\n    fileReader.readAsText(this.uploadPolicyFile);\n  }\n\n  private resetUploadForm(){\n    this.uploadFileInput.nativeElement.value = \"\";\n    this.uploadPolicyFile;\n    this.uploadPolicyName = \"\";\n    this.uploadPolicyFileName = \"\";\n  }\n\n  private createPolicy(){\n  \tconsole.log(this.newPolicy, this.newPolicyRaw)\n\n  \tlet policyString = JSON.stringify(this.newPolicyRaw);\n\n  \tthis.apiService.addPolicy(this.newPolicy.name,policyString).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Policy '+this.newPolicy.name+' has been created', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while creating policy');\n      }\n      this.getPolicies();\n    });\n  }\n\n  private isEditMode(state){\n    this.modalEditMode = state;\n    if(state){\n      this.modalCreateEditTitle = \"Edit policy\"\n      this.modalCreateEditButtonText = \"Update\"\n    }else{\n      this.modalCreateEditTitle = \"Build up new policy\"\n      this.modalCreateEditButtonText = \"Create\"\n    }\n  }\n\n  private isNowCopyMode(){\n    this.modalCreateEditTitle = \"Copy policy\"\n    this.modalCreateEditButtonText = \"Copy\"\n  }\n\n  private updatePolicyPrepare(policy){\n    this.policyToUpdate = policy\n    this.prepareNewPolicyRaw()\n    this.resetPloicyForm(false)\n    this.newPolicy.name = policy;\n\n    var oldPolicy = this.policiesRaw[policy]\n    this.newPolicyRaw.Statement = oldPolicy.Statement;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.scss']\n})\nexport class ServerComponent implements OnInit {\n\n  objectKeys = Object.keys;\n  objectValues = Object.values;\n  math = Math;\n  rawView = '';\n  serviceInfo;\n  diskUsageInfo;\n  bucketSizes=[];\n  hgChartDatasets=[{data: [], label: 'Number of objects'}];\n  hgChartLabels=[];\n  hgChartType = 'radar';\n  hgChartColors = [\n      {\n          backgroundColor: 'rgba(151,187,205,0.9)',\n          borderColor: 'rgba(151,187,205,1)',\n          borderWidth: 2,\n          pointBackgroundColor: 'rgba(151,187,205,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(151,187,205,1)'\n      }\n  ];\n  hgChartOptions = {\n      responsive: true\n  };\n\n  szChartDatasets=[{data: [], label: 'Size of bucket in Bytes'}];\n  szChartLabels=[];\n  szChartType = 'bar';\n  szChartColors = [\n      {\n          backgroundColor: 'rgba(151,187,205,0.9)',\n          borderColor: 'rgba(151,187,205,1)',\n          borderWidth: 2,\n          pointBackgroundColor: 'rgba(151,187,205,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(151,187,205,1)'\n      }\n  ];\n  szChartOptions = {\n      responsive: true\n  };\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n  \tthis.serverInfo()\n    this.diskInfo()\n  }\n\n  public hgChartClicked(e: any): void {\n  }\n\n  public hgChartHovered(e: any): void {\n  }\n\n  public szChartClicked(e: any): void {\n  }\n\n  public szChartHovered(e: any): void {\n  }\n\n  private serverInfo(){\n  \tthis.apiService.serverInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.serviceInfo = data;\n    });\n  }\n\n  private diskInfo(){\n  \tthis.apiService.diskInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(\"Disk Usage >>>>>>>>>>>>\",data);\n      this.diskUsageInfo = data;\n      if(data.hasOwnProperty('objectsSizesHistogram')){\n        var objectsSizesHistogram = this.diskUsageInfo.objectsSizesHistogram;\n        var histogramKeysRawArr = [];\n        var histogramValsRawArr = [];\n        if(objectsSizesHistogram){\n          histogramKeysRawArr = Object.keys(objectsSizesHistogram)\n          histogramValsRawArr = Object.values(objectsSizesHistogram)\n        }\n        this.hgChartDatasets[0].data = histogramValsRawArr;\n\n        this.hgChartLabels = [];\n        for (let i = 0; i < histogramKeysRawArr.length; i++) {\n          var histogramLabel = histogramKeysRawArr[i].split('_').join(' ');\n          this.hgChartLabels.push(histogramLabel)\n        }\n      }\n\n      if(data.hasOwnProperty('bucketsSizes') && this.diskUsageInfo.bucketsSizes != {} && this.diskUsageInfo.bucketsSizes != null ){\n        var objectBucketSizes = this.diskUsageInfo.bucketsSizes;\n        const bucketSizesKeysRawArr = Object.keys(objectBucketSizes)\n        const bucketSizesValsRawArr = Object.values(objectBucketSizes)\n        this.szChartDatasets[0].data = bucketSizesValsRawArr;\n        this.szChartLabels= bucketSizesKeysRawArr;\n      }\n    });\n  }\n\n  private rawPrepare(obj){\n    this.rawView = obj;\n  }\n\n}\n","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule } from \"@angular/forms\";\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, AfterViewInit {\n  validatingForm: FormGroup;\n  updateUser: FormGroup;\n  users = {};\n  usersRaw = {};\n  userToDelete;\n  userToUpdate;\n  objectKeys = Object.keys;\n  objectValues = Object.values;\n  jsn = JSON;\n  policies;\n  updateStatusValues = ['enabled','disabled'];\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  previous: string;\n\n  searchText: string = '';\n\n  constructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService) { }\n\n  @HostListener('input') oninput() {\n    if(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n       this.searchItems();\n    }\n  }\n\n  ngOnInit() {\n  \tthis.getListOfUsers()\n  \tthis.getListOfPolicies()\n    this.resetForm()\n    this.updateUserFrom()\n  }\n\n  searchItems() {\n    console.log(this.searchText)\n    const prev = this.mdbTable.getDataSource();\n\n    if (!this.searchText) {\n      this.mdbTable.setDataSource(this.previous);\n      this.users = this.mdbTable.getDataSource();\n    }\n\n    if (this.searchText) {\n      this.users = this.mdbTable.searchLocalDataBy(this.searchText);\n      this.mdbTable.setDataSource(prev);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  get newUserAccess() {\n\treturn this.validatingForm.get('newUserAccess');\n  }\n\n  get newUserSecret() {\n\treturn this.validatingForm.get('newUserSecret');\n  }\n\n  get newUserPolicy() {\n\treturn this.validatingForm.get('newUserPolicy');\n  }\n\n  private generatePassword(length) {\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    var retVal = \"\";\n    for (var i = 0, n = charset.length; i < length; ++i) {\n        retVal += charset.charAt(Math.floor(Math.random() * n));\n    }\n\n    return retVal;\n  }\n\n  get accessKeyUpdate() {\n    return this.updateUser.get('accessKeyUpdate');\n  }\n\n  get secretKeyUpdate() {\n    return this.updateUser.get('secretKeyUpdate');\n  }\n\n  get policyUpdate() {\n    return this.updateUser.get('policyUpdate');\n  }\n\n  get statusUpdate() {\n    return this.updateUser.get('statusUpdate');\n  }\n\n  private updateUserFrom(){\n    this.updateUser = new FormGroup({\n      accessKeyUpdate: new FormControl({value: '', disabled: true}, Validators.required),\n      secretKeyUpdate: new FormControl(''),\n      policyUpdate: new FormControl('', Validators.required),\n      statusUpdate: new FormControl('', Validators.required)\n    });\n  }\n\n  private resetForm(){\n  \tthis.validatingForm = new FormGroup({\n      newUserAccess: new FormControl(this.generatePassword(16), Validators.minLength(5)),\n      newUserSecret: new FormControl(this.generatePassword(24), Validators.minLength(10)),\n      newUserPolicy: new FormControl('',Validators.minLength(0))\n    });\n  }\n\n  private getListOfUsers(){\n  \tthis.apiService.getUsers().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data)\n      this.usersRaw = data;\n      const arrayOfUsers = Object.entries(data).map((e) => ( { [e[0]]: e[1] } ));\n      this.users = arrayOfUsers;\n      this.mdbTable.setDataSource(arrayOfUsers);\n      console.log(arrayOfUsers)\n      this.previous = this.mdbTable.getDataSource();\n    });\n  }\n\n\n  private getListOfPolicies(){\n  \tthis.apiService.getPolicies().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.policies = Object.keys(data);\n    });\n  }\n\n  private createUser(){\n  \tvar userAccess = this.newUserAccess.value;\n  \tvar userSecret = this.newUserSecret.value;\n  \tvar userPolicy = this.newUserPolicy.value;\n\n  \tconsole.log(userPolicy)\n\n  \tif(userPolicy!=''){\n  \t\tthis.apiService.addUserExtended(userAccess,userSecret,userPolicy).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n\t      console.log(data);\n\t      this.getListOfUsers();\n        if(data[\"Success\"]){\n          this.toastr.success('User: '+userAccess+' with policy '+userPolicy+' has been created', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating user');\n        }\n\t    });\n  \t}else{\n  \t\tthis.apiService.addUser(userAccess,userSecret).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n\t      console.log(data);\n\t      this.getListOfUsers();\n        if(data[\"Success\"]){\n          this.toastr.success('User: '+userAccess+' has been created', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating user');\n        }\n\t    });\n  \t}\n  }\n\n  private setStatusUser(accessKey,status){\n  \tif(status == 'enabled'){\n  \t\tstatus = 'disabled'\n  \t}else{\n  \t\tstatus = 'enabled'\n  \t}\n  \tthis.apiService.setStatusUser(accessKey,status).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n          this.toastr.success('User: '+accessKey+' status has changed to '+status, 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while changing state for user');\n      }\n      this.getListOfUsers();\n    });\n  }\n\n  private deleteUserPrepare(accessKey){\n  \tthis.userToDelete = accessKey\n  }\n\n  private updateUserPrepare(accessKey){\n    this.userToUpdate = accessKey\n    this.updateUser.patchValue({'accessKeyUpdate': accessKey});\n    if(this.usersRaw[accessKey]['policyName']){\n      this.updateUser.patchValue({'policyUpdate': this.usersRaw[accessKey]['policyName']});\n    }\n    if(this.usersRaw[accessKey]['status']){\n      this.updateUser.patchValue({'statusUpdate': this.usersRaw[accessKey]['status']});\n    }\n    console.log(this.usersRaw[accessKey])\n  }\n\n  private updateGenNewPassword(){\n    this.updateUser.patchValue({'secretKeyUpdate': this.generatePassword(24)});\n  }\n\n  private updateUserSave(){\n    var updatedSecret = this.updateUser.value.secretKeyUpdate;\n    var updatedPolicy = this.updateUser.value.policyUpdate;\n    var updatedStatus = this.updateUser.value.statusUpdate;\n\n    this.apiService.updateUser(this.userToUpdate,updatedSecret,updatedPolicy,updatedStatus).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        this.getListOfUsers();\n        if(data[\"Success\"]){\n          this.toastr.success('User: '+this.userToUpdate+' has been updated', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while updating user');\n        }\n    });\n  }\n\n\n  private deleteUser(){\n  \tthis.apiService.deleteUser(this.userToDelete).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n          this.toastr.success('User: '+this.userToDelete+' has been deleted', 'Success');\n        }\n      this.updateUserFrom();\n      this.getListOfUsers();\n    });\n  }\n\n}\n","export const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"div.lifecycle-preview {\\n  overflow-y: scroll;\\n}\\n\\ntable.lifecycle-preview {\\n  text-align: center;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1Y2tldHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtBQUNKIiwiZmlsZSI6ImJ1Y2tldHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYubGlmZWN5Y2xlLXByZXZpZXcge1xuICAgIG92ZXJmbG93LXk6c2Nyb2xsO1xufVxuXG50YWJsZS5saWZlY3ljbGUtcHJldmlldyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyAgXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncm91cHMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"dialog {\\n  width: 300px;\\n}\\n\\ndialog::-webkit-backdrop {\\n  background: rgba(0, 0, 0, 0.7);\\n}\\n\\ndialog::backdrop {\\n  background: rgba(0, 0, 0, 0.7);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSjs7QUFDRztFQUNDLDhCQUFBO0FBRUo7O0FBSEc7RUFDQyw4QkFBQTtBQUVKIiwiZmlsZSI6ImxvYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpYWxvZyB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgfVxuICAgZGlhbG9nOjpiYWNrZHJvcCB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjcpO1xuICAgfSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2xpY2llcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJ2ZXIuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2Vycy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<style>\\n  @import url('https://fonts.googleapis.com/css?family=Righteous&display=swap');\\n\\n  .content {\\n    display: flex;\\n    margin: 32px auto;\\n    padding: 0 16px;\\n    max-width: 960px;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  .hidden {\\n    display: none;\\n  }\\n\\n  .visible {\\n    display: flex !important;\\n  }\\n\\n</style>\\n<!-- Navbar -->\\n<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark special-color-dark\\\">\\n\\n    <!-- Navbar brand -->\\n    <mdb-navbar-brand><a class=\\\"navbar-brand\\\" href=\\\"#\\\">Adminio UI </a></mdb-navbar-brand>\\n\\n    <!-- Collapsible content -->\\n    <links>\\n\\n        <!-- Links -->\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"nav-link waves-light\\\" mdbWavesEffect>Buckets</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/users']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Users</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/policies']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Policies</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/groups']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Groups</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/server']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Server</a>\\n            </li>\\n        </ul>\\n        <!-- Links -->\\n        <!-- Search form -->\\n        <form class=\\\"form-inline select\\\" mdbWavesEffect *ngIf=\\\"apiService.getMultiBackendStatus()\\\">\\n          <select class=\\\"select-text\\\" (change)=apiService.overrideBackend(apiService.baseUrl) [(ngModel)]=\\\"apiService.baseUrl\\\" [ngModelOptions]=\\\"{standalone: true}\\\" title=\\\"Select backend\\\">\\n            <option value=\\\"\\\" disabled selected>Select backend</option>\\n            <option [value]=\\\"backend.url\\\" *ngFor=\\\"let backend of apiService.getBackendsUrls()\\\">{{backend.name}} ({{backend.url}})</option>\\n          </select>\\n          <span class=\\\"select-highlight\\\"></span>\\n\\t\\t\\t\\t\\t<span class=\\\"select-bar\\\"></span>\\n        </form>\\n    </links>\\n    <!-- Collapsible content -->\\n\\n</mdb-navbar>\\n<!--/.Navbar-->\\n<app-loading></app-loading>\\n\\n<router-outlet></router-outlet>\\n\\n<!-- Footer -->\\n<footer class=\\\"page-footer font-small transparent fixed-bottom\\\">\\n\\n  <!-- Copyright -->\\n  <div class=\\\"text-right py-3 transparent\\\">\\n    <a href=\\\"https://github.com/rzrbld/adminio-ui/issues\\\">create issue or fork at github.com<mdb-icon fab icon=\\\"github-alt\\\" size=\\\"1x\\\" class=\\\"px-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a> | v:1.9 &nbsp;&nbsp;\\n  </div>\\n  <!-- Copyright -->\\n\\n</footer>\\n<!-- Footer -->\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-9 col-md-9\\\">\\n            <h1>Buckets</h1>\\n        </div>\\n        <div class=\\\"col-md-3 col-3 align-right\\\">\\n            <button type=\\\"button\\\" mdbBtn gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addBucket\\\" mdbWavesEffect (click)=\\\"resetForm();addBucketModal.show()\\\"><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add bucket</button>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n          <div class=\\\"md-form\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n            <label for=\\\"search\\\">Search</label>\\n          </div>\\n        </div>\\n    </div>\\n\\t<table mdbTable class=\\\"table\\\" #tableBuckets=\\\"mdbTable\\\" >\\n\\t  <thead class=\\\"thead-light\\\">\\n\\t    <tr>\\n\\t      <th>Name</th>\\n\\t      <th>Tags</th>\\n\\t      <th>Creation Date</th>\\n\\t      <th *ngIf=\\\"(diskUsageInfo?.bucketsSizes | json) != ({} | json)\\\">Size</th>\\n\\t      <th>Quota</th>\\n\\t      <th *ngIf=\\\"serviceInfo?.sqsARN\\\">Event</th>\\n\\t      <th>Options</th>\\n\\t    </tr>\\n\\t  </thead>\\n\\t  <tbody *ngIf=\\\"buckets\\\">\\n\\t    <tr mdbTableCol *ngFor=\\\"let b of objectKeys(buckets); let i = index\\\">\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n          <strong>{{buckets[b].name}}</strong>\\n          <span *ngIf=\\\"buckets[b].encryption?.Rules\\\" mdbTooltip=\\\"Bucket encrypted\\\">&nbsp;&nbsp;<mdb-icon fas icon=\\\"lock\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></span>\\n          <span mdbTooltip=\\\"Policy. Click to download\\\" (click)=\\\"downloadPolicy(buckets[b].name, 'policy_'+buckets[b].name+'_'+buckets[b].policy+'.json')\\\" class=\\\"ml-2 badge badge-primary pointer\\\" *ngIf=\\\"buckets[b].policy!='none'\\\">{{buckets[b].policy}}</span>\\n        </td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n          <span *ngIf=\\\"objectKeys(buckets[b].tags)?.length > 0\\\">\\n            <ul class=\\\"type-none\\\">\\n              <li *ngFor=\\\"let tag of objectKeys(buckets[b].tags)\\\" class=\\\"type-none\\\">{{tag}}: {{buckets[b].tags[tag]}}</li>\\n            </ul>\\n          </span>\\n        </td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{buckets[b].info.creationDate | date : \\\"dd/MM/yy HH:mm:ss\\\" }}</td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex && (diskUsageInfo?.bucketsSizes | json) != ({} | json)\\\">\\n          <span *ngIf=\\\"diskUsageInfo?.bucketsSizes\\\" mdbTooltip=\\\"{{diskUsageInfo?.bucketsSizes[buckets[b].name]}} bytes\\\" placement=\\\"top\\\">\\n            {{(math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024)+'').length > 3 ? math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024/1024)+' Gb' : isNaN(math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024)) ? '&ndash;' : math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024) +' Mb'}}\\n          </span>\\n        </td>\\n        <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex && (diskUsageInfo?.bucketsSizes | json) != ({} | json)\\\">\\n          <span *ngIf=\\\"buckets[b].quota?.quotatype\\\">\\n            <span class=\\\"badge badge-success\\\" *ngIf=\\\"buckets[b].quota?.quotatype == 'hard'\\\">{{buckets[b].quota?.quotatype}}</span>\\n            <span class=\\\"badge badge-secondary\\\" *ngIf=\\\"buckets[b].quota?.quotatype == 'fifo'\\\">{{buckets[b].quota?.quotatype}}</span>\\n          </span>\\n          <span *ngIf=\\\"buckets[b].quota?.quota > 0\\\" mdbTooltip=\\\"{{buckets[b].quota?.quota}} bytes\\\" placement=\\\"top\\\">\\n            {{(math.round(buckets[b].quota?.quota/1024/1024)+'').length > 3 ? math.round(buckets[b].quota?.quota/1024/1024/1024)+' Gb' : isNaN(math.round(buckets[b].quota?.quota/1024/1024)) ? '&ndash;' : math.round(buckets[b].quota?.quota/1024/1024) +' Mb'}}\\n          </span>\\n          <span *ngIf=\\\"buckets[b].quota?.quota < 1\\\" mdbTooltip=\\\"No quota limits\\\" placement=\\\"top\\\">\\n            &infin;\\n          </span>\\n        </td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex && serviceInfo?.sqsARN\\\">\\n          <span *ngIf=\\\"buckets[b].events.LambdaConfigs?.length\\\">\\n            Lambda:\\n            <span *ngFor=\\\"let c of buckets[b].events?.LambdaConfigs\\\">\\n              {{c.Lambda}}<br/>\\n              <ul class=\\\"type-none\\\">\\n                <li *ngFor=\\\"let e of c?.Events\\\">\\n                  {{e}}\\n                </li>\\n              </ul>\\n            </span>\\n          </span>\\n          <span *ngIf=\\\"buckets[b].events.TopicConfigs?.length\\\">\\n          Topic:\\n          <span *ngFor=\\\"let c of buckets[b].events?.TopicConfigs\\\">\\n             {{c.Topic}} <br/>\\n              <ul class=\\\"type-none\\\">\\n                <li *ngFor=\\\"let e of c?.Events\\\">\\n                  {{e}}\\n                </li>\\n              </ul>\\n            </span>\\n          </span>\\n          <span *ngIf=\\\"buckets[b].events.QueueConfigs?.length\\\">\\n          Queue:\\n            <span *ngFor=\\\"let c of buckets[b].events?.QueueConfigs\\\">\\n              {{c.Queue}} <br/>\\n              <ul class=\\\"type-none\\\">\\n                <li *ngFor=\\\"let e of c?.Events\\\">\\n                  {{e}}\\n                </li>\\n              </ul>\\n            </span>\\n          </span>\\n        </td>\\n\\t  \\t  <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t  \\t  \\t<a mdbTooltip=\\\"Update Bucket\\\" placement=\\\"top\\\" (click)=\\\"updateBucketPrepare(buckets[b].name,buckets[b].quota?.quota,buckets[b].quota?.quotatype,buckets[b].tags); editBucketModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t  \\t  \\t<a mdbTooltip=\\\"Remove Bucket\\\" placement=\\\"top\\\" (click)=\\\"deleteBucketPrepare(buckets[b].name); deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t  \\t  \\t<a mdbTooltip=\\\"Bucket Lifecycyle\\\" placement=\\\"top\\\" (click)=\\\"bucketLifecycle(buckets[b].name); downloadLifecycle(buckets[b].name); resetLifecycleForm(); lifecycyleModal.show()\\\"><mdb-icon fas icon=\\\"recycle\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t  \\t  \\t<a *ngIf=\\\"buckets[b].events.LambdaConfigs?.length || buckets[b].events.TopicConfigs?.length || buckets[b].events.QueueConfigs?.length\\\" mdbTooltip=\\\"Remove Bucket Events\\\" placement=\\\"top\\\" (click)=\\\"removeBucketNotificationPrepare(buckets[b].name); removeNotificationApproveModal.show()\\\"><mdb-icon fas icon=\\\"bell-slash\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\" *ngIf=\\\"buckets[b].events.LambdaConfigs?.length || buckets[b].events.TopicConfigs?.length || buckets[b].events.QueueConfigs?.length\\\">&nbsp;</span>\\n          <a *ngIf=\\\"buckets[b].quota?.quota\\\" mdbTooltip=\\\"Remove Bucket Quota\\\" placement=\\\"top\\\" (click)=\\\"deleteBucketQuotaPrepare(buckets[b].name); removeQuotaApproveModal.show()\\\"><mdb-icon fas icon=\\\"expand\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n          <a *ngIf=\\\"buckets[b].encryption?.Rules\\\" mdbTooltip=\\\"Remove Bucket Encryption\\\" placement=\\\"top\\\" (click)=\\\"deleteBucketEncryptionPrepare(buckets[b].name); removeEncryptionApproveModal.show()\\\"><mdb-icon fas icon=\\\"unlock-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  </td>\\n\\t    </tr>\\n\\t  </tbody>\\n      <tfoot class=\\\"grey lighten-5 w-100\\\">\\n        <tr>\\n          <td colspan=\\\"100%\\\">\\n            <mdb-table-pagination [tableEl]=\\\"tableBuckets\\\" [searchDataSource]=\\\"buckets\\\"></mdb-table-pagination>\\n          </td>\\n        </tr>\\n      </tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- lifecycyle modal -->\\n\\n<div mdbModal #lifecycyleModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"lifecycyleModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{lifecycleBucketName}} Bucket Lifecycyle</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n                  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"downloadLifecycleAvailable == 1\\\" >\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>This bucket already have a lifecycyle policy, you can export it as JSON by clicking on \\\"dowload icon\\\" >\\n                    <a mdbTooltip=\\\"Download Lifecycle\\\" placement=\\\"top\\\" [href]=\\\"downloadJsonHref\\\" download=\\\"{{lifecycleBucketName}}-lifecycle.json\\\"><mdb-icon fas icon=\\\"download\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n                    <br/>\\n                    Or override it by upload a new lifecycle policy.\\n                    <br/>\\n                    <br/>\\n                    <b>Current lifecycle:</b>\\n                    <div class=\\\"lifecycle-preview\\\">\\n                      <table mdbTable class=\\\"table table-sm lifecycle-preview\\\" #tableBuckets=\\\"mdbTable\\\" *ngIf=\\\"lifecycleCurrentData?.Rules\\\">\\n                        <thead>\\n                          <tr>\\n                            <th>ID</th>\\n                            <th>Prefix</th>\\n                            <th>Enabled</th>\\n                            <th>Expiry</th>\\n                            <th>Date/Days</th>\\n                            <th>Transition</th>\\n                            <th>Date/Days</th>\\n                            <th>Storage-Class</th>\\n                            <th>Tags</th>\\n                          </tr>\\n                        </thead>\\n                        <tbody >\\n                          <tr mdbTableCol *ngFor=\\\"let b of objectKeys(lifecycleCurrentData?.Rules); let i = index\\\">\\n                            <td>{{lifecycleCurrentData?.Rules[b]?.ID}}</td>\\n                            <td class=\\\"align-middle\\\">{{lifecycleCurrentData?.Rules[b]?.Prefix}}{{lifecycleCurrentData?.Rules[b]?.RuleFilter?.And?.Prefix}}{{lifecycleCurrentData?.Rules[b]?.RuleFilter?.Prefix}}</td>\\n                            <td><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Status == 'Enabled'\\\"><i class=\\\"fas fa-check\\\"></i></span><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Status != 'Enabled'\\\">-=<i class=\\\"fas fa-times\\\"></i></span></td>\\n                            <td><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Expiration?.Date != '0001-01-01T00:00:00Z' || lifecycleCurrentData?.Rules[b]?.Expiration?.Days\\\"><i class=\\\"fas fa-check\\\"></i></span><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Expiration?.Date == '0001-01-01T00:00:00Z' && !lifecycleCurrentData?.Rules[b]?.Expiration?.Days\\\"><i class=\\\"fas fa-times\\\"></i></span></td>\\n                            <td><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Expiration?.Date != '0001-01-01T00:00:00Z'\\\">{{lifecycleCurrentData?.Rules[b]?.Expiration?.Date}}</span><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Expiration?.Days\\\">{{lifecycleCurrentData?.Rules[b]?.Expiration?.Days}}</span></td>\\n                            <td><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Transition?.Date != '0001-01-01T00:00:00Z' || lifecycleCurrentData?.Rules[b]?.Transition?.Days\\\"><i class=\\\"fas fa-check\\\"></i></span><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Transition?.Date == '0001-01-01T00:00:00Z' || !lifecycleCurrentData?.Rules[b]?.Transition?.Days\\\"><i class=\\\"fas fa-times\\\"></i></span></td>\\n                            <td><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Transition?.Date != '0001-01-01T00:00:00Z'\\\">{{lifecycleCurrentData?.Rules[b]?.Transition?.Date != '0001-01-01T00:00:00Z'}}</span><span *ngIf=\\\"lifecycleCurrentData?.Rules[b]?.Transition?.Days\\\">{{lifecycleCurrentData?.Rules[b]?.Transition?.Days}}</span></td>\\n                            <td>{{lifecycleCurrentData?.Rules[b]?.Transition?.StorageClass}}</td>\\n                            <td>{{lifecycleCurrentData?.Rules[b]?.RuleFilter?.And?.Tags}}</td>\\n                          </tr>\\n                        </tbody>\\n                      </table>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" *ngIf=\\\"downloadLifecycleAvailable == 0\\\" >\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>Lifecycle policy is structrured xml file. You can use examples from Minio\\n                    <a href=\\\"https://docs.min.io/docs/java-client-api-reference.html#setBucketLifeCycle\\\" target=\\\"_blank\\\">documentation</a>. Or use an AWS S3 documentation\\n                    <a href=\\\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\\\" target=\\\"_blank\\\">Object Lifecycle Management</a>\\n                  </div>\\n                  <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-file\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"file\\\" accept=\\\".lifecycle,.xml,.json\\\" class=\\\"custom-file-input\\\" (change)=\\\"fileChanged($event)\\\" #uploadLifecycleFile name=\\\"uploadLifecycleFile\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-file-label\\\" for=\\\"customFileLang\\\">{{uploadLifecycleFileName == \\\"\\\" ? \\\"Choose .lifecycle, .xml or .json file\\\" : uploadLifecycleFileName}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"uploadLifecycle();lifecycyleModal.hide()\\\">Upload</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Bucket</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button bucket <strong>{{bucketToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deleteBucket(); deleteApproveModal.hide()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- remove notify approve modal -->\\n\\n<div mdbModal #removeNotificationApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"removeNotificationApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Bucket Notifications</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"remove\\\"</strong> button bucket <strong>{{bucketToRemoveNotifications}}</strong> notifications will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"removeNotificationApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"removeBucketEvents(); removeNotificationApproveModal.hide()\\\">Remove</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- remove quotas approve modal -->\\n\\n<div mdbModal #removeQuotaApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"removeQuotaApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Bucket Quota Limits</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"remove\\\"</strong> button quota for bucket <strong>{{bucketToRemoveQuota}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"removeQuotaApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"removeBucketQuota(); removeQuotaApproveModal.hide()\\\">Remove</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- remove encryption approve modal -->\\n\\n<div mdbModal #removeEncryptionApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"removeEncryptionApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Encryption</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"remove\\\"</strong> button encryption for bucket <strong>{{bucketToRemoveEncryption}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"removeEncryptionApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"removeBucketEncryption(); removeEncryptionApproveModal.hide()\\\">Remove</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n\\n<!-- create modal -->\\n\\n<div mdbModal #addBucketModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"addBucketModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Create Bucket</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Bucket Name\\\" [(ngModel)]=\\\"newBucketName\\\" name=\\\"newBucketName\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n        \\t\\t\\t\\t</div>\\n                <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                  <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>  You can pass multiple names with \\\",\\\" delimiter\\n                </div>\\n                <div class=\\\"separator pointer\\\">Policy</div>\\n                <div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n                  <select class=\\\"browser-default custom-select\\\" (change)=\\\"updatePolicyType()\\\" [(ngModel)]=\\\"newBucketPolicy\\\" title=\\\"Select policy type\\\">\\n                    <option [value]=\\\"pType\\\" *ngFor=\\\"let pType of policyTypes\\\">{{pType}}</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\" *ngIf=\\\"newBucketPolicy=='custom'\\\">\\n                  <div class=\\\"custom-file\\\">\\n                    <input type=\\\"file\\\" accept=\\\".policy,.json\\\" class=\\\"custom-file-input\\\" (change)=\\\"filePolicyChanged($event)\\\" #uploadPolicyFile name=\\\"uploadPolicyFile\\\">\\n                    <label class=\\\"custom-file-label\\\" for=\\\"customFileLang\\\">{{uploadPolicyFileName == \\\"\\\" ? \\\"Choose .policy or .json file\\\" : uploadPolicyFileName}}</label>\\n                  </div>\\n                </div>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"serviceInfo?.services?.vault?.status != 'disabled'\\\">\\n                  <div class=\\\"separator pointer\\\">Encryption</div>\\n                  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newBucketEncryption\\\" title=\\\"Select encryption type\\\">\\n                    <option value=\\\"\\\" disabled selected>Select encryption</option>\\n                    <option [value]=\\\"encType\\\" *ngFor=\\\"let encType of encryptionTypes\\\">{{encType}}</option>\\n                  </select><br/><br/>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\" *ngIf=\\\"newBucketEncryption == 'sse-kms'\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Master Key ID\\\" [(ngModel)]=\\\"newBucketMasterKeyID\\\" name=\\\"newBucketMasterKeyID\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                </div>\\n                <div class=\\\"separator pointer\\\">Tags</div>\\n                <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n                  <div class=\\\"form-row\\\">\\n                      <div class=\\\"col\\\">\\n                          <input type=\\\"text\\\" id=\\\"newBucketTagName\\\" [(ngModel)]=\\\"newBucketTagName\\\" class=\\\"form-control\\\" placeholder=\\\"Tag name\\\">\\n                      </div>\\n                      <div class=\\\"col\\\">\\n                          <input type=\\\"text\\\" id=\\\"newBucketTagValue\\\" [(ngModel)]=\\\"newBucketTagValue\\\" class=\\\"form-control\\\" placeholder=\\\"Tag value\\\">\\n                      </div>\\n                      <div class=\\\"col-2\\\">\\n                          <button class=\\\"btn btn-sm blue-gradient button-fix\\\" title=\\\"add more tags\\\" (click)=\\\"createFormAddTag()\\\"><i class=\\\"fas fa-plus\\\"></i></button>\\n                      </div>\\n                  </div>\\n        \\t\\t\\t\\t</div>\\n                <section id=\\\"listTags\\\" *ngIf=\\\"newBucketTagsList\\\">\\n                  <span class=\\\"badge badge-primary ml-2\\\"  mdbTooltip=\\\"click to delete\\\" *ngFor=\\\"let tag of objectKeys(newBucketTagsList)\\\" (click)=\\\"createFormRemoveTag(tag)\\\">{{tag}}: {{newBucketTagsList[tag]}}</span>\\n                </section>\\n                <div class=\\\"separator pointer\\\" (click)=\\\"toggleShowQuota()\\\">Quota<mdb-icon fas icon=\\\"angle-down\\\" class=\\\"pl-1\\\" *ngIf=\\\"!uiShowQuota\\\"></mdb-icon><mdb-icon fas icon=\\\"angle-up\\\" class=\\\"pl-1\\\" *ngIf=\\\"uiShowQuota\\\"></mdb-icon></div>\\n                <span *ngIf=\\\"uiShowQuota\\\">\\n\\n                  <div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n                    <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newBucketQuotaType\\\" title=\\\"Select quota type\\\">\\n                      <option value=\\\"\\\" disabled selected>Select quota type</option>\\n                      <option [value]=\\\"qType\\\" *ngFor=\\\"let qType of quotaTypes\\\">{{qType}}</option>\\n                    </select>\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                    In <b>\\\"fifo\\\"</b> mode - old data automatically will be removed when you reach quota limit. <br/>\\n                    In <b>\\\"hard\\\"</b> mode - you can't add new data to bucket if quota limit reached.\\n                  </div>\\n\\n                  <div class=\\\"input-group d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Quota in bytes\\\" [(ngModel)]=\\\"newBucketQuota\\\" name=\\\"newBucketQuota\\\"  aria-label=\\\"bucketQuota\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n                      <div class=\\\"input-group-append\\\">\\n                        <div class=\\\"input-group-text\\\">Bytes</div>\\n                      </div>\\n                    </div>\\n                </span>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"serviceInfo?.sqsARN\\\">\\n                  <div class=\\\"separator\\\">Events section</div>\\n                  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newBucketEventARN\\\" title=\\\"Enable notifications\\\">\\n                    <option value=\\\"\\\" disabled selected>Select sqsARN</option>\\n                    <option [value]=\\\"eventARN\\\" *ngFor=\\\"let eventARN of serviceInfo?.sqsARN\\\">{{eventARN}}</option>\\n                  </select><br/><br/>\\n                  <div id=\\\"eventTypeSelector\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownEventTypesList\\\" [(ngModel)]=\\\"selectedEventTypes\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownEventTypesSettings\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onEventTypesItemSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onEventTypesItemDeSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onEventTypesSelectAll($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onEventTypesDeSelectAll($event)\\\"></angular2-multiselect>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Prefix\\\" [(ngModel)]=\\\"newBucketEventFilterPrefix\\\" name=\\\"newBucketEventFilterPrefix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Suffix\\\" [(ngModel)]=\\\"newBucketEventFilterSuffix\\\" name=\\\"newBucketEventFilterSuffix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <br/>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"createBucket(); addBucketModal.hide()\\\">Create</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- edit modal -->\\n\\n<div mdbModal #editBucketModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"editBucketModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Update Bucket</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Bucket Name\\\" [(ngModel)]=\\\"editBucketName\\\" name=\\\"editBucketName\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\" disabled>\\n        \\t\\t\\t\\t</div>\\n                <div class=\\\"separator pointer\\\">Policy</div>\\n                <div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n                  <select class=\\\"browser-default custom-select\\\" (change)=\\\"updatePolicyType()\\\" [(ngModel)]=\\\"newBucketPolicy\\\" title=\\\"Select policy type\\\">\\n                    <option [value]=\\\"pType\\\" *ngFor=\\\"let pType of policyTypes\\\">{{pType}}</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\" *ngIf=\\\"newBucketPolicy=='custom'\\\">\\n                  <div class=\\\"custom-file\\\">\\n                    <input type=\\\"file\\\" accept=\\\".policy,.json\\\" class=\\\"custom-file-input\\\" (change)=\\\"filePolicyChanged($event)\\\" #uploadPolicyFile name=\\\"uploadPolicyFile\\\">\\n                    <label class=\\\"custom-file-label\\\" for=\\\"customFileLang\\\">{{uploadPolicyFileName == \\\"\\\" ? \\\"Choose .policy or .json file\\\" : uploadPolicyFileName}}</label>\\n                  </div>\\n                </div>\\n                <br/>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"serviceInfo?.services?.vault?.status != 'disabled'\\\">\\n                  <div class=\\\"separator pointer\\\">Encryption</div>\\n                  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"updateBucketEncryptionObj\\\" title=\\\"Select encryption type\\\" (change)=\\\"updateEncryptionType($event)\\\">\\n                    <option value=\\\"\\\" disabled selected>Select encryption</option>\\n                    <option [value]=\\\"encType\\\" *ngFor=\\\"let encType of encryptionTypes\\\">{{encType}}</option>\\n                  </select><br/><br/>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\" *ngIf=\\\"updateBucketEncryptionObj == 'sse-kms'\\\" (change)=\\\"updateEncryptionType($event)\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Master Key ID\\\" [(ngModel)]=\\\"newBucketMasterKeyID\\\" name=\\\"newBucketMasterKeyID\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                </div>\\n                <div class=\\\"separator pointer\\\">Tags</div>\\n                <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n                  <div class=\\\"form-row\\\">\\n                      <div class=\\\"col\\\">\\n                          <input type=\\\"text\\\" id=\\\"updateBucketTagName\\\" [(ngModel)]=\\\"newBucketTagName\\\" class=\\\"form-control\\\" placeholder=\\\"Tag name\\\">\\n                      </div>\\n                      <div class=\\\"col\\\">\\n                          <input type=\\\"text\\\" id=\\\"updateBucketTagValue\\\" [(ngModel)]=\\\"newBucketTagValue\\\" class=\\\"form-control\\\" placeholder=\\\"Tag value\\\">\\n                      </div>\\n                      <div class=\\\"col-2\\\">\\n                          <button class=\\\"btn btn-sm blue-gradient button-fix\\\" title=\\\"add more tags\\\" (click)=\\\"createFormAddTag()\\\"><i class=\\\"fas fa-plus\\\"></i></button>\\n                      </div>\\n                  </div>\\n        \\t\\t\\t\\t</div>\\n                <section id=\\\"listTags\\\" *ngIf=\\\"newBucketTagsList\\\">\\n                  <span class=\\\"badge badge-primary ml-2\\\"  mdbTooltip=\\\"click to delete\\\" *ngFor=\\\"let tag of objectKeys(newBucketTagsList)\\\" (click)=\\\"createFormRemoveTag(tag)\\\">{{tag}}: {{newBucketTagsList[tag]}}</span>\\n                </section>\\n                <br/>\\n                <div class=\\\"separator\\\">Quota section</div>\\n                <span>\\n                  <div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n                    <select class=\\\"browser-default custom-select\\\" (change)=\\\"updateQuotaType()\\\" [(ngModel)]=\\\"updateBucketQuotaObj.quotatype\\\" title=\\\"Select quota type\\\">\\n                      <option value=\\\"\\\" disabled selected>Select quota type</option>\\n                      <option [value]=\\\"qType\\\" *ngFor=\\\"let qType of quotaTypes\\\">{{qType}}</option>\\n                    </select>\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                    In <b>\\\"fifo\\\"</b> mode - old data automatically will be removed when you reach quota limit. <br/>\\n                    In <b>\\\"hard\\\"</b> mode - you can't add new data to bucket if quota limit reached.\\n                  </div>\\n\\n                  <div class=\\\"input-group d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" (change)=\\\"updateQuota()\\\" placeholder=\\\"Quota in bytes\\\" [(ngModel)]=\\\"updateBucketQuotaObj.quota\\\" name=\\\"updateBucketQuota\\\"  aria-label=\\\"bucketQuota\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n                    <div class=\\\"input-group-append\\\">\\n                      <div class=\\\"input-group-text\\\">Bytes</div>\\n                    </div>\\n                  </div>\\n                </span>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"serviceInfo?.sqsARN\\\">\\n                  <div class=\\\"separator\\\">Events section</div>\\n                  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"updateBucketEventARN\\\" title=\\\"Enable notifications\\\">\\n                    <option value=\\\"\\\" disabled selected>Select sqsARN</option>\\n                    <option [value]=\\\"eventARN\\\" *ngFor=\\\"let eventARN of serviceInfo?.sqsARN\\\">{{eventARN}}</option>\\n                  </select><br/><br/>\\n                  <div id=\\\"eventTypeSelector\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownEventTypesList\\\" [(ngModel)]=\\\"selectedEventTypes\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownEventTypesSettings\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onEventTypesItemSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onEventTypesItemDeSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onEventTypesSelectAll($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onEventTypesDeSelectAll($event)\\\"></angular2-multiselect>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Prefix\\\" [(ngModel)]=\\\"updateBucketEventFilterPrefix\\\" name=\\\"updateBucketEventFilterPrefix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Suffix\\\" [(ngModel)]=\\\"updateBucketEventFilterSuffix\\\" name=\\\"updateBucketEventFilterSuffix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <br/>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"updateBucket(updateBucketQuotaObj.quotatype,updateBucketQuotaObj.quota); editBucketModal.hide(); resetUpdateForm();\\\">Update</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-9 col-md-9\\\">\\n            <h1>Groups</h1>\\n        </div>\\n        <div class=\\\"col-md-3 col-3 align-right\\\">\\n            <button type=\\\"button\\\" mdbBtn gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addGroup\\\" mdbWavesEffect (click)=\\\"isEditMode(false);resetForm();addGroupModal.show()\\\"><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add group</button>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n          <div class=\\\"md-form\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n            <label for=\\\"search\\\">Search</label>\\n          </div>\\n        </div>\\n    </div>\\n\\t<table mdbTable class=\\\"table\\\" #tableGroups=\\\"mdbTable\\\" >\\n\\t  <thead class=\\\"thead-light\\\">\\n\\t    <tr>\\n\\t      <th>Name</th>\\n\\t      <th>Policy</th>\\n\\t      <th>Status</th>\\n\\t      <th>Members</th>\\n\\t      <th>Options</th>\\n\\t    </tr>\\n\\t  </thead>\\n\\t  <tbody *ngIf=\\\"groups\\\">\\n\\t    <tr mdbTableCol *ngFor=\\\"let g of objectKeys(groups); let i = index\\\">\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{groups[i].name}}</strong></td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><a *ngIf=\\\"groups[i].policy\\\" (click)=\\\"rawPrepare(groups[i].policy); rawViewModal.show()\\\"  mdbTooltip=\\\"View Raw JSON\\\" placement=\\\"top\\\">{{groups[i].policy}}</a></td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{groups[i].status}}</td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n          <ul class=\\\"type-none\\\">\\n            <li class=\\\"type-none\\\" *ngFor=\\\"let member of groups[i].members\\\">{{member}}</li>\\n          </ul>\\n        </td>\\n\\t  \\t  <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t  \\t  \\t<a mdbTooltip=\\\"Edit Group\\\" placement=\\\"top\\\" (click)=\\\"resetForm();getGroupDescription(groups[i].name);addGroupModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-2\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  \\t<a *ngIf=\\\"groups[i].members.length < 1\\\" mdbTooltip=\\\"Delete Group\\\" placement=\\\"top\\\" (click)=\\\"resetForm();markGroupToDelete(groups[i].name);deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-2\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  \\t<a *ngIf=\\\"groups[i].members.length > 0\\\" mdbTooltip=\\\"You can delete only groups whit no memebers\\\" placement=\\\"top\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"gray-text pr-2\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  </td>\\n\\t    </tr>\\n\\t  </tbody>\\n      <tfoot class=\\\"grey lighten-5 w-100\\\">\\n        <tr>\\n          <td colspan=\\\"5\\\">\\n            <mdb-table-pagination [tableEl]=\\\"tableGroups\\\" [searchDataSource]=\\\"groups\\\"></mdb-table-pagination>\\n          </td>\\n        </tr>\\n      </tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- create modal -->\\n\\n<div mdbModal #addGroupModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"addGroupModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{modalCreateEditTitle}}</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Group Name\\\" [(ngModel)]=\\\"newGroupName\\\" name=\\\"newGroupName\\\"  aria-label=\\\"groupName\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n        \\t\\t\\t\\t</div>\\n        \\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"selectedItems\\\"\\n        \\t\\t\\t\\t    [settings]=\\\"dropdownSettings\\\"\\n        \\t\\t\\t\\t    (onSelect)=\\\"onItemSelect($event)\\\"\\n        \\t\\t\\t\\t    (onDeSelect)=\\\"OnItemDeSelect($event)\\\"\\n        \\t\\t\\t\\t    (onSelectAll)=\\\"onSelectAll($event)\\\"\\n        \\t\\t\\t\\t    (onDeSelectAll)=\\\"onDeSelectAll($event)\\\"></angular2-multiselect>\\n        \\t\\t\\t\\t</div>\\n        \\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n        \\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newGroupPolicy\\\" title=\\\"select policy\\\">\\n        \\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select policy</option>\\n        \\t\\t\\t\\t\\t\\t<option [value]=\\\"policy\\\" *ngFor=\\\"let policy of policies\\\">{{policy}}</option>\\n        \\t\\t\\t\\t  </select>\\n        \\t\\t\\t\\t</div>\\n        \\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n        \\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newGroupStatus\\\" title=\\\"select status\\\">\\n        \\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select status</option>\\n        \\t\\t\\t\\t\\t\\t<option [value]=\\\"updateStatusVal\\\" *ngFor=\\\"let updateStatusVal of updateStatusValues\\\">{{updateStatusVal}}</option>\\n        \\t\\t\\t\\t  </select>\\n        \\t\\t\\t\\t</div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"createGroup(); addGroupModal.hide()\\\">{{modalCreateEditButtonText}}</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Group</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button group <strong>{{groupToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deleteGroup(); deleteApproveModal.hide()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- raw policy modal -->\\n\\n<div mdbModal #rawViewModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"rawViewModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Raw Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<ngx-json-viewer [json]=\\\"rawView\\\"></ngx-json-viewer>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\" mdbWavesEffect>Close</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"progress-loader\\\" [hidden]=\\\"!loading\\\">\\n\\t<div class=\\\"loverlay\\\">\\n\\t    <br />\\n\\t</div>\\n\\n\\t<div class=\\\"lpopup\\\">\\n\\t\\t<div class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\n\\t\\t  <span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"progress-loader\\\" [hidden]=\\\"!error\\\">\\n\\t<div class=\\\"error-lpopup blue-gradient\\\">\\n\\t\\t<mdb-icon fas icon=\\\"grin-beam-sweat\\\" size=\\\"4x\\\"  aria-hidden=\\\"true\\\"></mdb-icon>\\n\\t\\t<br/>\\n\\t\\t<br/>\\n\\t\\tSeems backend unreachable\\n\\t</div>\\n</div>\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-6 col-md-6\\\">\\n\\t\\t    <h1>Policies</h1>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-6 col-6 align-right\\\">\\n\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn  gradient=\\\"purple\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#uploadPolicy\\\" (click)=\\\"this.resetUploadForm(); uploadModal.show()\\\" mdbWavesEffect>\\n\\t\\t\\t\\t\\t<mdb-icon fas icon=\\\"upload\\\" class=\\\"mr-1\\\"></mdb-icon>Upload policy\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn  gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addPolicy\\\" (click)=\\\"isEditMode(false); resetPloicyForm(true); prepareNewPolicyRaw(); addPolicyModal.show()\\\" mdbWavesEffect>\\n\\t\\t\\t\\t\\t<mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Build policy\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-12 col-12 mx-auto\\\">\\n\\t\\t\\t<div class=\\\"md-form\\\">\\n\\t\\t\\t  <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput> -->\\n\\t\\t\\t  <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" (ngModelChange)=\\\"searchItems()\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n\\t\\t\\t  <label for=\\\"search\\\">Search</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<table mdbTable class=\\\"table\\\"  #tablePolicies=\\\"mdbTable\\\" >\\n\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t  <th>Name</th>\\n\\t\\t\\t  <th>Action</th>\\n\\t\\t\\t  <th>Principal</th>\\n\\t\\t\\t  <th>Effect</th>\\n\\t\\t\\t  <th>Resource</th>\\n\\t\\t\\t  <th>Conditions</th>\\n\\t\\t\\t  <th>Options</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody *ngIf=\\\"(policies | json) != ({} | json)\\\">\\n\\t\\t\\t<tr mdbTableCol *ngFor=\\\"let pol of objectKeys(policies); let i = index\\\">\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{objectKeys(policies[pol])}}</strong></td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul  class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\\"type-none\\\" *ngFor=\\\"let action of st.Action\\\">{{action}}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"policies[pol].Statement?.Principal\\\">\\n\\t\\t\\t\\t\\t\\t{{policies[pol].Statement.Principal}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">{{st.Effect}}</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let resource of st.Resource\\\">{{resource}}</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" *ngIf=\\\"st?.Condition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let condition of objectKeys(st.Condition)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{condition}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let con of objectKeys(st.Condition[condition])\\\">{{con}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let conKeyVal of st.Condition[condition][con]\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{conKeyVal}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<a (click)=\\\"rawPrepare(objectValues(policies[pol])[0]); rawViewModal.show()\\\"  mdbTooltip=\\\"View Raw JSON\\\" placement=\\\"top\\\"><mdb-icon fas icon=\\\"eye\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t\\t\\t\\t<a mdbTooltip=\\\"Remove Policy\\\" placement=\\\"top\\\" (click)=\\\"deletePolicyPrepare(objectKeys(policies[pol])); deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t  \\t\\t<a mdbTooltip=\\\"Edit or Copy Policy\\\" placement=\\\"top\\\" class=\\\"action-link\\\" (click)=\\\"isEditMode(true);updatePolicyPrepare(objectKeys(policies[pol]));addPolicyModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t\\t\\t\\t<a mdbTooltip=\\\"Download Policy\\\" placement=\\\"top\\\" [href]=\\\"downloadJsonHref\\\" download=\\\"{{objectKeys(policies[pol])}}.json\\\" (click)=\\\"downloadPolicy(objectValues(policies[pol])[0])\\\"><mdb-icon fas icon=\\\"download\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t\\t<tfoot class=\\\"grey lighten-5 w-100\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td colspan=\\\"7\\\">\\n\\t\\t\\t\\t  <mdb-table-pagination [tableEl]=\\\"tablePolicies\\\" [searchDataSource]=\\\"policies\\\"></mdb-table-pagination>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button policy <strong>{{policyToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deletePolicy(); deleteApproveModal.hide()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- Upload -->\\n\\n<div mdbModal #uploadModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"uploadModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"uploadModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Upload Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 ml-auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Policy Name\\\" [(ngModel)]=\\\"uploadPolicyName\\\" name=\\\"uploadPolicyName\\\"  aria-label=\\\"policyName\\\" aria-describedby=\\\"basic-addon1\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-file\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"file\\\" accept=\\\".policy,.json\\\" class=\\\"custom-file-input\\\" (change)=\\\"fileChanged($event)\\\" #uploadPolicyFile name=\\\"uploadPolicyFile\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-file-label\\\" for=\\\"customFileLang\\\">{{uploadPolicyFileName == \\\"\\\" ? \\\"Choose .policy or .json file\\\" : uploadPolicyFileName}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t  </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"uploadModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n\\t\\t           \\t<button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"uploadPolicy();uploadModal.hide()\\\">Upload</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- Raw view Modal -->\\n\\n<div mdbModal #rawViewModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"rawViewModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Raw Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<ngx-json-viewer [json]=\\\"rawView\\\"></ngx-json-viewer>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\" mdbWavesEffect>Close</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- Policy build up Modal-->\\n\\n<div mdbModal #addPolicyModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addPolicyModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"addPolicyModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <span><h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{modalCreateEditTitle}}</h4>Switch to <button type=\\\"button\\\" mdbBtn color=\\\"link\\\" class=\\\"link-button\\\" (click)=\\\"switchAdvanced()\\\">{{advancedInterfaceLabel}}</button> interface </span>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<!-- <form class=\\\"text-center\\\" name=\\\"newPolicy\\\"  > -->\\n            \\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t    <div class=\\\"col-md-2 ml-auto\\\">&nbsp;</div>\\n\\t\\t\\t\\t\\t    <div class=\\\"col-md-8 ml-auto\\\">\\n\\n\\t\\t\\t\\t    \\t<div class=\\\"alert alert-info\\\" role=\\\"alert\\\" *ngIf=\\\"modalEditMode\\\">\\n                <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>  In Edit mode you can make a copy of policy - Just rename it!\\n              </div>\\n\\n\\n\\t\\t\\t\\t\\t    <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Policy Name\\\" [(ngModel)]=\\\"newPolicy.name\\\" name=\\\"newPolicyName\\\"  aria-label=\\\"policyName\\\" aria-describedby=\\\"basic-addon1\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Allow -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" checked class=\\\"custom-control-input\\\" id=\\\"statementAllow\\\"  value=\\\"Allow\\\" [(ngModel)]=\\\"newPolicy.effect\\\"  name=\\\"policyStatementEffect\\\" mdbInput>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"statementAllow\\\">Allow</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Deny -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"statementDeny\\\" value=\\\"Deny\\\" [(ngModel)]=\\\"newPolicy.effect\\\" name=\\\"policyStatementEffect\\\"  mdbInput>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"statementDeny\\\">Deny</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div id=\\\"actionsStatement\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\" *ngIf=\\\"!selectedAdmins.length>0\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownActionList\\\" [(ngModel)]=\\\"selectedActions\\\"\\n\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownActionSettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onActionItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onActionItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onActionSelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onActionDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div id=\\\"adminsStatement\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\" *ngIf=\\\"!selectedActions.length>0\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownAdminList\\\" [(ngModel)]=\\\"selectedAdmins\\\"\\n\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownAdminSettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onAdminItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onAdminItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onAdminSelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onAdminDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\" *ngIf=\\\"advancedInterface\\\">\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-prepend\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Principal</span>\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Principal\\\" [(ngModel)]=\\\"newStatement.Principal\\\" name=\\\"newPrincipal\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"separator\\\">Buckets section</div>\\n\\t\\t\\t\\t\\t\\t\\t<fieldset>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-1 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-prepend\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <span class=\\\"input-group-text\\\" id=\\\"s3-prefix\\\">arn:aws:s3:::</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"<bucket_name>/<key_name>\\\" [(ngModel)]=\\\"newPolicy.bucket\\\" aria-label=\\\"Recipient's username\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    aria-describedby=\\\"s3-prefix\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <button mdbBtn gradient=\\\"blue\\\" rounded=\\\"true\\\"  outline=\\\"true\\\" size=\\\"md\\\" class=\\\"m-0 px-3 py-2\\\" type=\\\"button\\\" id=\\\"s3-prefix\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t      mdbWavesEffect (click)=\\\"addBucketStatement()\\\">Add bucket</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"bucketStatements\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table  mdbTable mdbTableScroll scrollY=\\\"true\\\" maxHeight=\\\"300\\\"  class=\\\"table\\\"  small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Bucket</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Options</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let bst of newStatement.Resource; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{bst}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><a title=\\\"Remove bucket statement\\\" (click)=\\\"removeBucketStatement(i)\\\"><mdb-icon fas icon=\\\"times-circle\\\"  size=\\\"1x\\\" class=\\\"green-text pr-3\\\" aria-hidden=\\\"true\\\"></mdb-icon></a></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\n\\t\\t\\t\\t\\t\\t\\t<fieldset *ngIf=\\\"advancedInterface\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"separator\\\">Conditions section</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"conditionStatements\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownConditionList\\\" [(ngModel)]=\\\"selectedCondition\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownConditionSettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onConditionItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onConditionItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onConditionSelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onConditionDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"conditionKeyStatements\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownConditionKeyList\\\" [(ngModel)]=\\\"selectedConditionKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownConditionKeySettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onConditionKeyItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onConditionItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onConditionKeySelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onConditionKeyDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Condition Value\\\" aria-label=\\\"Condition Value\\\" [(ngModel)]=\\\"newConditionValue\\\" name=\\\"newConditionValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    aria-describedby=\\\"button-addCondition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <button mdbBtn gradient=\\\"blue\\\" outline=\\\"true\\\" size=\\\"md\\\" class=\\\"m-0 px-3 py-2 relative waves-light\\\" type=\\\"button\\\" id=\\\"button-addCondition\\\"  (click)=\\\"addCondition()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t mdbWavesEffect >Add Condition</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"conditionStatementsList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table  mdbTable mdbTableScroll scrollY=\\\"true\\\" maxHeight=\\\"300\\\"  class=\\\"table\\\"  small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Condition and options</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody *ngIf=\\\"newStatement?.Condition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let condition of objectKeys(newStatement.Condition)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{condition}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let con of objectKeys(newStatement.Condition[condition])\\\">{{con}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let conKeyVal of newStatement.Condition[condition][con]; let i = index;\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{conKeyVal}}&nbsp;&nbsp;<a title=\\\"Remove condition\\\" (click)=\\\"removeCondition(i,con,condition)\\\"><mdb-icon fas icon=\\\"times-circle\\\"  size=\\\"1x\\\" class=\\\"green-text pr-3\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\n\\t\\t\\t\\t\\t\\t\\t<hr/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2 ml-auto\\\">&nbsp;</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn gradient=\\\"purple\\\" rounded=\\\"true\\\" class=\\\"relative waves-light btn btn-sm\\\" mdbWavesEffect (click)=\\\"addStatement()\\\"><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add statement</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div id=\\\"statements\\\">\\n\\t\\t\\t\\t\\t\\t<hr/>\\n\\t\\t\\t\\t\\t\\t<table  mdbTable mdbTableScroll scrollY=\\\"true\\\" maxHeight=\\\"300\\\"  class=\\\"table\\\"  small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Effect</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Resource</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Conditions</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Options</th>\\n\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let st of newPolicyRaw.Statement; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{st.Effect}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul  class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\\"type-none\\\" *ngFor=\\\"let action of st.Action\\\">{{action}}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul  class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\\"type-none\\\" *ngFor=\\\"let resource of st.Resource\\\">{{resource}}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" *ngIf=\\\"st?.Condition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let condition of objectKeys(st.Condition)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{condition}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let con of objectKeys(st.Condition[condition])\\\">{{con}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let conKeyVal of st.Condition[condition][con]\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{conKeyVal}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a title=\\\"Remove statement\\\" (click)=\\\"removeStatement(i)\\\"><mdb-icon fas icon=\\\"times-circle\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a title=\\\"Edit statement\\\" (click)=\\\"editStatement(i)\\\"><mdb-icon fas icon=\\\"pencil-alt\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t</div>\\n\\n                <!-- </form> -->\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"createPolicy();addPolicyModal.hide()\\\">{{modalCreateEditButtonText}}</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\" *ngFor=\\\"let server of serviceInfo?.servers\\\">\\n\\t<h1>Server statistics {{server.endpoint}} </h1>\\n\\t<div class=\\\"mb-4\\\">\\n\\t\\t<a (click)=\\\"rawPrepare(serviceInfo); rawViewModal.show()\\\"  mdbTooltip=\\\"View Raw JSON\\\" placement=\\\"top\\\" style=\\\"text-decoration: underline;\\\"><mdb-icon fas icon=\\\"eye\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon>View Raw JSON</a><span class=\\\"pr-3\\\">&nbsp;</span><br/>\\n\\t\\t<strong>minio version:</strong> {{server.version}} <br/>\\n\\t\\t<strong>uptime:</strong> {{math.round(server.uptime/60)}} min. <br/>\\n\\t\\t<strong>network:</strong> {{server.network[server.endpoint]}}\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<h3>Storage</h3>\\n\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\" *ngFor=\\\"let disk of server.disks\\\">\\n\\t\\t\\t\\t<table mdbTable bordered=\\\"true\\\" small=\\\"true\\\" class=\\\"table\\\">\\n\\t\\t\\t\\t  <thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th>Total</th>\\n\\t\\t\\t\\t      <th>Used</th>\\n\\t\\t\\t\\t      <th>State</th>\\n\\t\\t\\t\\t      <th>Path</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t  </thead>\\n\\t\\t\\t\\t  <tbody *ngIf=\\\"disk\\\">\\n\\t\\t\\t\\t    <tr mdbTableCol>\\n\\t\\t\\t\\t      <td>{{math.round((disk.totalspace/1024/1024/1024)*100)/100}} Gb</td>\\n\\t\\t\\t\\t      <td>{{math.round((disk.usedspace/1024/1024/1024)*100)/100}} Gb</td>\\n\\t\\t\\t\\t      <td>{{disk.state}}</td>\\n\\t\\t\\t\\t      <td>{{disk.path}}</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t  </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<br/>\\n\\t<br/>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"diskUsageInfo?.lastUpdate\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<h3>Disk usage info</h3>\\n\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\">\\n\\t\\t\\t\\t<p>Last update: {{diskUsageInfo?.lastUpdate.split('T').join(' ').split('.')[0]}}</p>\\n\\t\\t\\t\\t<table  mdbTable bordered=\\\"true\\\" small=\\\"true\\\" class=\\\"table\\\">\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<th>Objects count</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Objects total size</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Buckets count</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"diskUsageInfo\\\">\\n\\t\\t\\t\\t\\t\\t<tr mdbTableCol>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{diskUsageInfo.objectsCount}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{math.round((diskUsageInfo.objectsTotalSize/1024/1024/1024)*100)/100}} Gb</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{diskUsageInfo.bucketsCount}}</td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<br/>\\n\\t<br/>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"diskUsageInfo?.objectsSizesHistogram && szChartDatasets[0].data.length>0\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<h3>Bucket sizes chart</h3>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-1\\\">\\n\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-10\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px; display: block;\\\">\\n\\t\\t\\t\\t\\t\\t<canvas mdbChart\\n\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"szChartType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"szChartDatasets\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"szChartLabels\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"szChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"szChartOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"szChartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"szChartClicked($event)\\\">\\n\\t\\t\\t\\t\\t\\t</canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-1\\\">\\n\\t\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<br/>\\n\\t<br/>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"diskUsageInfo?.objectsSizesHistogram && hgChartDatasets[0].data.length>0\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t  \\t<h3>Object sizes histogram</h3>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-8\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px; display: block;\\\">\\n\\t\\t\\t\\t\\t\\t<canvas mdbChart\\n\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"hgChartType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"hgChartDatasets\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"hgChartLabels\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"hgChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"hgChartOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"hgChartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"hgChartClicked($event)\\\">\\n\\t\\t\\t\\t\\t\\t</canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- Raw view Modal -->\\n\\n<div mdbModal #rawViewModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"rawViewModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Raw Server Info</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<ngx-json-viewer [json]=\\\"rawView\\\"></ngx-json-viewer>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\" mdbWavesEffect>Close</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n\\t<div class=\\\"row\\\">\\n\\t<div class=\\\"col-9 col-md-9\\\">\\n\\t\\t<h1>List of users</h1>\\n\\t</div>\\n\\t<div class=\\\"col-md-3 col-3 align-right\\\">\\n\\t\\t<button type=\\\"button\\\" mdbBtn  gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addUser\\\" (click)=\\\"resetForm();addUserModal.show()\\\" mdbWavesEffect><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add user</button>\\n\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t  <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n\\t\\t<div class=\\\"md-form\\\">\\n\\t\\t  <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n\\t\\t  <label for=\\\"search\\\">Search</label>\\n\\t\\t</div>\\n\\t  </div>\\n  </div>\\n\\t<table mdbTable class=\\\"table\\\"  #tableUsers=\\\"mdbTable\\\" >\\n\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>User name</th>\\n\\t\\t\\t\\t<th>Policy</th>\\n\\t\\t\\t\\t<th>Status</th>\\n\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody *ngIf=\\\"(users | json) != ({} | json)\\\">\\n\\t\\t\\t<tr mdbTableCol *ngFor=\\\"let key of objectKeys(users); let i = index\\\" [ngClass]=\\\"users[key][objectKeys(users[key])].status == 'disabled' ? 'table-secondary' : 'none' && !users[key][objectKeys(users[key])].policyName ? 'table-warning' : 'none' \\\">\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{objectKeys(users[key])}}</strong></td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><span *ngIf=\\\"objectValues(users[key])[0].policyName\\\">{{objectValues(users[key])[0].policyName}}</span></td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-switch\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customSwitch{{objectKeys(users[key])}}\\\" [ngModel]=\\\"usersRaw[objectKeys(users[key])].status == 'enabled' ? true : null\\\" (click)=\\\"setStatusUser(objectKeys(users[key]),usersRaw[objectKeys(users[key])].status)\\\">\\n\\t\\t\\t\\t\\t  <label mdbTooltip=\\\"Enable or Disable User\\\" placement=\\\"top\\\" class=\\\"custom-control-label\\\" for=\\\"customSwitch{{objectKeys(users[key])}}\\\">&nbsp;{{objectValues(users[key])[0].status}}</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<a mdbTooltip=\\\"Remove User\\\" placement=\\\"top\\\" class=\\\"action-link\\\" (click)=\\\"deleteUserPrepare(objectKeys(users[key])); deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t  \\t\\t<a mdbTooltip=\\\"Edit User\\\" placement=\\\"top\\\" class=\\\"action-link\\\" (click)=\\\"updateUserFrom();updateUserPrepare(objectKeys(users[key])); updateApproveModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t<tfoot class=\\\"grey lighten-5 w-100\\\">\\n\\t\\t<tr>\\n\\t\\t\\t<td colspan=\\\"4\\\">\\n\\t\\t\\t\\t<mdb-table-pagination [tableEl]=\\\"tableUsers\\\" [searchDataSource]=\\\"users\\\"></mdb-table-pagination>\\n\\t\\t\\t</td>\\n\\t  </tr>\\n\\t</tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">×</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove User</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\tAre you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button user <strong>{{userToDelete}}</strong> will be removed.\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-footer justify-content-center\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deleteUser(); deleteApproveModal.hide()\\\">Delete</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div >\\n</div >\\n\\n<!-- update approve modal -->\\n\\n<div mdbModal #updateApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"updateApproveModal.hide()\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">×</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Edit User</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t<div class=\\\"md-form mb-5\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Update-access\\\" class=\\\"form-control\\\" [formControl]=\\\"accessKeyUpdate\\\"\\n\\t\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t\\t\\t<label for=\\\"Update-access\\\">Access Key (View Only)</label>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Update-secret\\\" class=\\\"form-control\\\" [formControl]=\\\"secretKeyUpdate\\\"\\n\\t\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t\\t\\t<label for=\\\"Update-secret\\\">Secret key (leave blank if you don't want to change it)</label>\\n\\t\\t\\t\\t\\t<mdb-error\\n\\t\\t\\t\\t\\t*ngIf=\\\"secretKeyUpdate.invalid && (secretKeyUpdate.dirty || secretKeyUpdate.touched)\\\">\\n\\t\\t\\t\\t\\tInput invalid\\n\\t\\t\\t\\t\\t</mdb-error>\\n\\t\\t\\t\\t\\t<mdb-success\\n\\t\\t\\t\\t\\t*ngIf=\\\"secretKeyUpdate.valid && (secretKeyUpdate.dirty || secretKeyUpdate.touched)\\\">\\n\\t\\t\\t\\t\\tInput valid\\n\\t\\t\\t\\t\\t</mdb-success>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t  <p class=\\\"font-small blue-text d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"blue-text ml-1\\\" (click)=\\\"updateGenNewPassword()\\\">Generate new secret</a>\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [formControl]=\\\"policyUpdate\\\" title=\\\"select policy\\\">\\n\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select policy</option>\\n\\t\\t\\t\\t\\t\\t<option [value]=\\\"policy\\\" *ngFor=\\\"let policy of policies\\\">{{policy}}</option>\\n\\t\\t\\t\\t  </select>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [formControl]=\\\"statusUpdate\\\" title=\\\"select status\\\">\\n\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select status</option>\\n\\t\\t\\t\\t\\t\\t<option [value]=\\\"updateStatusVal\\\" *ngFor=\\\"let updateStatusVal of updateStatusValues\\\">{{updateStatusVal}}</option>\\n\\t\\t\\t\\t  </select>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-footer justify-content-center\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"updateApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"updateUserSave(); updateApproveModal.hide()\\\">Update</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div >\\n</div >\\n\\n<!-- user create modal -->\\n\\n<div mdbModal #addUserModal=\\\"mdbModal\\\" class=\\\"modal fade left\\\" id=\\\"frameModalTop\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n\\t aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t<div class=\\\"modal-content\\\">\\n\\t  <div class=\\\"modal-header text-center\\\">\\n\\t\\t<h4 class=\\\"modal-title w-100 font-weight-bold\\\">Create new user</h4>\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"addUserModal.hide()\\\">\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t</button>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"modal-body mx-3\\\">\\n\\t\\t\\t<div class=\\\"md-form mb-5\\\">\\n\\t\\t\\t  <input type=\\\"text\\\" id=\\\"defaultForm-access\\\" [formControl]=\\\"newUserAccess\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t  <label for=\\\"defaultForm-access\\\">Access Key</label>\\n\\t\\t\\t  <mdb-error *ngIf=\\\"newUserAccess.invalid && (newUserAccess.dirty || newUserAccess.touched)\\\">\\n\\t\\t\\t\\tInput invalid\\n\\t\\t\\t  </mdb-error>\\n\\t\\t\\t  <mdb-success *ngIf=\\\"newUserAccess.valid && (newUserAccess.dirty || newUserAccess.touched)\\\">\\n\\t\\t\\t\\tInput valid\\n\\t\\t\\t  </mdb-success>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t  <input type=\\\"text\\\" id=\\\"defaultForm-secret\\\" [formControl]=\\\"newUserSecret\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t  <label for=\\\"defaultForm-secret\\\">Secret Key</label>\\n\\t\\t\\t  <mdb-error *ngIf=\\\"newUserSecret.invalid && (newUserSecret.dirty || newUserSecret.touched)\\\">\\n\\t\\t\\t\\tInput invalid\\n\\t\\t\\t  </mdb-error>\\n\\t\\t\\t  <mdb-success *ngIf=\\\"newUserSecret.valid && (newUserSecret.dirty || newUserSecret.touched)\\\">\\n\\t\\t\\t\\tInput valid\\n\\t\\t\\t  </mdb-success>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [formControl]=\\\"newUserPolicy\\\" title=\\\"select policy\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select policy</option>\\n\\t\\t\\t\\t\\t<option [value]=\\\"policy\\\" *ngFor=\\\"let policy of policies\\\">{{policy}}</option>\\n\\t\\t\\t  </select>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t  <p class=\\\"font-small blue-text d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"blue-text ml-1\\\" (click)=\\\"resetForm()\\\">Generate new access\\\\secret pair</a>\\n\\t\\t\\t  </p>\\n\\t\\t\\t</div>\\n\\t  </div>\\n\\t  <div class=\\\"modal-footer d-flex justify-content-center\\\">\\n\\t\\t<button mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"waves-light\\\" mdbWavesEffect (click)=\\\"createUser()\\\">Create</button>\\n\\t  </div>\\n\\t</div>\\n  </div>\\n</div>\\n\";"]}