{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/buckets/buckets.component.html","webpack:///src/app/groups/groups.component.html","webpack:///src/app/loader/loader.component.html","webpack:///src/app/policies/policies.component.html","webpack:///src/app/server/server.component.html","webpack:///src/app/users/users.component.html","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/buckets/buckets.component.scss","webpack:///src/app/buckets/buckets.component.ts","webpack:///src/app/filter.pipe.ts","webpack:///src/app/groups/groups.component.scss","webpack:///src/app/groups/groups.component.ts","webpack:///src/app/loader.interceptor.ts","webpack:///src/app/loader.service.ts","webpack:///src/app/loader/loader.component.scss","webpack:///src/app/loader/loader.component.ts","webpack:///src/app/policies/policies.component.scss","webpack:///src/app/policies/policies.component.ts","webpack:///src/app/server/server.component.scss","webpack:///src/app/server/server.component.ts","webpack:///src/app/users/users.component.scss","webpack:///src/app/users/users.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","httpClient","router","multiBackend","apiMultiBackend","backendsUrls","apiBackends","baseUrl","getCurrentBackend","envDefaultBackend","apiBaseUrl","savedBackend","localStorage","getItem","activeBackend","newBackend","setItem","onSameUrlNavigation","routeReuseStrategy","shouldReuseRoute","navigate","url","data","oauth","auth","window","location","href","get","access","secret","form","FormData","append","post","policy","status","policyName","policyString","bucket","stsARN","eventTypes","filterPrefix","filterSuffix","group","members","IsRemove","entityName","isGroup","bucketName","lifecycle","quotaType","quotaValue","providedIn","routes","path","component","AppRoutingModule","imports","forRoot","AppComponent","apiService","title","checkAuthStatus","subscribe","console","log","validateAuthInResponse","selector","template","AppModule","declarations","providers","provide","useClass","multi","bootstrap","BucketsComponent","cdRef","toastr","sanitizer","math","Math","objectKeys","Object","isNaN","Number","buckets","newBucketName","uiShowQuota","newBucketQuotaType","newBucketQuota","quotaTypes","newBucketEventARN","updateBucketEventARN","updateBucketEventFilterPrefix","updateBucketEventFilterSuffix","updateBucketQuotaObj","updateQuotaTypeChanged","updateQuotaChanged","dropdownEventTypesList","selectedEventTypes","dropdownEventTypesSettings","newBucketEventFilterPrefix","newBucketEventFilterSuffix","downloadLifecycleAvailable","searchText","event","undefined","target","searchItems","getBuckets","getServerInfo","getDiskInfo","singleSelection","text","selectAllText","unSelectAllText","enableSearchFilter","classes","item","items","serverInfo","serviceInfo","diskInfo","diskUsageInfo","prev","mdbTable","getDataSource","setDataSource","previous","searchLocalDataBy","mdbTablePagination","setMaxVisibleItemsNumberTo","calculateFirstItemIndex","calculateLastItemIndex","detectChanges","getBucketsExtended","bucketToDelete","bucketToRemoveNotifications","currentQuota","currentQtype","editBucketName","getBucketQuota","dataKeys","emptyData","quotatype","bucketToRemoveQuota","deleteBucket","success","error","JSON","stringify","indexOf","bucketsArr","split","i","length","createBucketSimple","lifecycleBucketName","quotaVal","enableNotificationForBucket","setQuotaForBucket","updateListAfter","eventTypesArr","push","itemName","join","reloadBucketList","setBucketQuota","removeBucketEvents","removeBucketQuota","eventARN","numberOfBuckets","currentBucketNumber","createBucket","uploadLifecycleFile","files","uploadLifecycleFileName","name","uploadFileInput","nativeElement","value","uploadLifecycleName","getLifecycle","uri","bypassSecurityTrustUrl","encodeURIComponent","toString","downloadJsonHref","fileReader","FileReader","onload","lifecycleFileString","result","replace","setLifecycle","readAsText","FilterPipe","searchPolicy","toLocaleLowerCase","filter","it","includes","GroupsComponent","jsn","groups","groupsWithMembers","users","rawPolicies","groupToUpdate","newGroupName","newGroupPolicy","newGroupStatus","updateStatusValues","modalEditMode","rawView","usersToRemove","groupToDelete","dropdownList","selectedItems","dropdownSettings","isEditMode","isNowCopyMode","getGroups","getListOfUsers","getListOfPolicies","state","modalCreateEditTitle","modalCreateEditButtonText","arr","str","parse","atob","b64unpack","tempGroupName","getGroupDescription","getUsers","entries","map","tempMember","getPolicies","policies","updateMembersGroup","refreshList","setPolicy","setStatusGroup","updatePolicy","updateStatus","newMembers","wipeGroupMembers","LoaderInterceptor","loaderService","requests","splice","isLoading","next","clone","withCredentials","isError","create","observer","subscription","handle","removeRequest","err","complete","unsubscribe","LoaderService","LoaderComponent","v","loading","PoliciesComponent","objectValues","values","policiesRaw","dropdownActionList","dropdownConditionList","dropdownConditionKeyList","selectedActions","selectedCondition","selectedConditionKey","dropdownActionSettings","dropdownConditionSettings","dropdownConditionKeySettings","newPolicy","effect","newPolicyRaw","Version","Statement","newStatement","Action","Effect","Resource","Condition","Principal","newConditionValue","policyToUpdate","removeName","arrayOfPolicies","deletePolicy","policyToDelete","jsonObj","theJSON","obj","valueId","keyName","conditionName","constructor","resetPloicyForm","g","uploadPolicyFile","uploadPolicyFileName","policyFileString","addPolicy","uploadPolicyName","prepareNewPolicyRaw","oldPolicy","ServerComponent","bucketSizes","hgChartDatasets","label","hgChartLabels","hgChartType","hgChartColors","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","hgChartOptions","responsive","szChartDatasets","szChartLabels","szChartType","szChartColors","szChartOptions","hasOwnProperty","objectsSizesHistogram","histogramKeysRawArr","histogramValsRawArr","histogramLabel","bucketsSizes","objectBucketSizes","bucketSizesKeysRawArr","bucketSizesValsRawArr","UsersComponent","usersRaw","resetForm","updateUserFrom","charset","retVal","n","charAt","floor","random","updateUser","accessKeyUpdate","disabled","required","secretKeyUpdate","policyUpdate","statusUpdate","validatingForm","newUserAccess","generatePassword","minLength","newUserSecret","newUserPolicy","arrayOfUsers","userAccess","userSecret","userPolicy","addUserExtended","addUser","accessKey","setStatusUser","userToDelete","userToUpdate","patchValue","updatedSecret","updatedPolicy","updatedStatus","deleteUser","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<style>\\n  @import url('https://fonts.googleapis.com/css?family=Righteous&display=swap');\\n\\n  .content {\\n    display: flex;\\n    margin: 32px auto;\\n    padding: 0 16px;\\n    max-width: 960px;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  .hidden {\\n    display: none;\\n  }\\n\\n  .visible {\\n    display: flex !important;\\n  }\\n\\n</style>\\n<!-- Navbar -->\\n<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark special-color-dark\\\">\\n\\n    <!-- Navbar brand -->\\n    <mdb-navbar-brand><a class=\\\"navbar-brand\\\" href=\\\"#\\\">Adminio UI </a></mdb-navbar-brand>\\n\\n    <!-- Collapsible content -->\\n    <links>\\n\\n        <!-- Links -->\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"nav-link waves-light\\\" mdbWavesEffect>Buckets</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/users']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Users</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/policies']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Policies</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/groups']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Groups</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                <a [routerLink]=\\\"['/server']\\\" class=\\\"nav-link waves-light\\\"  mdbWavesEffect>Server</a>\\n            </li>\\n        </ul>\\n        <!-- Links -->\\n        <!-- Search form -->\\n        <form class=\\\"form-inline select\\\" mdbWavesEffect *ngIf=\\\"apiService.getMultiBackendStatus()\\\">\\n          <select class=\\\"select-text\\\" (change)=apiService.overrideBackend(apiService.baseUrl) [(ngModel)]=\\\"apiService.baseUrl\\\" [ngModelOptions]=\\\"{standalone: true}\\\" title=\\\"Select backend\\\">\\n            <option value=\\\"\\\" disabled selected>Select backend</option>\\n            <option [value]=\\\"backend.url\\\" *ngFor=\\\"let backend of apiService.getBackendsUrls()\\\">{{backend.name}} ({{backend.url}})</option>\\n          </select>\\n          <span class=\\\"select-highlight\\\"></span>\\n\\t\\t\\t\\t\\t<span class=\\\"select-bar\\\"></span>\\n        </form>\\n    </links>\\n    <!-- Collapsible content -->\\n\\n</mdb-navbar>\\n<!--/.Navbar-->\\n<app-loading></app-loading>\\n\\n<router-outlet></router-outlet>\\n\\n<!-- Footer -->\\n<footer class=\\\"page-footer font-small transparent fixed-bottom\\\">\\n\\n  <!-- Copyright -->\\n  <div class=\\\"text-right py-3 transparent\\\">\\n    <a href=\\\"https://github.com/rzrbld/adminio-ui/issues\\\">create issue or fork at github.com<mdb-icon fab icon=\\\"github-alt\\\" size=\\\"1x\\\" class=\\\"px-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a> | v:1.0 &nbsp;&nbsp;\\n  </div>\\n  <!-- Copyright -->\\n\\n</footer>\\n<!-- Footer -->\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-9 col-md-9\\\">\\n            <h1>Buckets</h1>\\n        </div>\\n        <div class=\\\"col-md-3 col-3 align-right\\\">\\n            <button type=\\\"button\\\" mdbBtn gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addBucket\\\" mdbWavesEffect (click)=\\\"resetForm();addBucketModal.show()\\\"><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add bucket</button>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n          <div class=\\\"md-form\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n            <label for=\\\"search\\\">Search</label>\\n          </div>\\n        </div>\\n    </div>\\n\\t<table mdbTable calss=\\\"table\\\" #tableBuckets=\\\"mdbTable\\\" >\\n\\t  <thead class=\\\"thead-light\\\">\\n\\t    <tr>\\n\\t      <th>Name</th>\\n\\t      <th>Creation Date</th>\\n\\t      <th *ngIf=\\\"(diskUsageInfo?.bucketsSizes | json) != ({} | json)\\\">Size</th>\\n\\t      <th>Quota</th>\\n\\t      <th *ngIf=\\\"serviceInfo?.sqsARN\\\">Event</th>\\n\\t      <th>Options</th>\\n\\t    </tr>\\n\\t  </thead>\\n\\t  <tbody *ngIf=\\\"buckets\\\">\\n\\t    <tr mdbTableCol *ngFor=\\\"let b of objectKeys(buckets); let i = index\\\">\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{buckets[b].name}}</strong></td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{buckets[b].info.creationDate | date : \\\"dd/MM/yy HH:mm:ss\\\" }}</td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex && (diskUsageInfo?.bucketsSizes | json) != ({} | json)\\\">\\n          <span *ngIf=\\\"diskUsageInfo?.bucketsSizes\\\" mdbTooltip=\\\"{{diskUsageInfo?.bucketsSizes[buckets[b].name]}} bytes\\\" placement=\\\"top\\\">\\n            {{(math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024)+'').length > 3 ? math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024/1024)+' Gb' : isNaN(math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024)) ? '&ndash;' : math.round(diskUsageInfo?.bucketsSizes[buckets[b].name]/1024/1024) +' Mb'}}\\n          </span>\\n        </td>\\n        <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex && (diskUsageInfo?.bucketsSizes | json) != ({} | json)\\\">\\n          <span *ngIf=\\\"buckets[b].quota?.quotatype\\\">\\n            <span class=\\\"badge badge-success\\\" *ngIf=\\\"buckets[b].quota?.quotatype == 'hard'\\\">{{buckets[b].quota?.quotatype}}</span>\\n            <span class=\\\"badge badge-secondary\\\" *ngIf=\\\"buckets[b].quota?.quotatype == 'fifo'\\\">{{buckets[b].quota?.quotatype}}</span>\\n          </span>\\n          <span *ngIf=\\\"buckets[b].quota?.quota > 0\\\" mdbTooltip=\\\"{{buckets[b].quota?.quota}} bytes\\\" placement=\\\"top\\\">\\n            {{(math.round(buckets[b].quota?.quota/1024/1024)+'').length > 3 ? math.round(buckets[b].quota?.quota/1024/1024/1024)+' Gb' : isNaN(math.round(buckets[b].quota?.quota/1024/1024)) ? '&ndash;' : math.round(buckets[b].quota?.quota/1024/1024) +' Mb'}}\\n          </span>\\n          <span *ngIf=\\\"buckets[b].quota?.quota < 1\\\" mdbTooltip=\\\"No quota limits\\\" placement=\\\"top\\\">\\n            &infin;\\n          </span>\\n        </td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex && serviceInfo?.sqsARN\\\">\\n          <span *ngIf=\\\"buckets[b].events.LambdaConfigs?.length\\\">\\n            Lambda:\\n            <span *ngFor=\\\"let c of buckets[b].events?.LambdaConfigs\\\">\\n              {{c.Lambda}}<br/>\\n              <ul class=\\\"type-none\\\">\\n                <li *ngFor=\\\"let e of c?.Events\\\">\\n                  {{e}}\\n                </li>\\n              </ul>\\n            </span>\\n          </span>\\n          <span *ngIf=\\\"buckets[b].events.TopicConfigs?.length\\\">\\n          Topic:\\n          <span *ngFor=\\\"let c of buckets[b].events?.TopicConfigs\\\">\\n             {{c.Topic}} <br/>\\n              <ul class=\\\"type-none\\\">\\n                <li *ngFor=\\\"let e of c?.Events\\\">\\n                  {{e}}\\n                </li>\\n              </ul>\\n            </span>\\n          </span>\\n          <span *ngIf=\\\"buckets[b].events.QueueConfigs?.length\\\">\\n          Queue:\\n            <span *ngFor=\\\"let c of buckets[b].events?.QueueConfigs\\\">\\n              {{c.Queue}} <br/>\\n              <ul class=\\\"type-none\\\">\\n                <li *ngFor=\\\"let e of c?.Events\\\">\\n                  {{e}}\\n                </li>\\n              </ul>\\n            </span>\\n          </span>\\n        </td>\\n\\t  \\t  <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t  \\t  \\t<a mdbTooltip=\\\"Update Bucket Events\\\" placement=\\\"top\\\" (click)=\\\"updateBucketPrepare(buckets[b].name,buckets[b].quota?.quota,buckets[b].quota?.quotatype); editBucketModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t  \\t  \\t<a mdbTooltip=\\\"Remove Bucket\\\" placement=\\\"top\\\" (click)=\\\"deleteBucketPrepare(buckets[b].name); deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t  \\t  \\t<a mdbTooltip=\\\"Bucket Lifecycyle\\\" placement=\\\"top\\\" (click)=\\\"bucketLifecycle(buckets[b].name); downloadLifecycle(buckets[b].name); resetLifecycleForm(); lifecycyleModal.show()\\\"><mdb-icon fas icon=\\\"recycle\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t  \\t  \\t<a *ngIf=\\\"buckets[b].events.LambdaConfigs?.length || buckets[b].events.TopicConfigs?.length || buckets[b].events.QueueConfigs?.length\\\" mdbTooltip=\\\"Remove Bucket Events\\\" placement=\\\"top\\\" (click)=\\\"removeBucketNotificationPrepare(buckets[b].name); removeNotificationApproveModal.show()\\\"><mdb-icon fas icon=\\\"bell-slash\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\" *ngIf=\\\"buckets[b].events.LambdaConfigs?.length || buckets[b].events.TopicConfigs?.length || buckets[b].events.QueueConfigs?.length\\\">&nbsp;</span>\\n          <a *ngIf=\\\"buckets[b].quota?.quota\\\" mdbTooltip=\\\"Remove Bucket Quota\\\" placement=\\\"top\\\" (click)=\\\"deleteBucketQuotaPrepare(buckets[b].name); removeQuotaApproveModal.show()\\\"><mdb-icon fas icon=\\\"expand\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  </td>\\n\\t    </tr>\\n\\t  </tbody>\\n      <tfoot class=\\\"grey lighten-5 w-100\\\">\\n        <tr>\\n          <td colspan=\\\"100%\\\">\\n            <mdb-table-pagination [tableEl]=\\\"tableBuckets\\\" [searchDataSource]=\\\"buckets\\\"></mdb-table-pagination>\\n          </td>\\n        </tr>\\n      </tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- lifecycyle modal -->\\n\\n<div mdbModal #lifecycyleModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"lifecycyleModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Bucket Lifecycyle</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" *ngIf=\\\"downloadLifecycleAvailable == 1\\\" >\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>This bucket already have a lifecycyle policy, you can dowload it by clicking on \\\"dowload icon\\\" >\\n                    <a mdbTooltip=\\\"Download Lifecycle\\\" placement=\\\"top\\\" [href]=\\\"downloadJsonHref\\\" download=\\\"{{lifecycleBucketName}}-lifecycle.xml\\\"><mdb-icon fas icon=\\\"download\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n                    <br/>\\n                    Or override it by upload a new lifecycle policy.\\n                  </div>\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" *ngIf=\\\"downloadLifecycleAvailable == 0\\\" >\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>Lifecycle policy is structrured xml file. You can use examples from Minio\\n                    <a href=\\\"https://docs.min.io/docs/java-client-api-reference.html#setBucketLifeCycle\\\" target=\\\"_blank\\\">documentation</a>. Or use an AWS S3 documentation\\n                    <a href=\\\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\\\" target=\\\"_blank\\\">Object Lifecycle Management</a>\\n                  </div>\\n                  <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-file\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"file\\\" accept=\\\".lifecycle,.xml\\\" class=\\\"custom-file-input\\\" (change)=\\\"fileChanged($event)\\\" #uploadLifecycleFile name=\\\"uploadLifecycleFile\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-file-label\\\" for=\\\"customFileLang\\\">{{uploadLifecycleFileName == \\\"\\\" ? \\\"Choose .lifecycle or .xml file\\\" : uploadLifecycleFileName}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"uploadLifecycle();lifecycyleModal.hide()\\\">Upload</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Bucket</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button bucket <strong>{{bucketToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deleteBucket(); deleteApproveModal.hide()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- remove notify approve modal -->\\n\\n<div mdbModal #removeNotificationApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"removeNotificationApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Bucket Notifications</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"remove\\\"</strong> button bucket <strong>{{bucketToDelete}}</strong> notifications will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"removeNotificationApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"removeBucketEvents(); removeNotificationApproveModal.hide()\\\">Remove</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- remove quotas approve modal -->\\n\\n<div mdbModal #removeQuotaApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"removeQuotaApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Bucket Quota Limits</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"remove\\\"</strong> button quota for bucket <strong>{{bucketToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"removeQuotaApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"removeBucketQuota(); removeQuotaApproveModal.hide()\\\">Remove</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n\\n<!-- create modal -->\\n\\n<div mdbModal #addBucketModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"addBucketModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Create Bucket</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Bucket Name\\\" [(ngModel)]=\\\"newBucketName\\\" name=\\\"newBucketName\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n        \\t\\t\\t\\t</div>\\n                <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                  <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>  You can pass multiple names with \\\",\\\" delimiter\\n                </div>\\n                <div class=\\\"separator\\\" (click)=\\\"toggleShowQuota()\\\">Quota section<mdb-icon fas icon=\\\"angle-down\\\" class=\\\"pl-1\\\" *ngIf=\\\"!uiShowQuota\\\"></mdb-icon><mdb-icon fas icon=\\\"angle-up\\\" class=\\\"pl-1\\\" *ngIf=\\\"uiShowQuota\\\"></mdb-icon></div>\\n                <span *ngIf=\\\"uiShowQuota\\\">\\n\\n                  <div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n                    <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newBucketQuotaType\\\" title=\\\"Select quota type\\\">\\n                      <option value=\\\"\\\" disabled selected>Select quota type</option>\\n                      <option [value]=\\\"qType\\\" *ngFor=\\\"let qType of quotaTypes\\\">{{qType}}</option>\\n                    </select>\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                    In <b>\\\"fifo\\\"</b> mode - old data automatically will be removed when you reach quota limit. <br/>\\n                    In <b>\\\"hard\\\"</b> mode - you can't add new data to bucket if quota limit reached.\\n                  </div>\\n\\n                  <div class=\\\"input-group d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Quota in bytes\\\" [(ngModel)]=\\\"newBucketQuota\\\" name=\\\"newBucketQuota\\\"  aria-label=\\\"bucketQuota\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n                      <div class=\\\"input-group-append\\\">\\n                        <div class=\\\"input-group-text\\\">Bytes</div>\\n                      </div>\\n                    </div>\\n                </span>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"serviceInfo?.sqsARN\\\">\\n                  <div class=\\\"separator\\\">Events section</div>\\n                  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newBucketEventARN\\\" title=\\\"Enable notifications\\\">\\n                    <option value=\\\"\\\" disabled selected>Select sqsARN</option>\\n                    <option [value]=\\\"eventARN\\\" *ngFor=\\\"let eventARN of serviceInfo?.sqsARN\\\">{{eventARN}}</option>\\n                  </select><br/><br/>\\n                  <div id=\\\"eventTypeSelector\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownEventTypesList\\\" [(ngModel)]=\\\"selectedEventTypes\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownEventTypesSettings\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onEventTypesItemSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onEventTypesItemDeSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onEventTypesSelectAll($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onEventTypesDeSelectAll($event)\\\"></angular2-multiselect>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Prefix\\\" [(ngModel)]=\\\"newBucketEventFilterPrefix\\\" name=\\\"newBucketEventFilterPrefix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Suffix\\\" [(ngModel)]=\\\"newBucketEventFilterSuffix\\\" name=\\\"newBucketEventFilterSuffix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <br/>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"createBucket(); addBucketModal.hide()\\\">Create</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- edit modal -->\\n\\n<div mdbModal #editBucketModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"editBucketModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Update Bucket</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Bucket Name\\\" [(ngModel)]=\\\"editBucketName\\\" name=\\\"editBucketName\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\" disabled>\\n        \\t\\t\\t\\t</div>\\n                <div class=\\\"separator\\\">Quota section</div>\\n                <span>\\n                  <div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n                    <select class=\\\"browser-default custom-select\\\" (change)=\\\"updateQuotaType()\\\" [(ngModel)]=\\\"updateBucketQuotaObj.quotatype\\\" title=\\\"Select quota type\\\">\\n                      <option value=\\\"\\\" disabled selected>Select quota type</option>\\n                      <option [value]=\\\"qType\\\" *ngFor=\\\"let qType of quotaTypes\\\">{{qType}}</option>\\n                    </select>\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\n                  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                    <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                    In <b>\\\"fifo\\\"</b> mode - old data automatically will be removed when you reach quota limit. <br/>\\n                    In <b>\\\"hard\\\"</b> mode - you can't add new data to bucket if quota limit reached.\\n                  </div>\\n\\n                  <div class=\\\"input-group d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" (change)=\\\"updateQuota()\\\" placeholder=\\\"Quota in bytes\\\" [(ngModel)]=\\\"updateBucketQuotaObj.quota\\\" name=\\\"updateBucketQuota\\\"  aria-label=\\\"bucketQuota\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n                    <div class=\\\"input-group-append\\\">\\n                      <div class=\\\"input-group-text\\\">Bytes</div>\\n                    </div>\\n                  </div>\\n                </span>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"serviceInfo?.sqsARN\\\">\\n                  <div class=\\\"separator\\\">Events section</div>\\n                  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"updateBucketEventARN\\\" title=\\\"Enable notifications\\\">\\n                    <option value=\\\"\\\" disabled selected>Select sqsARN</option>\\n                    <option [value]=\\\"eventARN\\\" *ngFor=\\\"let eventARN of serviceInfo?.sqsARN\\\">{{eventARN}}</option>\\n                  </select><br/><br/>\\n                  <div id=\\\"eventTypeSelector\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownEventTypesList\\\" [(ngModel)]=\\\"selectedEventTypes\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownEventTypesSettings\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onEventTypesItemSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onEventTypesItemDeSelect($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onEventTypesSelectAll($event)\\\"\\n  \\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onEventTypesDeSelectAll($event)\\\"></angular2-multiselect>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Prefix\\\" [(ngModel)]=\\\"updateBucketEventFilterPrefix\\\" name=\\\"updateBucketEventFilterPrefix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <div class=\\\"d-flex justify-content-around mb-3 text-center\\\">\\n          \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter Suffix\\\" [(ngModel)]=\\\"updateBucketEventFilterSuffix\\\" name=\\\"updateBucketEventFilterSuffix\\\"  aria-label=\\\"bucketName\\\" aria-describedby=\\\"basic-addon1\\\">\\n          \\t\\t\\t\\t</div>\\n                  <br/>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"updateBucket(updateBucketQuotaObj.quotatype,updateBucketQuotaObj.quota); editBucketModal.hide(); resetUpdateForm();\\\">Update</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-9 col-md-9\\\">\\n            <h1>Groups</h1>\\n        </div>\\n        <div class=\\\"col-md-3 col-3 align-right\\\">\\n            <button type=\\\"button\\\" mdbBtn gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addGroup\\\" mdbWavesEffect (click)=\\\"isEditMode(false);resetForm();addGroupModal.show()\\\"><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add group</button>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n          <div class=\\\"md-form\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n            <label for=\\\"search\\\">Search</label>\\n          </div>\\n        </div>\\n    </div>\\n\\t<table mdbTable calss=\\\"table\\\" #tableGroups=\\\"mdbTable\\\" >\\n\\t  <thead class=\\\"thead-light\\\">\\n\\t    <tr>\\n\\t      <th>Name</th>\\n\\t      <th>Policy</th>\\n\\t      <th>Status</th>\\n\\t      <th>Members</th>\\n\\t      <th>Options</th>\\n\\t    </tr>\\n\\t  </thead>\\n\\t  <tbody *ngIf=\\\"groups\\\">\\n\\t    <tr mdbTableCol *ngFor=\\\"let g of objectKeys(groups); let i = index\\\">\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{groups[i].name}}</strong></td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><a *ngIf=\\\"groups[i].policy\\\" (click)=\\\"rawPrepare(groups[i].policy); rawViewModal.show()\\\"  mdbTooltip=\\\"View Raw JSON\\\" placement=\\\"top\\\">{{groups[i].policy}}</a></td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{groups[i].status}}</td>\\n\\t      <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n          <ul class=\\\"type-none\\\">\\n            <li class=\\\"type-none\\\" *ngFor=\\\"let member of groups[i].members\\\">{{member}}</li>\\n          </ul>\\n        </td>\\n\\t  \\t  <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t  \\t  \\t<a mdbTooltip=\\\"Edit Group\\\" placement=\\\"top\\\" (click)=\\\"resetForm();getGroupDescription(groups[i].name);addGroupModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-2\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  \\t<a *ngIf=\\\"groups[i].members.length < 1\\\" mdbTooltip=\\\"Delete Group\\\" placement=\\\"top\\\" (click)=\\\"resetForm();markGroupToDelete(groups[i].name);deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-2\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  \\t<a *ngIf=\\\"groups[i].members.length > 0\\\" mdbTooltip=\\\"You can delete only groups whit no memebers\\\" placement=\\\"top\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"gray-text pr-2\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t  \\t  </td>\\n\\t    </tr>\\n\\t  </tbody>\\n      <tfoot class=\\\"grey lighten-5 w-100\\\">\\n        <tr>\\n          <td colspan=\\\"5\\\">\\n            <mdb-table-pagination [tableEl]=\\\"tableGroups\\\" [searchDataSource]=\\\"groups\\\"></mdb-table-pagination>\\n          </td>\\n        </tr>\\n      </tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- create modal -->\\n\\n<div mdbModal #addGroupModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"addGroupModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{modalCreateEditTitle}}</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Group Name\\\" [(ngModel)]=\\\"newGroupName\\\" name=\\\"newGroupName\\\"  aria-label=\\\"groupName\\\" aria-describedby=\\\"basic-addon1\\\" autofocus>\\n        \\t\\t\\t\\t</div>\\n        \\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n        \\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"selectedItems\\\"\\n        \\t\\t\\t\\t    [settings]=\\\"dropdownSettings\\\"\\n        \\t\\t\\t\\t    (onSelect)=\\\"onItemSelect($event)\\\"\\n        \\t\\t\\t\\t    (onDeSelect)=\\\"OnItemDeSelect($event)\\\"\\n        \\t\\t\\t\\t    (onSelectAll)=\\\"onSelectAll($event)\\\"\\n        \\t\\t\\t\\t    (onDeSelectAll)=\\\"onDeSelectAll($event)\\\"></angular2-multiselect>\\n        \\t\\t\\t\\t</div>\\n        \\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n        \\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newGroupPolicy\\\" title=\\\"select policy\\\">\\n        \\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select policy</option>\\n        \\t\\t\\t\\t\\t\\t<option [value]=\\\"policy\\\" *ngFor=\\\"let policy of policies\\\">{{policy}}</option>\\n        \\t\\t\\t\\t  </select>\\n        \\t\\t\\t\\t</div>\\n        \\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n        \\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"newGroupStatus\\\" title=\\\"select status\\\">\\n        \\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select status</option>\\n        \\t\\t\\t\\t\\t\\t<option [value]=\\\"updateStatusVal\\\" *ngFor=\\\"let updateStatusVal of updateStatusValues\\\">{{updateStatusVal}}</option>\\n        \\t\\t\\t\\t  </select>\\n        \\t\\t\\t\\t</div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"createGroup(); addGroupModal.hide()\\\">{{modalCreateEditButtonText}}</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Group</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button group <strong>{{groupToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deleteGroup(); deleteApproveModal.hide()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- raw policy modal -->\\n\\n<div mdbModal #rawViewModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"rawViewModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Raw Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<ngx-json-viewer [json]=\\\"rawView\\\"></ngx-json-viewer>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\" mdbWavesEffect>Close</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"progress-loader\\\" [hidden]=\\\"!loading\\\">\\n\\t<div class=\\\"loverlay\\\">\\n\\t    <br />\\n\\t</div>\\n\\n\\t<div class=\\\"lpopup\\\">\\n\\t\\t<div class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\n\\t\\t  <span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"progress-loader\\\" [hidden]=\\\"!error\\\">\\n\\t<div class=\\\"error-lpopup blue-gradient\\\">\\n\\t\\t<mdb-icon fas icon=\\\"grin-beam-sweat\\\" size=\\\"4x\\\"  aria-hidden=\\\"true\\\"></mdb-icon>\\n\\t\\t<br/>\\n\\t\\t<br/>\\n\\t\\tSeems backend unreachable\\n\\t</div>\\n</div>\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-6 col-md-6\\\">\\n\\t\\t    <h1>Policies</h1>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-6 col-6 align-right\\\">\\n\\t\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn  gradient=\\\"purple\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#uploadPolicy\\\" (click)=\\\"this.resetUploadForm(); uploadModal.show()\\\" mdbWavesEffect>\\n\\t\\t\\t\\t\\t<mdb-icon fas icon=\\\"upload\\\" class=\\\"mr-1\\\"></mdb-icon>Upload policy\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn  gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addPolicy\\\" (click)=\\\"isEditMode(false); resetPloicyForm(true); prepareNewPolicyRaw(); addPolicyModal.show()\\\" mdbWavesEffect>\\n\\t\\t\\t\\t\\t<mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Build policy\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-12 col-12 mx-auto\\\">\\n\\t\\t\\t<div class=\\\"md-form\\\">\\n\\t\\t\\t  <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput> -->\\n\\t\\t\\t  <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" (ngModelChange)=\\\"searchItems()\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n\\t\\t\\t  <label for=\\\"search\\\">Search</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<table mdbTable calss=\\\"table\\\"  #tablePolicies=\\\"mdbTable\\\" >\\n\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t  <th>Name</th>\\n\\t\\t\\t  <th>Action</th>\\n\\t\\t\\t  <th>Principal</th>\\n\\t\\t\\t  <th>Effect</th>\\n\\t\\t\\t  <th>Resource</th>\\n\\t\\t\\t  <th>Conditions</th>\\n\\t\\t\\t  <th>Options</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody *ngIf=\\\"(policies | json) != ({} | json)\\\">\\n\\t\\t\\t<tr mdbTableCol *ngFor=\\\"let pol of objectKeys(policies); let i = index\\\">\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{objectKeys(policies[pol])}}</strong></td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul  class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\\"type-none\\\" *ngFor=\\\"let action of st.Action\\\">{{action}}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"policies[pol].Statement?.Principal\\\">\\n\\t\\t\\t\\t\\t\\t{{policies[pol].Statement.Principal}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">{{st.Effect}}</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let resource of st.Resource\\\">{{resource}}</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" >\\n\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let st of objectValues(policies[pol])[0].Statement\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" *ngIf=\\\"st?.Condition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let condition of objectKeys(st.Condition)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{condition}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let con of objectKeys(st.Condition[condition])\\\">{{con}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let conKeyVal of st.Condition[condition][con]\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{conKeyVal}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<a (click)=\\\"rawPrepare(objectValues(policies[pol])[0]); rawViewModal.show()\\\"  mdbTooltip=\\\"View Raw JSON\\\" placement=\\\"top\\\"><mdb-icon fas icon=\\\"eye\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t\\t\\t\\t<a mdbTooltip=\\\"Remove Policy\\\" placement=\\\"top\\\" (click)=\\\"deletePolicyPrepare(objectKeys(policies[pol])); deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t  \\t\\t<a mdbTooltip=\\\"Edit or Copy Policy\\\" placement=\\\"top\\\" class=\\\"action-link\\\" (click)=\\\"isEditMode(true);updatePolicyPrepare(objectKeys(policies[pol]));addPolicyModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t\\t\\t\\t<a mdbTooltip=\\\"Download Policy\\\" placement=\\\"top\\\" [href]=\\\"downloadJsonHref\\\" download=\\\"{{objectKeys(policies[pol])}}.json\\\" (click)=\\\"downloadPolicy(objectValues(policies[pol])[0])\\\"><mdb-icon fas icon=\\\"download\\\" size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t\\t<tfoot class=\\\"grey lighten-5 w-100\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td colspan=\\\"7\\\">\\n\\t\\t\\t\\t  <mdb-table-pagination [tableEl]=\\\"tablePolicies\\\" [searchDataSource]=\\\"policies\\\"></mdb-table-pagination>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button policy <strong>{{policyToDelete}}</strong> will be removed.\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n                <button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deletePolicy(); deleteApproveModal.hide()\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- Upload -->\\n\\n<div mdbModal #uploadModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"uploadModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"uploadModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Upload Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 ml-auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Policy Name\\\" [(ngModel)]=\\\"uploadPolicyName\\\" name=\\\"uploadPolicyName\\\"  aria-label=\\\"policyName\\\" aria-describedby=\\\"basic-addon1\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-file\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"file\\\" accept=\\\".policy,.json\\\" class=\\\"custom-file-input\\\" (change)=\\\"fileChanged($event)\\\" #uploadPolicyFile name=\\\"uploadPolicyFile\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-file-label\\\" for=\\\"customFileLang\\\">{{uploadPolicyFileName == \\\"\\\" ? \\\"Choose .policy or .json file\\\" : uploadPolicyFileName}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t  </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"uploadModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n\\t\\t           \\t<button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"uploadPolicy();uploadModal.hide()\\\">Upload</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- Raw view Modal -->\\n\\n<div mdbModal #rawViewModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"rawViewModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Raw Policy</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<ngx-json-viewer [json]=\\\"rawView\\\"></ngx-json-viewer>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\" mdbWavesEffect>Close</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\\n<!-- Policy build up Modal-->\\n\\n<div mdbModal #addPolicyModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addPolicyModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"addPolicyModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{modalCreateEditTitle}}</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<!-- <form class=\\\"text-center\\\" name=\\\"newPolicy\\\"  > -->\\n            \\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t    <div class=\\\"col-md-2 ml-auto\\\">&nbsp;</div>\\n\\t\\t\\t\\t\\t    <div class=\\\"col-md-8 ml-auto\\\">\\n\\n\\t\\t\\t\\t    \\t<div class=\\\"alert alert-info\\\" role=\\\"alert\\\" *ngIf=\\\"modalEditMode\\\">\\n                <mdb-icon fas icon=\\\"info-circle\\\" class=\\\"mr-1\\\"></mdb-icon>  In Edit mode you can make a copy of policy - Just rename it!\\n              </div>\\n\\n\\n\\t\\t\\t\\t\\t    <div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Policy Name\\\" [(ngModel)]=\\\"newPolicy.name\\\" name=\\\"newPolicyName\\\"  aria-label=\\\"policyName\\\" aria-describedby=\\\"basic-addon1\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Allow -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" checked class=\\\"custom-control-input\\\" id=\\\"statementAllow\\\"  value=\\\"Allow\\\" [(ngModel)]=\\\"newPolicy.effect\\\"  name=\\\"policyStatementEffect\\\" mdbInput>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"statementAllow\\\">Allow</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Deny -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"statementDeny\\\" value=\\\"Deny\\\" [(ngModel)]=\\\"newPolicy.effect\\\" name=\\\"policyStatementEffect\\\"  mdbInput>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"statementDeny\\\">Deny</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownActionList\\\" [(ngModel)]=\\\"selectedActions\\\"\\n\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownActionSettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onActionItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onActionItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onActionSelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onActionDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-prepend\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Principal</span>\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Principal\\\" [(ngModel)]=\\\"newStatement.Principal\\\" name=\\\"newPrincipal\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"separator\\\">Buckets section</div>\\n\\t\\t\\t\\t\\t\\t\\t<fieldset>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-1 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-prepend\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <span class=\\\"input-group-text\\\" id=\\\"s3-prefix\\\">arn:aws:s3:::</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"<bucket_name>/<key_name>\\\" [(ngModel)]=\\\"newPolicy.bucket\\\" aria-label=\\\"Recipient's username\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    aria-describedby=\\\"s3-prefix\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <button mdbBtn gradient=\\\"blue\\\" rounded=\\\"true\\\"  outline=\\\"true\\\" size=\\\"md\\\" class=\\\"m-0 px-3 py-2\\\" type=\\\"button\\\" id=\\\"s3-prefix\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t      mdbWavesEffect (click)=\\\"addBucketStatement()\\\">Add bucket</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"bucketStatements\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table  mdbTable mdbTableScroll scrollY=\\\"true\\\" maxHeight=\\\"300\\\"  class=\\\"table\\\"  small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Bucket</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Options</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let bst of newStatement.Resource; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{bst}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><a title=\\\"Remove bucket statement\\\" (click)=\\\"removeBucketStatement(i)\\\"><mdb-icon fas icon=\\\"times-circle\\\"  size=\\\"1x\\\" class=\\\"green-text pr-3\\\" aria-hidden=\\\"true\\\"></mdb-icon></a></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\n\\t\\t\\t\\t\\t\\t\\t<fieldset>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"separator\\\">Conditions section</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"conditionStatements\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownConditionList\\\" [(ngModel)]=\\\"selectedCondition\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownConditionSettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onConditionItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onConditionItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onConditionSelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onConditionDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"conditionKeyStatements\\\" class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<angular2-multiselect [data]=\\\"dropdownConditionKeyList\\\" [(ngModel)]=\\\"selectedConditionKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    [settings]=\\\"dropdownConditionKeySettings\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelect)=\\\"onConditionKeyItemSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelect)=\\\"onConditionItemDeSelect($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onSelectAll)=\\\"onConditionKeySelectAll($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t    (onDeSelectAll)=\\\"onConditionKeyDeSelectAll($event)\\\"></angular2-multiselect>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Condition Value\\\" aria-label=\\\"Condition Value\\\" [(ngModel)]=\\\"newConditionValue\\\" name=\\\"newConditionValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    aria-describedby=\\\"button-addCondition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <button mdbBtn gradient=\\\"blue\\\" outline=\\\"true\\\" size=\\\"md\\\" class=\\\"m-0 px-3 py-2 relative waves-light\\\" type=\\\"button\\\" id=\\\"button-addCondition\\\"  (click)=\\\"addCondition()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t mdbWavesEffect >Add Condition</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"conditionStatementsList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table  mdbTable mdbTableScroll scrollY=\\\"true\\\" maxHeight=\\\"300\\\"  class=\\\"table\\\"  small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Condition and options</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody *ngIf=\\\"newStatement?.Condition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let condition of objectKeys(newStatement.Condition)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{condition}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let con of objectKeys(newStatement.Condition[condition])\\\">{{con}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let conKeyVal of newStatement.Condition[condition][con]; let i = index;\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{conKeyVal}}&nbsp;&nbsp;<a title=\\\"Remove condition\\\" (click)=\\\"removeCondition(i,con,condition)\\\"><mdb-icon fas icon=\\\"times-circle\\\"  size=\\\"1x\\\" class=\\\"green-text pr-3\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\n\\t\\t\\t\\t\\t\\t\\t<hr/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2 ml-auto\\\">&nbsp;</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-around p-1 mb-3 text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn gradient=\\\"purple\\\" rounded=\\\"true\\\" class=\\\"relative waves-light btn btn-sm\\\" mdbWavesEffect (click)=\\\"addStatement()\\\"><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add statement</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div id=\\\"statements\\\">\\n\\t\\t\\t\\t\\t\\t<hr/>\\n\\t\\t\\t\\t\\t\\t<table  mdbTable mdbTableScroll scrollY=\\\"true\\\" maxHeight=\\\"300\\\"  class=\\\"table\\\"  small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Effect</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Resource</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Conditions</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Options</th>\\n\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let st of newPolicyRaw.Statement; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{st.Effect}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul  class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\\"type-none\\\" *ngFor=\\\"let action of st.Action\\\">{{action}}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul  class=\\\"type-none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\\"type-none\\\" *ngFor=\\\"let resource of st.Resource\\\">{{resource}}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"type-none\\\" *ngIf=\\\"st?.Condition\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"type-none\\\" *ngFor=\\\"let condition of objectKeys(st.Condition)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{condition}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let con of objectKeys(st.Condition[condition])\\\">{{con}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let conKeyVal of st.Condition[condition][con]\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{conKeyVal}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a title=\\\"Remove statement\\\" (click)=\\\"removeStatement(i)\\\"><mdb-icon fas icon=\\\"times-circle\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a title=\\\"Edit statement\\\" (click)=\\\"editStatement(i)\\\"><mdb-icon fas icon=\\\"pencil-alt\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t</div>\\n\\n                <!-- </form> -->\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"createPolicy();addPolicyModal.hide()\\\">{{modalCreateEditButtonText}}</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\" *ngFor=\\\"let server of serviceInfo?.servers\\\">\\n\\t<h1>Server statistics {{server.endpoint}} </h1>\\n\\t<div class=\\\"mb-4\\\">\\n\\t\\t<a (click)=\\\"rawPrepare(serviceInfo); rawViewModal.show()\\\"  mdbTooltip=\\\"View Raw JSON\\\" placement=\\\"top\\\" style=\\\"text-decoration: underline;\\\"><mdb-icon fas icon=\\\"eye\\\"  size=\\\"1x\\\" class=\\\"green-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon>View Raw JSON</a><span class=\\\"pr-3\\\">&nbsp;</span><br/>\\n\\t\\t<strong>minio version:</strong> {{server.version}} <br/>\\n\\t\\t<strong>uptime:</strong> {{math.round(server.uptime/60)}} min. <br/>\\n\\t\\t<strong>network:</strong> {{server.network[server.endpoint]}}\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<h3>Storage</h3>\\n\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\" *ngFor=\\\"let disk of server.disks\\\">\\n\\t\\t\\t\\t<table mdbTable bordered=\\\"true\\\" small=\\\"true\\\" class=\\\"table\\\">\\n\\t\\t\\t\\t  <thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th>Total</th>\\n\\t\\t\\t\\t      <th>Used</th>\\n\\t\\t\\t\\t      <th>State</th>\\n\\t\\t\\t\\t      <th>Path</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t  </thead>\\n\\t\\t\\t\\t  <tbody *ngIf=\\\"disk\\\">\\n\\t\\t\\t\\t    <tr mdbTableCol>\\n\\t\\t\\t\\t      <td>{{math.round((disk.totalspace/1024/1024/1024)*100)/100}} Gb</td>\\n\\t\\t\\t\\t      <td>{{math.round((disk.usedspace/1024/1024/1024)*100)/100}} Gb</td>\\n\\t\\t\\t\\t      <td>{{disk.state}}</td>\\n\\t\\t\\t\\t      <td>{{disk.path}}</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t  </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<br/>\\n\\t<br/>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"diskUsageInfo?.lastUpdate\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<h3>Disk usage info</h3>\\n\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\">\\n\\t\\t\\t\\t<p>Last update: {{diskUsageInfo?.lastUpdate.split('T').join(' ').split('.')[0]}}</p>\\n\\t\\t\\t\\t<table  mdbTable bordered=\\\"true\\\" small=\\\"true\\\" class=\\\"table\\\">\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<th>Objects count</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Objects total size</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Buckets count</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"diskUsageInfo\\\">\\n\\t\\t\\t\\t\\t\\t<tr mdbTableCol>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{diskUsageInfo.objectsCount}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{math.round((diskUsageInfo.objectsTotalSize/1024/1024/1024)*100)/100}} Gb</td>\\n\\t\\t\\t\\t\\t\\t\\t<td>{{diskUsageInfo.bucketsCount}}</td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<br/>\\n\\t<br/>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"diskUsageInfo?.objectsSizesHistogram && szChartDatasets[0].data.length>0\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<h3>Bucket sizes chart</h3>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-1\\\">\\n\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-10\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px; display: block;\\\">\\n\\t\\t\\t\\t\\t\\t<canvas mdbChart\\n\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"szChartType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"szChartDatasets\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"szChartLabels\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"szChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"szChartOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"szChartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"szChartClicked($event)\\\">\\n\\t\\t\\t\\t\\t\\t</canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-1\\\">\\n\\t\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<br/>\\n\\t<br/>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"diskUsageInfo?.objectsSizesHistogram && hgChartDatasets[0].data.length>0\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t  \\t<h3>Object sizes histogram</h3>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-8\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"container\\\" style=\\\"padding-top: 10px; display: block;\\\">\\n\\t\\t\\t\\t\\t\\t<canvas mdbChart\\n\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"hgChartType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"hgChartDatasets\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"hgChartLabels\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"hgChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"hgChartOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"hgChartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"hgChartClicked($event)\\\">\\n\\t\\t\\t\\t\\t\\t</canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<br/>\\n<br/>\\n\\n<!-- Raw view Modal -->\\n\\n<div mdbModal #rawViewModal=\\\"mdbModal\\\" class=\\\"modal fade right overflow-auto\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"rawViewModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Raw Server Info</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n            \\t<ngx-json-viewer [json]=\\\"rawView\\\"></ngx-json-viewer>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <button type=\\\"button\\\" mdbBtn color=\\\"secondary\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"rawViewModal.hide()\\\" mdbWavesEffect>Close</button>\\n            </div>\\n        </div>\\n    </div >\\n</div >\\n\";","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 30px;\\\">\\n\\t<div class=\\\"row\\\">\\n\\t<div class=\\\"col-9 col-md-9\\\">\\n\\t\\t<h1>List of users</h1>\\n\\t</div>\\n\\t<div class=\\\"col-md-3 col-3 align-right\\\">\\n\\t\\t<button type=\\\"button\\\" mdbBtn  gradient=\\\"aqua\\\" rounded=\\\"true\\\" class=\\\"relative waves-light\\\" mdbWavesEffect rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addUser\\\" (click)=\\\"resetForm();addUserModal.show()\\\" mdbWavesEffect><mdb-icon fas icon=\\\"plus\\\" class=\\\"mr-1\\\"></mdb-icon>Add user</button>\\n\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t  <div class=\\\"col-md-12 col-12 mx-auto\\\">\\n\\t\\t<div class=\\\"md-form\\\">\\n\\t\\t  <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" id=\\\"search\\\" mdbInput>\\n\\t\\t  <label for=\\\"search\\\">Search</label>\\n\\t\\t</div>\\n\\t  </div>\\n  </div>\\n\\t<table mdbTable class=\\\"table\\\"  #tableUsers=\\\"mdbTable\\\" >\\n\\t\\t<thead class=\\\"thead-light\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>User name</th>\\n\\t\\t\\t\\t<th>Policy</th>\\n\\t\\t\\t\\t<th>Status</th>\\n\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody *ngIf=\\\"(users | json) != ({} | json)\\\">\\n\\t\\t\\t<tr mdbTableCol *ngFor=\\\"let key of objectKeys(users); let i = index\\\" [ngClass]=\\\"users[key][objectKeys(users[key])].status == 'disabled' ? 'table-secondary' : 'none' && !users[key][objectKeys(users[key])].policyName ? 'table-warning' : 'none' \\\">\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><strong>{{objectKeys(users[key])}}</strong></td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"><span *ngIf=\\\"objectValues(users[key])[0].policyName\\\">{{objectValues(users[key])[0].policyName}}</span></td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-switch\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customSwitch{{objectKeys(users[key])}}\\\" [ngModel]=\\\"usersRaw[objectKeys(users[key])].status == 'enabled' ? true : null\\\" (click)=\\\"setStatusUser(objectKeys(users[key]),usersRaw[objectKeys(users[key])].status)\\\">\\n\\t\\t\\t\\t\\t  <label mdbTooltip=\\\"Enable or Disable User\\\" placement=\\\"top\\\" class=\\\"custom-control-label\\\" for=\\\"customSwitch{{objectKeys(users[key])}}\\\">&nbsp;{{objectValues(users[key])[0].status}}</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n\\t\\t\\t\\t\\t<a mdbTooltip=\\\"Remove User\\\" placement=\\\"top\\\" class=\\\"action-link\\\" (click)=\\\"deleteUserPrepare(objectKeys(users[key])); deleteApproveModal.show()\\\"><mdb-icon fas icon=\\\"trash-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a><span class=\\\"pr-1\\\">&nbsp;</span>\\n\\t\\t  \\t\\t<a mdbTooltip=\\\"Edit User\\\" placement=\\\"top\\\" class=\\\"action-link\\\" (click)=\\\"updateUserFrom();updateUserPrepare(objectKeys(users[key])); updateApproveModal.show()\\\"><mdb-icon fas icon=\\\"pencil-alt\\\" size=\\\"1x\\\" class=\\\"red-text pr-1\\\" aria-hidden=\\\"true\\\"></mdb-icon></a>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t<tfoot class=\\\"grey lighten-5 w-100\\\">\\n\\t\\t<tr>\\n\\t\\t\\t<td colspan=\\\"4\\\">\\n\\t\\t\\t\\t<mdb-table-pagination [tableEl]=\\\"tableUsers\\\" [searchDataSource]=\\\"users\\\"></mdb-table-pagination>\\n\\t\\t\\t</td>\\n\\t  </tr>\\n\\t</tfoot>\\n\\t</table>\\n</div>\\n<br/>\\n<br/>\\n<!-- delete approve modal -->\\n\\n<div mdbModal #deleteApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">×</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Remove User</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\tAre you shure? <br/> After you click on <strong>\\\"Delete\\\"</strong> button user <strong>{{userToDelete}}</strong> will be removed.\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-footer justify-content-center\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"deleteUser(); deleteApproveModal.hide()\\\">Delete</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div >\\n</div >\\n\\n<!-- update approve modal -->\\n\\n<div mdbModal #updateApproveModal=\\\"mdbModal\\\" class=\\\"modal fade right\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n   aria-hidden=\\\"true\\\" [config]='{backdrop: true, ignoreBackdropClick: true}'>\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"updateApproveModal.hide()\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">×</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Edit User</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t<div class=\\\"md-form mb-5\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Update-access\\\" class=\\\"form-control\\\" [formControl]=\\\"accessKeyUpdate\\\"\\n\\t\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t\\t\\t<label for=\\\"Update-access\\\">Access Key (View Only)</label>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"Update-secret\\\" class=\\\"form-control\\\" [formControl]=\\\"secretKeyUpdate\\\"\\n\\t\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t\\t\\t<label for=\\\"Update-secret\\\">Secret key (leave blank if you don't want to change it)</label>\\n\\t\\t\\t\\t\\t<mdb-error\\n\\t\\t\\t\\t\\t*ngIf=\\\"secretKeyUpdate.invalid && (secretKeyUpdate.dirty || secretKeyUpdate.touched)\\\">\\n\\t\\t\\t\\t\\tInput invalid\\n\\t\\t\\t\\t\\t</mdb-error>\\n\\t\\t\\t\\t\\t<mdb-success\\n\\t\\t\\t\\t\\t*ngIf=\\\"secretKeyUpdate.valid && (secretKeyUpdate.dirty || secretKeyUpdate.touched)\\\">\\n\\t\\t\\t\\t\\tInput valid\\n\\t\\t\\t\\t\\t</mdb-success>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t  <p class=\\\"font-small blue-text d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"blue-text ml-1\\\" (click)=\\\"updateGenNewPassword()\\\">Generate new secret</a>\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [formControl]=\\\"policyUpdate\\\" title=\\\"select policy\\\">\\n\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select policy</option>\\n\\t\\t\\t\\t\\t\\t<option [value]=\\\"policy\\\" *ngFor=\\\"let policy of policies\\\">{{policy}}</option>\\n\\t\\t\\t\\t  </select>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [formControl]=\\\"statusUpdate\\\" title=\\\"select status\\\">\\n\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select status</option>\\n\\t\\t\\t\\t\\t\\t<option [value]=\\\"updateStatusVal\\\" *ngFor=\\\"let updateStatusVal of updateStatusValues\\\">{{updateStatusVal}}</option>\\n\\t\\t\\t\\t  </select>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-footer justify-content-center\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"success\\\" class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"updateApproveModal.hide()\\\" mdbWavesEffect>Cancel</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" mdbBtn color=\\\"danger\\\" class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"updateUserSave(); updateApproveModal.hide()\\\">Update</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div >\\n</div >\\n\\n<!-- user create modal -->\\n\\n<div mdbModal #addUserModal=\\\"mdbModal\\\" class=\\\"modal fade left\\\" id=\\\"frameModalTop\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n\\t aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t<div class=\\\"modal-content\\\">\\n\\t  <div class=\\\"modal-header text-center\\\">\\n\\t\\t<h4 class=\\\"modal-title w-100 font-weight-bold\\\">Create new user</h4>\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"addUserModal.hide()\\\">\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t</button>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"modal-body mx-3\\\">\\n\\t\\t\\t<div class=\\\"md-form mb-5\\\">\\n\\t\\t\\t  <input type=\\\"text\\\" id=\\\"defaultForm-access\\\" [formControl]=\\\"newUserAccess\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t  <label for=\\\"defaultForm-access\\\">Access Key</label>\\n\\t\\t\\t  <mdb-error *ngIf=\\\"newUserAccess.invalid && (newUserAccess.dirty || newUserAccess.touched)\\\">\\n\\t\\t\\t\\tInput invalid\\n\\t\\t\\t  </mdb-error>\\n\\t\\t\\t  <mdb-success *ngIf=\\\"newUserAccess.valid && (newUserAccess.dirty || newUserAccess.touched)\\\">\\n\\t\\t\\t\\tInput valid\\n\\t\\t\\t  </mdb-success>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t  <input type=\\\"text\\\" id=\\\"defaultForm-secret\\\" [formControl]=\\\"newUserSecret\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t mdbInput mdbValidate>\\n\\t\\t\\t  <label for=\\\"defaultForm-secret\\\">Secret Key</label>\\n\\t\\t\\t  <mdb-error *ngIf=\\\"newUserSecret.invalid && (newUserSecret.dirty || newUserSecret.touched)\\\">\\n\\t\\t\\t\\tInput invalid\\n\\t\\t\\t  </mdb-error>\\n\\t\\t\\t  <mdb-success *ngIf=\\\"newUserSecret.valid && (newUserSecret.dirty || newUserSecret.touched)\\\">\\n\\t\\t\\t\\tInput valid\\n\\t\\t\\t  </mdb-success>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t  <select class=\\\"browser-default custom-select\\\" [formControl]=\\\"newUserPolicy\\\" title=\\\"select policy\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Select policy</option>\\n\\t\\t\\t\\t\\t<option [value]=\\\"policy\\\" *ngFor=\\\"let policy of policies\\\">{{policy}}</option>\\n\\t\\t\\t  </select>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"md-form mb-4\\\">\\n\\t\\t\\t  <p class=\\\"font-small blue-text d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"blue-text ml-1\\\" (click)=\\\"resetForm()\\\">Generate new access\\\\secret pair</a>\\n\\t\\t\\t  </p>\\n\\t\\t\\t</div>\\n\\t  </div>\\n\\t  <div class=\\\"modal-footer d-flex justify-content-center\\\">\\n\\t\\t<button mdbBtn gradient=\\\"peach\\\" rounded=\\\"true\\\" class=\\\"waves-light\\\" mdbWavesEffect (click)=\\\"createUser()\\\">Create</button>\\n\\t  </div>\\n\\t</div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './../environments/environment';\nimport { Router } from \"@angular/router\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private httpClient: HttpClient, private router: Router) { }\n\n\n  multiBackend = environment.apiMultiBackend;\n  backendsUrls = environment.apiBackends;\n  baseUrl = this.getCurrentBackend();\n\n  private getCurrentBackend(){\n    let envDefaultBackend = environment.apiBaseUrl;\n    if(this.multiBackend && this.multiBackend == true) {\n      let savedBackend = localStorage.getItem('currentBackend');\n\n      let activeBackend = \"\";\n\n      if(savedBackend && savedBackend != \"\"){\n        activeBackend = savedBackend;\n      }else{\n        activeBackend = envDefaultBackend;\n      }\n      return activeBackend;\n    } else {\n      return envDefaultBackend;\n    }\n  }\n\n  public overrideBackend(newBackend){\n    localStorage.setItem('currentBackend', newBackend);\n    this.baseUrl = newBackend;\n\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n\n    this.router.navigate([this.router.url])\n    this.router.onSameUrlNavigation = 'ignore';\n  }\n\n  public getMultiBackendStatus(){\n    return this.multiBackend;\n  }\n\n  public getBackendsUrls(){\n    return this.backendsUrls;\n  }\n\n  public validateAuthInResponse(data){\n    if(data != null && typeof data.oauth != \"undefined\" && typeof data.auth != \"undefined\" && data.oauth != false && data.auth != true){\n      window.location.href = environment.apiBaseUrl+'/auth/?state='+window.location.href;\n    }\n  }\n\n  public serverInfo(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/server/common-info');\n  }\n\n  public diskInfo(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/server/disk-info');\n  }\n\n  public getUsers(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/users/list');\n  }\n\n  public addUser(access,secret){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('secretKey', secret);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/create', form)\n  }\n\n  public addUserExtended(access,secret,policy){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('secretKey', secret);\n    form.append('policyName', policy);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/create-extended', form)\n  }\n\n  public updateUser(access,secret,policy,status){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('secretKey', secret);\n    form.append('policyName', policy);\n    form.append('status', status);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/update', form)\n  }\n\n\n  public setStatusUser(access,status){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n    form.append('status', status);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/set-status', form)\n  }\n\n  public deleteUser(access){\n    let form = new FormData();\n\n    form.append('accessKey', access);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/user/delete', form)\n  }\n\n  public getPolicies(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/policies/list');\n  }\n\n  public deletePolicy(policy){\n    let form = new FormData();\n\n    form.append('policyName', policy);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/policy/delete', form)\n  }\n\n  public addPolicy(policyName, policyString){\n    let form = new FormData();\n\n    form.append('policyName', policyName);\n    form.append('policyString', policyString);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/policy/create', form)\n  }\n\n  public getBuckets(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/buckets/list');\n  }\n\n  public getBucketsExtended(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/buckets/list-extended');\n  }\n\n  public enableNotificationForBucket(bucket, stsARN, eventTypes, filterPrefix, filterSuffix){\n    //put,get,delete\n    let form = new FormData();\n\n    form.append('bucket', bucket);\n    form.append('stsARN', stsARN);\n    form.append('eventTypes', eventTypes);\n    form.append('filterPrefix', filterPrefix);\n    form.append('filterSuffix', filterSuffix);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-events', form)\n  }\n\n  public getBucketEvents(bucket){\n    let form = new FormData();\n\n    form.append('bucket', bucket);\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-events',form)\n  }\n\n  public removeBucketEvents(bucket){\n    let form = new FormData();\n\n    form.append('bucket', bucket);\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/remove-events',form)\n  }\n\n  public deleteBucket(bucket){\n    let form = new FormData();\n\n    form.append('bucketName', bucket);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/delete', form)\n  }\n\n  public createBucket(bucket){\n    let form = new FormData();\n\n    form.append('newBucket', bucket);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/create', form)\n  }\n\n  public getGroups(){\n    return this.httpClient.get(this.baseUrl+'/api/v2/groups/list');\n  }\n\n  public updateMembersGroup(group,members,IsRemove){\n    let form = new FormData();\n\n    form.append('group', group);\n    form.append('members', members);\n    form.append('IsRemove', IsRemove);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/group/update-members', form);\n  }\n\n  public getGroupDescription(group){\n    let form = new FormData();\n\n    form.append('group', group);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/group/get-description', form);\n  }\n\n  public setStatusGroup(group,status){\n    let form = new FormData();\n\n    form.append('group', group);\n    form.append('status', status);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/group/set-status', form);\n  }\n\n  public setPolicy(policyName,entityName,isGroup){\n    let form = new FormData();\n\n    form.append('policyName', policyName);\n    form.append('entityName', entityName);\n    form.append('isGroup', isGroup);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/policy/update', form);\n  }\n\n  public setLifecycle(bucketName,lifecycle){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('lifecycle', lifecycle);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-lifecycle', form);\n  }\n\n\n  public getLifecycle(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-lifecycle', form);\n  }\n\n  public checkAuthStatus(){\n    return this.httpClient.get(this.baseUrl+'/auth/check');\n  }\n\n  public getBucketQuota(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/get-quota', form);\n  }\n\n  public setBucketQuota(bucketName, quotaType, quotaValue){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n    form.append('quotaType', quotaType);\n    form.append('quotaValue', quotaValue);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/set-quota', form);\n  }\n\n  public removeBucketQuota(bucketName){\n    let form = new FormData();\n\n    form.append('bucketName', bucketName);\n\n    return this.httpClient.post(this.baseUrl+'/api/v2/bucket/remove-quota', form);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { ServerComponent } from './server/server.component';\nimport { PoliciesComponent } from './policies/policies.component';\nimport { BucketsComponent } from './buckets/buckets.component';\nimport { GroupsComponent } from './groups/groups.component';\n\nconst routes: Routes = [\n\t{path:'users', component: UsersComponent},\n\t{path:'server', component: ServerComponent},\n\t{path:'policies', component: PoliciesComponent},\n\t{path:'groups', component: GroupsComponent},\n\t{path:'', component: BucketsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { environment } from './../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Adminio-UI';\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n  \tthis.checkAuthStatus()\n  }\n\n  private checkAuthStatus(){\n    this.apiService.checkAuthStatus().subscribe((data)=>{\n      console.log(\"DATA AUTH>>>\", data);\n      this.apiService.validateAuthInResponse(data)\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { UsersComponent } from './users/users.component';\nimport { FormsModule, FormControl, FormGroup, Validators, ReactiveFormsModule} from \"@angular/forms\";\nimport { ServerComponent } from './server/server.component';\nimport { FilterPipe } from './filter.pipe';\nimport { PoliciesComponent } from './policies/policies.component';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { LoaderComponent } from './loader/loader.component';\nimport { LoaderService } from './loader.service';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LoaderInterceptor } from './loader.interceptor';\nimport { BucketsComponent } from './buckets/buckets.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { GroupsComponent } from './groups/groups.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    ServerComponent,\n    FilterPipe,\n    PoliciesComponent,\n    LoaderComponent,\n    BucketsComponent,\n    GroupsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxJsonViewerModule,\n    AngularMultiSelectModule,\n    FormsModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2J1Y2tldHMvYnVja2V0cy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\nimport { ApiService } from '../api.service';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-buckets',\n  templateUrl: './buckets.component.html',\n  styleUrls: ['./buckets.component.scss']\n})\nexport class BucketsComponent implements OnInit,  AfterViewInit  {\n  math = Math;\n  objectKeys = Object.keys;\n  isNaN: Function = Number.isNaN;\n  buckets = {};\n  bucketToDelete;\n  bucketToRemoveNotifications;\n  bucketToRemoveQuota;\n  editBucketName;\n  newBucketName = \"\";\n  uiShowQuota = false;\n  newBucketQuotaType = \"\";\n  newBucketQuota = \"\";\n  quotaTypes = [\"fifo\",\"hard\"]\n  serviceInfo;\n  diskUsageInfo;\n  newBucketEventARN = \"\";\n  updateBucketEventARN = \"\";\n  updateBucketEventFilterPrefix = \"\";\n  updateBucketEventFilterSuffix = \"\";\n  updateBucketQuotaObj = {};\n  updateQuotaTypeChanged = false;\n  updateQuotaChanged = false;\n\n  dropdownEventTypesList = [];\n  selectedEventTypes = [];\n  dropdownEventTypesSettings = {};\n  newBucketEventFilterPrefix = \"\";\n  newBucketEventFilterSuffix = \"\";\n\n  uploadLifecycleName;\n  uploadLifecycleFile;\n  uploadLifecycleFileName;\n  lifecycleBucketName;\n  downloadJsonHref;\n  downloadLifecycleAvailable = 0;\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  previous: string;\n\n  searchText: string = '';\n\n  constructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService, private sanitizer: DomSanitizer) { }\n\n  @HostListener('input') oninput() {\n    if(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n       this.searchItems();\n    }\n  }\n\n  @ViewChild('uploadLifecycleFile', { static: true })\n  uploadFileInput: any;\n\n  ngOnInit() {\n  \tthis.getBuckets()\n    this.getServerInfo()\n    this.getDiskInfo()\n\n    this.dropdownEventTypesList = [\n\t    {\"id\":1,\"itemName\":\"put\"},\n\t    {\"id\":2,\"itemName\":\"get\"},\n\t    {\"id\":3,\"itemName\":\"delete\"},\n    ];\n\n    this.dropdownEventTypesSettings = {\n  \t\tsingleSelection: false,\n  \t\ttext:\"Select Event Types\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true,\n      classes: \"dropdownFix\"\n\t  };\n  }\n\n  //condition select actions\n  onEventTypesItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedEventTypes);\n\t}\n\tonEventTypesItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedEventTypes);\n\t}\n\tonEventTypesSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonEventTypesDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n  private toggleShowQuota(){\n    (this.uiShowQuota) ? this.uiShowQuota = false : this.uiShowQuota = true;\n  }\n\n  // private toggleUpdateShowQuota(){\n  //   (this.updateUiShowQuota) ? this.updateUiShowQuota = false : this.updateUiShowQuota = true;\n  // }\n\n  private getServerInfo(){\n    this.apiService.serverInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.serviceInfo = data;\n    });\n  }\n\n  private getDiskInfo(){\n  \tthis.apiService.diskInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.diskUsageInfo = data;\n    });\n  }\n\n  private searchItems() {\n    const prev = this.mdbTable.getDataSource();\n\n    if (!this.searchText) {\n      this.mdbTable.setDataSource(this.previous);\n      this.buckets = this.mdbTable.getDataSource();\n    }\n\n    if (this.searchText) {\n      this.buckets = this.mdbTable.searchLocalDataBy(this.searchText);\n      this.mdbTable.setDataSource(prev);\n    }\n  }\n\n  ngAfterViewInit() {\n      this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n      this.mdbTablePagination.calculateFirstItemIndex();\n      this.mdbTablePagination.calculateLastItemIndex();\n      this.cdRef.detectChanges();\n  }\n\n  private getBuckets(){\n  \tthis.apiService.getBucketsExtended().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(\"BUCKETS >>>>>>\",data);\n      if(data!==null){\n        this.buckets = data;\n      }else{\n        this.buckets = {};\n      }\n      this.mdbTable.setDataSource(this.buckets);\n      this.previous = this.mdbTable.getDataSource();\n    });\n  }\n\n  private deleteBucketPrepare(bucketName){\n  \tthis.bucketToDelete = bucketName;\n  }\n\n  private removeBucketNotificationPrepare(bucketName){\n  \tthis.bucketToRemoveNotifications = bucketName;\n  }\n\n  private updateBucketPrepare(bucketName, currentQuota, currentQtype){\n    this.editBucketName = bucketName;\n    this.apiService.getBucketQuota(bucketName).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(Object.keys(data));\n      console.log(data);\n\n      var dataKeys = Object.keys(data);\n      console.log(dataKeys[0]);\n      if(dataKeys[0]!=\"error\"){\n        this.updateBucketQuotaObj = data;\n      }else{\n        var emptyData = {\n          quotatype: \"\"\n        };\n        this.updateBucketQuotaObj = emptyData;\n      }\n    });\n  }\n\n  private deleteBucketQuotaPrepare(bucketName){\n    this.bucketToRemoveQuota = bucketName;\n  }\n\n  private updateQuotaType(){\n    this.updateQuotaTypeChanged = true;\n  }\n\n  private updateQuota(){\n    this.updateQuotaChanged = true;\n  }\n\n  private deleteBucket(){\n  \tthis.apiService.deleteBucket(this.bucketToDelete).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Bucket has been deleted', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while deleting bucket');\n      }\n      this.getBuckets();\n    });\n  }\n\n  private resetForm(){\n  \tthis.newBucketName = \"\";\n    this.newBucketEventARN = \"\";\n    this.newBucketEventFilterPrefix = \"\";\n    this.newBucketEventFilterSuffix = \"\";\n    this.selectedEventTypes = [];\n    this.newBucketQuotaType = \"\";\n    this.newBucketQuota = \"\";\n  }\n\n  private resetUpdateForm() {\n    this.updateBucketEventARN = \"\";\n    this.selectedEventTypes = [];\n    this.updateBucketEventFilterPrefix = \"\";\n    this.updateBucketEventFilterSuffix = \"\";\n    this.updateBucketQuotaObj = {};\n    this.updateQuotaTypeChanged = false;\n    this.updateQuotaChanged = false;\n  }\n\n  private createBucket(){\n  \tif(this.newBucketName.indexOf(',')>-1){\n  \t\tvar bucketsArr = this.newBucketName.split(',')\n  \t\tfor (var i = 0; i < bucketsArr.length; i++) {\n  \t\t\tif(bucketsArr[i]!=''){\n  \t\t\t\tthis.createBucketSimple(bucketsArr[i],this.newBucketEventARN,this.newBucketQuotaType,this.newBucketQuota,bucketsArr.length,i+1)\n  \t\t\t}\n  \t\t}\n  \t}else{\n  \t\tthis.createBucketSimple(this.newBucketName,this.newBucketEventARN,this.newBucketQuotaType,this.newBucketQuota,1,1)\n  \t}\n  }\n\n  private bucketLifecycle(bucket){\n    this.lifecycleBucketName = bucket;\n  }\n\n  private updateBucket(quotaType, quotaVal) {\n    if(this.updateBucketEventARN != \"\"){\n      this.enableNotificationForBucket(this.editBucketName, this.updateBucketEventARN, this.selectedEventTypes, this.updateBucketEventFilterPrefix, this.updateBucketEventFilterSuffix, true)\n    }\n    if(this.updateQuotaTypeChanged || this.updateQuotaChanged){\n\n      this.setQuotaForBucket(this.editBucketName, quotaType, quotaVal, true)\n    }\n  }\n\n  private enableNotificationForBucket(bucket, stsARN, eventTypes, filterPrefix, filterSuffix, updateListAfter){\n    var eventTypesArr = []\n    for (var i = 0; i < eventTypes.length; i++) {\n      eventTypesArr.push(eventTypes[i].itemName)\n    }\n    this.apiService.enableNotificationForBucket(bucket, stsARN, eventTypesArr.join(','), filterPrefix, filterSuffix).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      if(data[\"Success\"]){\n        this.toastr.success('Events for bucket: '+bucket+' has been enabled', 'Success');\n        if(updateListAfter){\n          this.getBuckets();\n        }\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while enabling events for bucket'+bucket );\n      }\n    });\n  }\n\n  private setQuotaForBucket(bucket, quotaType, quotaVal, reloadBucketList){\n    this.apiService.setBucketQuota(bucket, quotaType, quotaVal).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      if(data[\"Success\"]){\n        this.toastr.success('Quota for bucket '+bucket+' has been set', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while set quota for bucket');\n      }\n      if(reloadBucketList){\n        this.getBuckets();\n      }\n    });\n  }\n\n  private removeBucketEvents(){\n    var bucket = this.bucketToRemoveNotifications;\n    this.apiService.removeBucketEvents(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Events for bucket '+bucket+' has been removed', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while removing bucket events');\n      }\n      this.getBuckets();\n    });\n  }\n\n  private removeBucketQuota(){\n      var bucket = this.bucketToRemoveQuota;\n      this.apiService.removeBucketQuota(bucket).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Quota for bucket '+bucket+' has been removed', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while removing bucket quota');\n        }\n        this.getBuckets();\n      });\n  }\n\n  private createBucketSimple(bucket, eventARN, quotaType, quotaVal, numberOfBuckets, currentBucketNumber){\n  \tthis.apiService.createBucket(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Bucket: '+bucket+' has been created', 'Success');\n        if(eventARN != \"\"){\n          this.enableNotificationForBucket(bucket, eventARN, this.selectedEventTypes, this.newBucketEventFilterPrefix, this.newBucketEventFilterSuffix, false);\n        }\n        if(quotaType != \"\" && quotaVal != \"\" && quotaVal >= 0){\n          this.setQuotaForBucket(bucket, quotaType, quotaVal, false);\n        }\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while creating bucket');\n      }\n      if(numberOfBuckets == currentBucketNumber){\n        this.getBuckets();\n      }\n    });\n  }\n\n  private fileChanged(e) {\n    console.log(\"eventTriggered\");\n\n    this.uploadLifecycleFile = e.target.files[0];\n    this.uploadLifecycleFileName = e.target.files[0].name;\n  }\n\n  private resetLifecycleForm(){\n    this.uploadFileInput.nativeElement.value = \"\";\n    this.uploadLifecycleFile;\n    this.uploadLifecycleName = \"\";\n    this.uploadLifecycleFileName = \"\";\n    this.downloadLifecycleAvailable = 0;\n  }\n\n  private downloadLifecycle(bucket) {\n    this.apiService.getLifecycle(bucket).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      // console.log(bucket, data);\n      if(data[\"error\"]){\n        this.toastr.error(JSON.stringify(data), 'Error while getting lifecycle');\n      }else{\n        if(data==\"\"){\n          // this.toastr.error(\"Bucket has no lifecycle\", 'Error while getting lifecycle');\n        }else{\n          this.downloadLifecycleAvailable = 1;\n          var uri = this.sanitizer.bypassSecurityTrustUrl(\"data:text/xml;charset=UTF-8,\" + encodeURIComponent(data.toString()));\n          this.downloadJsonHref = uri;\n        }\n      }\n    });\n  }\n\n  private uploadLifecycle(){\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      let lifecycleFileString = ((fileReader.result).toString()).replace(/\\n/g, ' ').replace(/\\r/g, ' ')\n      this.apiService.setLifecycle(this.lifecycleBucketName,lifecycleFileString).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Lifecycyle has been uploaded for bucket: '+this.lifecycleBucketName+'', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while uploading lifecycyle');\n        }\n      });\n    }\n    fileReader.readAsText(this.uploadLifecycleFile);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: any[], searchPolicy: string): any[] {\n\n    if (!items) {\n      return [];\n    }\n    if (!searchPolicy) {\n      return items;\n    }\n    searchPolicy = searchPolicy.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.toLocaleLowerCase().includes(searchPolicy);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3Vwcy9ncm91cHMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n\tselector: 'app-groups',\n\ttemplateUrl: './groups.component.html',\n\tstyleUrls: ['./groups.component.scss']\n})\n\nexport class GroupsComponent implements OnInit,  AfterViewInit  {\n\tobjectKeys = Object.keys;\n\tjsn = JSON;\n\tgroups = {};\n\tgroupsWithMembers = [];\n\tusers = {};\n\trawPolicies = {};\n\tgroupToUpdate = {};\n\tnewGroupName = \"\";\n\tnewGroupPolicy = \"\";\n\tnewGroupStatus = \"\";\n\tpolicies;\n\tupdateStatusValues = ['enabled','disabled'];\n\tmodalCreateEditTitle;\n\tmodalCreateEditButtonText;\n\tmodalEditMode = false;\n\trawView = \"\";\n\tusersToRemove = [];\n\tgroupToDelete = \"\";\n\n\n\n\tdropdownList = [];\n\tselectedItems = [];\n\tdropdownSettings = {};\n\n\n\n\t@ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n\t@ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n\n\tprevious: string;\n\tsearchText: string = '';\n\n  \tconstructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService) { }\n\n  \t@HostListener('input') oninput() {\n\t\tif(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n\t\t   this.searchItems();\n\t\t}\n\t\tif(event && event['target'] !== undefined && event.target[\"name\"] !== undefined && event.target[\"name\"] == \"newGroupName\"){\n\t      if(this.modalEditMode){\n\t        if(this.newGroupName == this.groupToUpdate[\"name\"]){\n\t          console.log('hit')\n\t          this.isEditMode(true)\n\t        }else{\n\t          this.isNowCopyMode();\n\t        }\n\t      }\n\t    }\n\t}\n\n\tngOnInit() {\n\t\tthis.getGroups()\n\t\tthis.getListOfUsers()\n\t\tthis.getListOfPolicies()\n\t\tthis.isEditMode(false)\n\n\t\tthis.dropdownList = [\n\t\t    {\"id\":1,\"itemName\":\"wait! i'm getting policies ASAP\"}\n\t    ];\n\n\t    this.dropdownSettings = {\n\t\t\tsingleSelection: false,\n\t\t\ttext:\"Select Members\",\n\t\t\tselectAllText:'Select All',\n\t\t\tunSelectAllText:'UnSelect All',\n\t\t\tenableSearchFilter: true\n\t\t};\n\t}\n\n\tonItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedItems);\n\t}\n\tOnItemDeSelect(item:any){\n\t\tthis.usersToRemove.push(item[\"itemName\"])\n\t    console.log(item);\n\t    console.log(this.selectedItems);\n\t}\n\tonSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonDeSelectAll(items: any){\n\n\t\t\tfor (let i = 0; i < this.selectedItems.length; i++) {\n\t\t\t\tthis.usersToRemove.push(this.selectedItems[i][\"itemName\"])\n\t\t\t}\n\n\t    this.selectedItems = [];\n\t}\n\n\tprivate searchItems() {\n\t\tconst prev = this.mdbTable.getDataSource();\n\n\t\tif (!this.searchText) {\n\t\t  this.mdbTable.setDataSource(this.previous);\n\t\t  this.groups = this.mdbTable.getDataSource();\n\t\t}\n\n\t\tif (this.searchText) {\n\t\t  this.groups = this.mdbTable.searchLocalDataBy(this.searchText);\n\t\t  this.mdbTable.setDataSource(prev);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t  this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n\t  this.mdbTablePagination.calculateFirstItemIndex();\n\t  this.mdbTablePagination.calculateLastItemIndex();\n\t  this.cdRef.detectChanges();\n\t}\n\n\tprivate isEditMode(state){\n\t\tthis.modalEditMode = state;\n\t\tif(state){\n\t\t  this.modalCreateEditTitle = \"Edit group\"\n\t\t  this.modalCreateEditButtonText = \"Update\"\n\t\t}else{\n\t\t  this.modalCreateEditTitle = \"Create group\"\n\t\t  this.modalCreateEditButtonText = \"Create\"\n\t\t}\n\t}\n\n\tprivate isNowCopyMode(){\n\t\tthis.modalCreateEditTitle = \"Copy group\"\n\t\tthis.modalCreateEditButtonText = \"Copy\"\n\t}\n\n\tprivate commaToBr(arr) {\n\t\t// console.log(arr)\n\t    var str = arr.join('\\n\\r');\n\t    return str;\n\t}\n\n\tpublic b64unpack(str){\n\t// console.log(JSON.parse(atob(str)))\n\t\treturn JSON.parse(atob(str));\n\t}\n\n\tprivate rawPrepare(str){\n\t\tconsole.log(this.rawPolicies[str])\n\t\tthis.rawView = this.b64unpack(this.rawPolicies[str]);\n\t}\n\n\n\tprivate getGroups(){\n\t\tthis.groups = {};\n\t\tthis.groupsWithMembers = [];\n\t\tthis.previous = \"\";\n\t\tthis.apiService.getGroups().subscribe((data)=>{\n\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t  console.log(data);\n\t\t  if(data!==null){\n\t\t    this.groups = data;\n\t\t    for (var i = 0; i < this.objectKeys(data).length; i++) {\n\t\t\t\t\tlet tempGroupName = data[i]\n\t\t\t\t\tthis.apiService.getGroupDescription(tempGroupName).subscribe((data)=>{\n\t\t\t\t\t\tif(data!==null){\n\t\t\t\t\t\t\tthis.groupsWithMembers.push(data)\n\t\t\t\t\t\t\tthis.mdbTable.setDataSource(this.groupsWithMembers);\n\t\t  \t\t\t\t\tthis.previous = this.mdbTable.getDataSource();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tconsole.log(this.groupsWithMembers)\n\t\t\tthis.groups = this.groupsWithMembers;\n\t\t  }\n\n\n\t\t});\n\t}\n\tprivate getListOfUsers(){\n\t\tthis.apiService.getUsers().subscribe((data)=>{\n\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t\tif(data!==null){\n\t\t\t\tthis.dropdownList = Object.entries(data).map((e) => ( { \"id\":e[0],\"itemName\":e[0] } ));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getGroupDescription(group){\n\t\tthis.isEditMode(true);\n\t\tconsole.log(group)\n\t\tthis.apiService.getGroupDescription(group).subscribe((data)=>{\n\t\t\tif(data!==null){\n\t\t\t\tconsole.log(data)\n\t\t\t\tthis.groupToUpdate = data;\n\t\t\t\tthis.newGroupName = data[\"name\"]\n\t\t\t\tthis.newGroupPolicy = data[\"policy\"]\n\t\t\t\tthis.newGroupStatus = data[\"status\"]\n\t\t\t\tfor (var i = 0; i < data[\"members\"].length; i++) {\n\t\t\t\t\tvar tempMember = data[\"members\"][i];\n\t\t\t\t\tthis.selectedItems.push({\"id\":tempMember,\"itemName\":tempMember})\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getListOfPolicies(){\n\t\tthis.apiService.getPolicies().subscribe((data)=>{\n\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t  this.policies = Object.keys(data);\n\t\t  this.rawPolicies = data;\n\t\t});\n\t}\n\n\tprivate resetForm(){\n\t\tthis.newGroupName = \"\";\n\t\tthis.selectedItems = [];\n\t\tthis.newGroupPolicy = \"\";\n\t\tthis.newGroupStatus = \"\";\n\t}\n\n\tprivate markGroupToDelete(group){\n\t\tconsole.log(\"GROUP TO DELETE\", group);\n\n\t\tthis.groupToDelete = group\n\t}\n\n\tprivate deleteGroup(){\n\t\tconsole.log(\"GROUP TO DELETE >>>\", this.groupToDelete);\n\n\t\tthis.apiService.updateMembersGroup(this.groupToDelete,[],\"true\").subscribe((data)=>{\n\t\t\t  this.apiService.validateAuthInResponse(data)\n\t      if(data[\"Success\"]){\n\t        this.toastr.success('Group: '+this.newGroupName+' has been removed', 'Success');\n\t        this.usersToRemove = [];\n\t\t\t\t\tthis.refreshList();\n\t\t\t\t\tthis.groupToDelete = \"\";\n\t      }else{\n\t        this.toastr.error(JSON.stringify(data), 'Error while removing group');\n\t\t\t\t\tthis.refreshList();\n\t\t\t\t\tthis.groupToDelete = \"\";\n\t      }\n\t    });\n\t}\n\n\tprivate wipeGroupMembers(){\n\n\t\tthis.apiService.updateMembersGroup(this.newGroupName,this.usersToRemove,\"true\").subscribe((data)=>{\n\t\t\t  this.apiService.validateAuthInResponse(data)\n\t      if(data[\"Success\"]){\n\t        this.toastr.success('Group: '+this.newGroupName+' members has been removed', 'Success');\n\t        this.usersToRemove = [];\n\t      }else{\n\t        this.toastr.error(JSON.stringify(data), 'Error while removing members from group');\n\t      }\n\t    });\n\t}\n\n\tprivate updatePolicy(){\n\t\tif(this.newGroupPolicy !== null && this.newGroupPolicy != \"\"){\n\t    \tthis.apiService.setPolicy(this.newGroupPolicy,this.newGroupName,\"true\").subscribe((data)=>{\n\t\t\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t      if(data[\"Success\"]){\n\t\t        this.toastr.success('Group: '+this.newGroupName+' policy has been set to '+this.newGroupPolicy, 'Success');\n\t\t      }else{\n\t\t        this.toastr.error(JSON.stringify(data), 'Error while setting policy to group');\n\t\t      }\n\t\t    });\n\t    }\n\t}\n\n\tprivate updateStatus(){\n\t\tif(this.newGroupStatus !== null && this.newGroupStatus != \"\"){\n\t    \tthis.apiService.setStatusGroup(this.newGroupName,this.newGroupStatus).subscribe((data)=>{\n\t\t\t\t\tthis.apiService.validateAuthInResponse(data)\n\t\t      if(data[\"Success\"]){\n\t\t        this.toastr.success('Group: '+this.newGroupName+' status has been set to '+this.newGroupStatus, 'Success');\n\t\t      }else{\n\t\t        this.toastr.error(JSON.stringify(data), 'Error while setting status to group');\n\t\t      }\n\t\t    });\n\t    }\n\t}\n\n\tprivate refreshList(){\n\t\tthis.updatePolicy();\n\t\tthis.updateStatus();\n\t\tthis.getGroups();\n\t}\n\n\tprivate createGroup(){\n\t\tconsole.log(\"CREATE GROUP CALLED\")\n\t\tlet newMembers = []\n\t\tfor (var i = 0; i < this.selectedItems.length; i++) {\n\t\t\tnewMembers.push(this.selectedItems[i].itemName)\n\t\t}\n\n\t\t//remove users from group\n\t\tconsole.log(\"grouptoUpdate\",this.groupToUpdate);\n\n\t\tif(this.groupToUpdate!==null && this.groupToUpdate!=\"\" && this.groupToUpdate){\n\t\t\tif(this.usersToRemove.length > 0){\n\t\t\t\tthis.wipeGroupMembers()\n\t\t\t}\n\t\t}\n\n\t\t//add all new users to group\n\t\tif(newMembers.length > 0){\n\t\t\tthis.apiService.updateMembersGroup(this.newGroupName,newMembers,\"false\").subscribe((data)=>{\n\t\t\t\t  this.apiService.validateAuthInResponse(data)\n\t\t      if(data[\"Success\"]){\n\t\t        this.toastr.success('Group: '+this.newGroupName+' has been created', 'Success');\n\t\t      }else{\n\t\t        this.toastr.error(JSON.stringify(data), 'Error while creating group');\n\t\t      }\n\t\t      this.refreshList();\n\t\t  });\n\t\t}else{\n\t\t\tthis.refreshList();\n\t\t}\n    this.isEditMode(false);\n    this.groupToUpdate = {};\n\t}\n\n}\n","// loader.interceptors.ts\nimport { Injectable } from '@angular/core';\nimport {\n    HttpErrorResponse,\n    HttpResponse,\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n    private requests: HttpRequest<any>[] = [];\n\n    constructor(private loaderService: LoaderService) { }\n\n    removeRequest(req: HttpRequest<any>) {\n        const i = this.requests.indexOf(req);\n        if (i >= 0) {\n            this.requests.splice(i, 1);\n        }\n        this.loaderService.isLoading.next(this.requests.length > 0);\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = req.clone({\n          withCredentials: true\n        });\n        this.requests.push(req);\n        this.loaderService.isLoading.next(true);\n        this.loaderService.isError = false;\n        return Observable.create(observer => {\n            const subscription = next.handle(req)\n                .subscribe(\n                    event => {\n                        if (event instanceof HttpResponse) {\n                            this.removeRequest(req);\n                            observer.next(event);\n                        }\n                    },\n                    err => {\n                        this.loaderService.isError = true;\n                        this.removeRequest(req);\n                        observer.error(err);\n                    },\n                    () => {\n                        this.removeRequest(req);\n                        observer.complete();\n                    });\n            // remove request from queue when cancelled\n            return () => {\n                this.removeRequest(req);\n                subscription.unsubscribe();\n            };\n        });\n    }\n}\n","//loader.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  public isError = false\n  public isLoading = new BehaviorSubject(false);\n  constructor() { }\n}\n","export default \"dialog {\\n  width: 300px;\\n}\\n\\ndialog::-webkit-backdrop {\\n  background: rgba(0, 0, 0, 0.7);\\n}\\n\\ndialog::backdrop {\\n  background: rgba(0, 0, 0, 0.7);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yenJibGQvcmVwb3MvYWRtaW5pby11aS9zcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0o7O0FEQ0c7RUFDQyw4QkFBQTtBQ0VKOztBREhHO0VBQ0MsOEJBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaWFsb2cge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgIH1cbiAgIGRpYWxvZzo6YmFja2Ryb3Age1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsMC43KTtcbiAgIH0iLCJkaWFsb2cge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbmRpYWxvZzo6YmFja2Ryb3Age1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG59Il19 */\";","//loader.interceptor.ts\nimport { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../loader.service';\n\n@Component({\nselector: 'app-loading',\ntemplateUrl: './loader.component.html',\nstyleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\nloading: boolean;\nerror: boolean;\nconstructor(private loaderService: LoaderService) {\n  this.loaderService.isLoading.subscribe((v) => {\n    this.loading = v;\n    this.error = this.loaderService.isError;\n  });\n}\nngOnInit() {\n}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvbGljaWVzL3BvbGljaWVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\nimport { ApiService } from '../api.service';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-policies',\n  templateUrl: './policies.component.html',\n  styleUrls: ['./policies.component.scss']\n})\nexport class PoliciesComponent implements OnInit {\n  objectKeys = Object.keys;\n  objectValues = Object.values;\n  policies = {};\n  policiesRaw = {};\n  b64decode;\n  rawView = '';\n  policyToDelete;\n  policyToUpdate;\n  modalEditMode;\n  jsn = JSON;\n  uploadPolicyName;\n  uploadPolicyFile;\n  uploadPolicyFileName;\n  downloadJsonHref;\n  modalCreateEditTitle;\n  modalCreateEditButtonText;\n\n  dropdownActionList = [];\n  dropdownConditionList = [];\n  dropdownConditionKeyList = [];\n\n  selectedActions = [];\n  selectedCondition = [];\n  selectedConditionKey = [];\n\n  dropdownActionSettings = {};\n  dropdownConditionSettings = {};\n  dropdownConditionKeySettings = {};\n\n  newPolicy = {\n  \tname:\"\",\n  \teffect:\"allow\",\n  \tbucket:\"\",\n  };\n\n  newPolicyRaw = {\n  \tVersion:\"\",\n  \tStatement: []\n  }\n\n  newStatement = {\n    Action: [],\n    Effect: \"\",\n    Resource: [],\n    Condition: {},\n    Principal: \"\"\n  }\n\n  newConditionValue = \"\"\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  previous: string;\n\n  searchText: string = '';\n\n\n  constructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService, private sanitizer: DomSanitizer) { }\n\n  @HostListener('input') oninput() {\n    if(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n       this.searchItems();\n    }\n    if(event && event['target'] !== undefined && event.target[\"name\"] !== undefined && event.target[\"name\"] == \"newPolicyName\"){\n      if(this.modalEditMode){\n        if(this.newPolicy.name == this.policyToUpdate){\n          this.isEditMode(true)\n        }else{\n          this.isNowCopyMode();\n        }\n      }\n    }\n\n  }\n\n  @ViewChild('uploadPolicyFile', { static: true })\n  uploadFileInput: any;\n\n  ngOnInit() {\n  \tthis.getPolicies()\n\n\n  \tthis.dropdownActionList = [\n\t    {\"id\":1,\"itemName\":\"s3:AbortMultipartUpload\"},\n\t    {\"id\":2,\"itemName\":\"s3:CreateBucket\"},\n\t    {\"id\":3,\"itemName\":\"s3:DeleteBucket\"},\n\t    {\"id\":4,\"itemName\":\"s3:DeleteBucketPolicy\"},\n\t    {\"id\":5,\"itemName\":\"s3:DeleteObject\"},\n\t    {\"id\":6,\"itemName\":\"s3:GetBucketLocation\"},\n\t    {\"id\":7,\"itemName\":\"s3:GetBucketNotification\"},\n\t    {\"id\":8,\"itemName\":\"s3:GetBucketPolicy\"},\n\t    {\"id\":9,\"itemName\":\"s3:GetObject\"},\n\t    {\"id\":10,\"itemName\":\"s3:HeadBucket\"},\n\t    {\"id\":11,\"itemName\":\"s3:ListAllMyBuckets\"},\n\t    {\"id\":12,\"itemName\":\"s3:ListBucket\"},\n\t    {\"id\":13,\"itemName\":\"s3:ListBucketMultipartUploads\"},\n\t    {\"id\":14,\"itemName\":\"s3:ListenBucketNotification\"},\n\t    {\"id\":15,\"itemName\":\"s3:ListMultipartUploadParts\"},\n\t    {\"id\":16,\"itemName\":\"s3:PutBucketNotification\"},\n\t    {\"id\":17,\"itemName\":\"s3:PutBucketPolicy\"},\n\t    {\"id\":18,\"itemName\":\"s3:PutObject\"},\n\t    {\"id\":19,\"itemName\":\"s3:PutBucketLifecycle\"},\n\t    {\"id\":20,\"itemName\":\"s3:GetBucketLifecycle\"}\n    ];\n\n    this.dropdownActionSettings = {\n  \t\tsingleSelection: false,\n  \t\ttext:\"Select Actions\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true\n\t  };\n\n  \tthis.dropdownConditionList = [\n      {\"id\":1,\"itemName\":\"ArnEquals\"},\n      {\"id\":2,\"itemName\":\"ArnEqualsIfExists\"},\n      {\"id\":3,\"itemName\":\"ArnLike\"},\n      {\"id\":4,\"itemName\":\"ArnLikeIfExists\"},\n      {\"id\":5,\"itemName\":\"ArnNotEquals\"},\n      {\"id\":6,\"itemName\":\"ArnNotEqualsIfExists\"},\n      {\"id\":7,\"itemName\":\"ArnNotLike\"},\n      {\"id\":8,\"itemName\":\"ArnNotLikeIfExists\"},\n      {\"id\":9,\"itemName\":\"BinaryEquals\"},\n      {\"id\":10,\"itemName\":\"BinaryEqualsIfExists\"},\n      {\"id\":11,\"itemName\":\"BinaryNotEquals\"},\n      {\"id\":12,\"itemName\":\"BinaryNotEqualsIfExists\"},\n      {\"id\":13,\"itemName\":\"Bool\"},\n      {\"id\":14,\"itemName\":\"BoolIfExists\"},\n      {\"id\":15,\"itemName\":\"DateEquals\"},\n      {\"id\":16,\"itemName\":\"DateEqualsIfExists\"},\n      {\"id\":17,\"itemName\":\"DateGreaterThan\"},\n      {\"id\":18,\"itemName\":\"DateGreaterThanEquals\"},\n      {\"id\":19,\"itemName\":\"DateGreaterThanEqualsIfExists\"},\n      {\"id\":20,\"itemName\":\"DateGreaterThanIfExists\"},\n      {\"id\":21,\"itemName\":\"DateLessThan\"},\n      {\"id\":22,\"itemName\":\"DateLessThanEquals\"},\n      {\"id\":23,\"itemName\":\"DateLessThanEqualsIfExists\"},\n      {\"id\":24,\"itemName\":\"DateLessThanIfExists\"},\n      {\"id\":25,\"itemName\":\"DateNotEquals\"},\n      {\"id\":26,\"itemName\":\"DateNotEqualsIfExists\"},\n      {\"id\":27,\"itemName\":\"IpAddress\"},\n      {\"id\":28,\"itemName\":\"IpAddressIfExists\"},\n      {\"id\":29,\"itemName\":\"NotIpAddress\"},\n      {\"id\":30,\"itemName\":\"NotIpAddressIfExists\"},\n      {\"id\":31,\"itemName\":\"Null\"},\n      {\"id\":32,\"itemName\":\"NumericEquals\"},\n      {\"id\":33,\"itemName\":\"NumericEqualsIfExists\"},\n      {\"id\":34,\"itemName\":\"NumericGreaterThan\"},\n      {\"id\":35,\"itemName\":\"NumericGreaterThanEquals\"},\n      {\"id\":36,\"itemName\":\"NumericGreaterThanEqualsIfExists\"},\n      {\"id\":37,\"itemName\":\"NumericGreaterThanIfExists\"},\n      {\"id\":38,\"itemName\":\"NumericLessThan\"},\n      {\"id\":39,\"itemName\":\"NumericLessThanEquals\"},\n      {\"id\":40,\"itemName\":\"NumericLessThanEqualsIfExists\"},\n      {\"id\":41,\"itemName\":\"NumericLessThanIfExists\"},\n      {\"id\":42,\"itemName\":\"NumericNotEquals\"},\n      {\"id\":43,\"itemName\":\"NumericNotEqualsIfExists\"},\n      {\"id\":44,\"itemName\":\"StringEquals\"},\n      {\"id\":45,\"itemName\":\"StringEqualsIfExists\"},\n      {\"id\":46,\"itemName\":\"StringEqualsIgnoreCase\"},\n      {\"id\":47,\"itemName\":\"StringEqualsIgnoreCaseIfExists\"},\n      {\"id\":48,\"itemName\":\"StringLike\"},\n      {\"id\":49,\"itemName\":\"StringLikeIfExists\"},\n      {\"id\":50,\"itemName\":\"StringNotEquals\"},\n      {\"id\":51,\"itemName\":\"StringNotEqualsIfExists\"},\n      {\"id\":52,\"itemName\":\"StringNotEqualsIgnoreCase\"},\n      {\"id\":53,\"itemName\":\"StringNotEqualsIgnoreCaseIfExists\"},\n      {\"id\":54,\"itemName\":\"StringNotLike\"},\n      {\"id\":55,\"itemName\":\"StringNotLikeIfExists\"}\n    ];\n\n    this.dropdownConditionSettings = {\n  \t\tsingleSelection: true,\n  \t\ttext:\"Select Condition\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true\n\t  };\n\n  \tthis.dropdownConditionKeyList = [\n      {\"id\":1,\"itemName\":\"aws:CurrentTime\"},\n      {\"id\":2,\"itemName\":\"aws:EpochTime\"},\n      {\"id\":3,\"itemName\":\"aws:MultiFactorAuthAge\"},\n      {\"id\":4,\"itemName\":\"aws:MultiFactorAuthPresent\"},\n      {\"id\":5,\"itemName\":\"aws:PrincipalArn\"},\n      {\"id\":6,\"itemName\":\"aws:PrincipalOrgID\"},\n      {\"id\":7,\"itemName\":\"aws:PrincipalTag/${TagKey}\"},\n      {\"id\":8,\"itemName\":\"aws:PrincipalType\"},\n      {\"id\":9,\"itemName\":\"aws:Referer\"},\n      {\"id\":10,\"itemName\":\"aws:RequestTag/${TagKey}\"},\n      {\"id\":11,\"itemName\":\"aws:RequestedRegion\"},\n      {\"id\":12,\"itemName\":\"aws:SecureTransport\"},\n      {\"id\":13,\"itemName\":\"aws:SourceAccount\"},\n      {\"id\":14,\"itemName\":\"aws:SourceArn\"},\n      {\"id\":15,\"itemName\":\"aws:SourceIp\"},\n      {\"id\":16,\"itemName\":\"aws:SourceVpc\"},\n      {\"id\":17,\"itemName\":\"aws:SourceVpce\"},\n      {\"id\":18,\"itemName\":\"aws:TagKeys\"},\n      {\"id\":19,\"itemName\":\"aws:TokenIssueTime\"},\n      {\"id\":20,\"itemName\":\"aws:UserAgent\"},\n      {\"id\":21,\"itemName\":\"aws:userid\"},\n      {\"id\":22,\"itemName\":\"aws:username\"},\n      {\"id\":23,\"itemName\":\"s3:AccessPointNetworkOrigin\"},\n      {\"id\":24,\"itemName\":\"s3:DataAccessPointAccount\"},\n      {\"id\":25,\"itemName\":\"s3:DataAccessPointArn\"},\n      {\"id\":26,\"itemName\":\"s3:ExistingJobOperation\"},\n      {\"id\":27,\"itemName\":\"s3:ExistingJobPriority\"},\n      {\"id\":28,\"itemName\":\"s3:ExistingObjectTag/<key>\"},\n      {\"id\":29,\"itemName\":\"s3:JobSuspendedCause\"},\n      {\"id\":30,\"itemName\":\"s3:LocationConstraint\"},\n      {\"id\":31,\"itemName\":\"s3:RequestJobOperation\"},\n      {\"id\":32,\"itemName\":\"s3:RequestJobPriority\"},\n      {\"id\":33,\"itemName\":\"s3:RequestObjectTag/<key>\"},\n      {\"id\":34,\"itemName\":\"s3:RequestObjectTagKeys\"},\n      {\"id\":35,\"itemName\":\"s3:VersionId\"},\n      {\"id\":36,\"itemName\":\"s3:authtype\"},\n      {\"id\":37,\"itemName\":\"s3:delimiter\"},\n      {\"id\":38,\"itemName\":\"s3:locationconstraint\"},\n      {\"id\":39,\"itemName\":\"s3:max-keys\"},\n      {\"id\":40,\"itemName\":\"s3:object-lock-legal-hold\"},\n      {\"id\":41,\"itemName\":\"s3:object-lock-mode\"},\n      {\"id\":42,\"itemName\":\"s3:object-lock-remaining-retention-days\"},\n      {\"id\":43,\"itemName\":\"s3:object-lock-retain-until-date\"},\n      {\"id\":44,\"itemName\":\"s3:prefix\"},\n      {\"id\":45,\"itemName\":\"s3:signatureage\"},\n      {\"id\":46,\"itemName\":\"s3:signatureversion\"},\n      {\"id\":47,\"itemName\":\"s3:versionid\"},\n      {\"id\":48,\"itemName\":\"s3:x-amz-acl\"},\n      {\"id\":49,\"itemName\":\"s3:x-amz-content-sha256\"},\n      {\"id\":50,\"itemName\":\"s3:x-amz-copy-source\"},\n      {\"id\":51,\"itemName\":\"s3:x-amz-grant-full-control\"},\n      {\"id\":52,\"itemName\":\"s3:x-amz-grant-read\"},\n      {\"id\":53,\"itemName\":\"s3:x-amz-grant-read-acp\"},\n      {\"id\":54,\"itemName\":\"s3:x-amz-grant-write\"},\n      {\"id\":55,\"itemName\":\"s3:x-amz-grant-write-acp\"},\n      {\"id\":56,\"itemName\":\"s3:x-amz-metadata-directive\"},\n      {\"id\":57,\"itemName\":\"s3:x-amz-server-side-encryption\"},\n      {\"id\":58,\"itemName\":\"s3:x-amz-server-side-encryption-aws-kms-key-id\"},\n      {\"id\":59,\"itemName\":\"s3:x-amz-storage-class\"},\n      {\"id\":60,\"itemName\":\"s3:x-amz-website-redirect-location\"}\n    ];\n\n    this.dropdownConditionKeySettings = {\n  \t\tsingleSelection: true,\n  \t\ttext:\"Select Condition Key\",\n  \t\tselectAllText:'Select All',\n  \t\tunSelectAllText:'UnSelect All',\n  \t\tenableSearchFilter: true\n\t  };\n  }\n\n\tonActionItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedActions);\n\t}\n\tonActionItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedActions);\n\t}\n\tonActionSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonActionDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n\n  //condition select actions\n  onConditionItemSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedCondition);\n\t}\n\tonConditionItemDeSelect(item:any){\n\t    console.log(item);\n\t    console.log(this.selectedCondition);\n\t}\n\tonConditionSelectAll(items: any){\n\t    console.log(items);\n\t}\n\tonConditionDeSelectAll(items: any){\n\t    console.log(items);\n\t}\n\n  //condition key select actions\n  onConditionKeyItemSelect(item:any){\n      console.log(item);\n      console.log(this.selectedConditionKey);\n  }\n  onConditionKeyItemDeSelect(item:any){\n      console.log(item);\n      console.log(this.selectedConditionKey);\n  }\n  onConditionKeySelectAll(items: any){\n      console.log(items);\n  }\n  onConditionKeyDeSelectAll(items: any){\n      console.log(items);\n  }\n\n\n  searchItems() {\n    console.log(this.searchText)\n    const prev = this.mdbTable.getDataSource();\n\n    if (!this.searchText) {\n      this.mdbTable.setDataSource(this.previous);\n      this.policies = this.mdbTable.getDataSource();\n    }\n\n    if (this.searchText) {\n      this.policies = this.mdbTable.searchLocalDataBy(this.searchText);\n      this.mdbTable.setDataSource(prev);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  private resetPloicyForm(removeName){\n  \tconsole.log(removeName)\n  \tthis.selectedActions = []\n  \tif(!removeName){\n  \t\tthis.newPolicy.effect = \"Allow\"\n\t\t  this.newPolicy.bucket = \"\"\n  \t}else{\n  \t\tthis.newPolicy.name = \"\",\n  \t\tthis.newPolicy.effect = \"Allow\"\n  \t\tthis.newPolicy.bucket = \"\"\n  \t}\n\n    this.newStatement = {\n      Action: [],\n      Effect: \"\",\n      Resource: [],\n      Condition: {},\n      Principal: \"\"\n    }\n\n  }\n\n  private getPolicies(){\n  \tthis.apiService.getPolicies().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      this.policiesRaw = data;\n      const arrayOfPolicies = Object.entries(data).map((e) => ( { [e[0]]: e[1] } ));\n      this.policies = arrayOfPolicies;\n      this.mdbTable.setDataSource(arrayOfPolicies);\n      console.log(arrayOfPolicies)\n      this.previous = this.mdbTable.getDataSource();\n    });\n  }\n\n  private deletePolicy(){\n  \tthis.apiService.deletePolicy(this.policyToDelete).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      this.getPolicies();\n      if(data[\"Success\"]){\n        this.toastr.success('Policy '+this.policyToDelete+' has been deleted', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while deleting policy');\n      }\n    });\n  }\n\n  private downloadPolicy(jsonObj) {\n    var theJSON = JSON.stringify(jsonObj);\n    console.log(\"theJSON>>>>>>>>>>>\",theJSON);\n    var uri = this.sanitizer.bypassSecurityTrustUrl(\"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON));\n    this.downloadJsonHref = uri;\n  }\n\n  private rawPrepare(obj){\n  \tthis.rawView = obj;\n  }\n\n  private deletePolicyPrepare(policy){\n  \tthis.policyToDelete = policy\n  }\n\n  private prepareNewPolicyRaw(){\n  \tthis.newPolicyRaw = {\n\t  \tVersion:\"2012-10-17\",\n\t  \tStatement: []\n  \t}\n  }\n\n  private removeCondition(valueId,keyName,conditionName){\n    console.log(this.newStatement)\n    console.log(valueId,keyName,conditionName)\n    this.newStatement.Condition[conditionName][keyName].splice(valueId,1)\n  }\n\n  private addCondition(){\n    console.log(this.selectedCondition[0].itemName)\n    console.log(this.selectedConditionKey[0].itemName)\n    console.log(this.newConditionValue)\n    if(!this.newStatement.Condition){\n      this.newStatement.Condition = {}\n    }\n    if(this.newStatement.Condition[this.selectedCondition[0].itemName]){\n      if(this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName]){\n        this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName].push(this.newConditionValue)\n      }else{\n        this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName] = []\n        this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName].push(this.newConditionValue)\n      }\n    }else{\n      this.newStatement.Condition[this.selectedCondition[0].itemName] = {}\n      this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName] = []\n      this.newStatement.Condition[this.selectedCondition[0].itemName][this.selectedConditionKey[0].itemName].push(this.newConditionValue)\n    }\n\n    this.selectedCondition = []\n    this.selectedConditionKey = []\n    this.newConditionValue = \"\"\n    console.log(this.newStatement.Condition)\n  }\n\n\n  private addStatement(){\n\n  \tif(this.selectedActions.length == this.dropdownActionList.length){\n  \t\tthis.newStatement.Action.push(\"s3:*\")\n  \t}else{\n\t  \tfor (var i = 0; i < this.selectedActions.length; i++) {\n\t  \t\tthis.newStatement.Action.push(this.selectedActions[i].itemName)\n\t  \t}\n\t  }\n  \tthis.newStatement.Effect = this.newPolicy.effect\n  \t// this.newStatement.Resource = \"arn:aws:s3:::\"+this.newPolicy.bucket\n  \tconsole.log(this.newStatement)\n    if(this.newStatement.Condition && Object.entries(this.newStatement.Condition).length === 0 && this.newStatement.Condition.constructor === Object){\n      console.log(\"Condition removed cause empty\")\n      delete this.newStatement.Condition\n    }else{\n      if(!this.newStatement.Principal || this.newStatement.Principal == \"\"){\n        console.log(\"Principal set to * cause condition not empty\")\n        this.newStatement.Principal = \"*\"\n      }\n    }\n\n  \tthis.newPolicyRaw.Statement.push(this.newStatement);\n  \tconsole.log(this.newPolicyRaw)\n\n  \tthis.resetPloicyForm(false);\n  }\n\n  private editStatement(i){\n    this.newStatement = this.newPolicyRaw.Statement[i]\n    this.newPolicy.effect = this.newPolicyRaw.Statement[i].Effect\n    if(this.newStatement.Action[0] == \"s3:*\"){\n        for (var g = 0; g < this.dropdownActionList.length; g++) {\n          this.selectedActions.push({\"id\":this.dropdownActionList[g].id,\"itemName\":this.dropdownActionList[g].itemName}) \n        }\n    }else{\n      for (var g = 0; g < this.newStatement.Action.length; g++) {\n        this.selectedActions.push({\"id\":g,\"itemName\":this.newStatement.Action[g]})\n      }\n    }\n    this.newStatement.Action = []\n    this.newPolicyRaw.Statement.splice(i,1)\n  }\n\n  private addBucketStatement(){\n    this.newStatement.Resource.push(\"arn:aws:s3:::\"+this.newPolicy.bucket)\n    this.newPolicy.bucket = ''\n  }\n\n  private removeStatement(i){\n  \tthis.newPolicyRaw.Statement.splice(i,1)\n  }\n\n  private removeBucketStatement(i){\n    this.newStatement.Resource.splice(i,1)\n  }\n\n  private fileChanged(e) {\n    console.log(\"eventTriggered\");\n\n    this.uploadPolicyFile = e.target.files[0];\n    this.uploadPolicyFileName = e.target.files[0].name;\n  }\n\n  private uploadPolicy(){\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      console.log(fileReader.result);\n      let policyFileString = ((fileReader.result).toString()).replace(/\\n/g, ' ').replace(/\\r/g, ' ')\n      this.apiService.addPolicy(this.uploadPolicyName,policyFileString).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        if(data[\"Success\"]){\n          this.toastr.success('Policy '+this.newPolicy.name+' has been created', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating policy');\n        }\n        this.getPolicies();\n      });\n    }\n    fileReader.readAsText(this.uploadPolicyFile);\n  }\n\n  private resetUploadForm(){\n    this.uploadFileInput.nativeElement.value = \"\";\n    this.uploadPolicyFile;\n    this.uploadPolicyName = \"\";\n    this.uploadPolicyFileName = \"\";\n  }\n\n  private createPolicy(){\n  \tconsole.log(this.newPolicy, this.newPolicyRaw)\n\n  \tlet policyString = JSON.stringify(this.newPolicyRaw);\n\n  \tthis.apiService.addPolicy(this.newPolicy.name,policyString).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n        this.toastr.success('Policy '+this.newPolicy.name+' has been created', 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while creating policy');\n      }\n      this.getPolicies();\n    });\n  }\n\n  private isEditMode(state){\n    this.modalEditMode = state;\n    if(state){\n      this.modalCreateEditTitle = \"Edit policy\"\n      this.modalCreateEditButtonText = \"Update\"\n    }else{\n      this.modalCreateEditTitle = \"Build up new policy\"\n      this.modalCreateEditButtonText = \"Create\"\n    }\n  }\n\n  private isNowCopyMode(){\n    this.modalCreateEditTitle = \"Copy policy\"\n    this.modalCreateEditButtonText = \"Copy\"\n  }\n\n  private updatePolicyPrepare(policy){\n    this.policyToUpdate = policy\n    this.prepareNewPolicyRaw()\n    this.resetPloicyForm(false)\n    this.newPolicy.name = policy;\n\n    var oldPolicy = this.policiesRaw[policy]\n    this.newPolicyRaw.Statement = oldPolicy.Statement;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlci9zZXJ2ZXIuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.scss']\n})\nexport class ServerComponent implements OnInit {\n\n  objectKeys = Object.keys;\n  objectValues = Object.values;\n  math = Math;\n  rawView = '';\n  serviceInfo;\n  diskUsageInfo;\n  bucketSizes=[];\n  hgChartDatasets=[{data: [], label: 'Number of objects'}];\n  hgChartLabels=[];\n  hgChartType = 'radar';\n  hgChartColors = [\n      {\n          backgroundColor: 'rgba(151,187,205,0.9)',\n          borderColor: 'rgba(151,187,205,1)',\n          borderWidth: 2,\n          pointBackgroundColor: 'rgba(151,187,205,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(151,187,205,1)'\n      }\n  ];\n  hgChartOptions = {\n      responsive: true\n  };\n\n  szChartDatasets=[{data: [], label: 'Size of bucket in Bytes'}];\n  szChartLabels=[];\n  szChartType = 'bar';\n  szChartColors = [\n      {\n          backgroundColor: 'rgba(151,187,205,0.9)',\n          borderColor: 'rgba(151,187,205,1)',\n          borderWidth: 2,\n          pointBackgroundColor: 'rgba(151,187,205,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(151,187,205,1)'\n      }\n  ];\n  szChartOptions = {\n      responsive: true\n  };\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n  \tthis.serverInfo()\n    this.diskInfo()\n  }\n\n  public hgChartClicked(e: any): void {\n  }\n\n  public hgChartHovered(e: any): void {\n  }\n\n  public szChartClicked(e: any): void {\n  }\n\n  public szChartHovered(e: any): void {\n  }\n\n  private serverInfo(){\n  \tthis.apiService.serverInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.serviceInfo = data;\n    });\n  }\n\n  private diskInfo(){\n  \tthis.apiService.diskInfo().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(\"Disk Usage >>>>>>>>>>>>\",data);\n      this.diskUsageInfo = data;\n      if(data.hasOwnProperty('objectsSizesHistogram')){\n        var objectsSizesHistogram = this.diskUsageInfo.objectsSizesHistogram;\n        const histogramKeysRawArr = Object.keys(objectsSizesHistogram)\n        const histogramValsRawArr = Object.values(objectsSizesHistogram)\n        this.hgChartDatasets[0].data = histogramValsRawArr;\n\n        this.hgChartLabels = [];\n        for (let i = 0; i < histogramKeysRawArr.length; i++) {\n          var histogramLabel = histogramKeysRawArr[i].split('_').join(' ');\n          this.hgChartLabels.push(histogramLabel)\n        }\n      }\n\n      if(data.hasOwnProperty('bucketsSizes') && this.diskUsageInfo.bucketsSizes != {}){\n        var objectBucketSizes = this.diskUsageInfo.bucketsSizes;\n        const bucketSizesKeysRawArr = Object.keys(objectBucketSizes)\n        const bucketSizesValsRawArr = Object.values(objectBucketSizes)\n        this.szChartDatasets[0].data = bucketSizesValsRawArr;\n        this.szChartLabels= bucketSizesKeysRawArr;\n      }\n    });\n  }\n\n  private rawPrepare(obj){\n    this.rawView = obj;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule } from \"@angular/forms\";\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, AfterViewInit {\n  validatingForm: FormGroup;\n  updateUser: FormGroup;\n  users = {};\n  usersRaw = {};\n  userToDelete;\n  userToUpdate;\n  objectKeys = Object.keys;\n  objectValues = Object.values;\n  jsn = JSON;\n  policies;\n  updateStatusValues = ['enabled','disabled'];\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  previous: string;\n\n  searchText: string = '';\n\n  constructor(private apiService: ApiService, private cdRef: ChangeDetectorRef, private toastr: ToastrService) { }\n\n  @HostListener('input') oninput() {\n    if(event && event['target'] !== undefined && event.target[\"id\"] !== undefined && event.target[\"id\"] == \"search\"){\n       this.searchItems();\n    }\n  }\n\n  ngOnInit() {\n  \tthis.getListOfUsers()\n  \tthis.getListOfPolicies()\n    this.resetForm()\n    this.updateUserFrom()\n  }\n\n  searchItems() {\n    console.log(this.searchText)\n    const prev = this.mdbTable.getDataSource();\n\n    if (!this.searchText) {\n      this.mdbTable.setDataSource(this.previous);\n      this.users = this.mdbTable.getDataSource();\n    }\n\n    if (this.searchText) {\n      this.users = this.mdbTable.searchLocalDataBy(this.searchText);\n      this.mdbTable.setDataSource(prev);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(10);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  get newUserAccess() {\n\treturn this.validatingForm.get('newUserAccess');\n  }\n\n  get newUserSecret() {\n\treturn this.validatingForm.get('newUserSecret');\n  }\n\n  get newUserPolicy() {\n\treturn this.validatingForm.get('newUserPolicy');\n  }\n\n  private generatePassword(length) {\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    var retVal = \"\";\n    for (var i = 0, n = charset.length; i < length; ++i) {\n        retVal += charset.charAt(Math.floor(Math.random() * n));\n    }\n\n    return retVal;\n  }\n\n  get accessKeyUpdate() {\n    return this.updateUser.get('accessKeyUpdate');\n  }\n\n  get secretKeyUpdate() {\n    return this.updateUser.get('secretKeyUpdate');\n  }\n\n  get policyUpdate() {\n    return this.updateUser.get('policyUpdate');\n  }\n\n  get statusUpdate() {\n    return this.updateUser.get('statusUpdate');\n  }\n\n  private updateUserFrom(){\n    this.updateUser = new FormGroup({\n      accessKeyUpdate: new FormControl({value: '', disabled: true}, Validators.required),\n      secretKeyUpdate: new FormControl(''),\n      policyUpdate: new FormControl('', Validators.required),\n      statusUpdate: new FormControl('', Validators.required)\n    });\n  }\n\n  private resetForm(){\n  \tthis.validatingForm = new FormGroup({\n      newUserAccess: new FormControl(this.generatePassword(16), Validators.minLength(5)),\n      newUserSecret: new FormControl(this.generatePassword(24), Validators.minLength(10)),\n      newUserPolicy: new FormControl('',Validators.minLength(0))\n    });\n  }\n\n  private getListOfUsers(){\n  \tthis.apiService.getUsers().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data)\n      this.usersRaw = data;\n      const arrayOfUsers = Object.entries(data).map((e) => ( { [e[0]]: e[1] } ));\n      this.users = arrayOfUsers;\n      this.mdbTable.setDataSource(arrayOfUsers);\n      console.log(arrayOfUsers)\n      this.previous = this.mdbTable.getDataSource();\n    });\n  }\n\n\n  private getListOfPolicies(){\n  \tthis.apiService.getPolicies().subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      this.policies = Object.keys(data);\n    });\n  }\n\n  private createUser(){\n  \tvar userAccess = this.newUserAccess.value;\n  \tvar userSecret = this.newUserSecret.value;\n  \tvar userPolicy = this.newUserPolicy.value;\n\n  \tconsole.log(userPolicy)\n\n  \tif(userPolicy!=''){\n  \t\tthis.apiService.addUserExtended(userAccess,userSecret,userPolicy).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n\t      console.log(data);\n\t      this.getListOfUsers();\n        if(data[\"Success\"]){\n          this.toastr.success('User: '+userAccess+' with policy '+userPolicy+' has been created', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating user');\n        }\n\t    });\n  \t}else{\n  \t\tthis.apiService.addUser(userAccess,userSecret).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n\t      console.log(data);\n\t      this.getListOfUsers();\n        if(data[\"Success\"]){\n          this.toastr.success('User: '+userAccess+' has been created', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while creating user');\n        }\n\t    });\n  \t}\n  }\n\n  private setStatusUser(accessKey,status){\n  \tif(status == 'enabled'){\n  \t\tstatus = 'disabled'\n  \t}else{\n  \t\tstatus = 'enabled'\n  \t}\n  \tthis.apiService.setStatusUser(accessKey,status).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n          this.toastr.success('User: '+accessKey+' status has changed to '+status, 'Success');\n      }else{\n        this.toastr.error(JSON.stringify(data), 'Error while changing state for user');\n      }\n      this.getListOfUsers();\n    });\n  }\n\n  private deleteUserPrepare(accessKey){\n  \tthis.userToDelete = accessKey\n  }\n\n  private updateUserPrepare(accessKey){\n    this.userToUpdate = accessKey\n    this.updateUser.patchValue({'accessKeyUpdate': accessKey});\n    if(this.usersRaw[accessKey]['policyName']){\n      this.updateUser.patchValue({'policyUpdate': this.usersRaw[accessKey]['policyName']});\n    }\n    if(this.usersRaw[accessKey]['status']){\n      this.updateUser.patchValue({'statusUpdate': this.usersRaw[accessKey]['status']});\n    }\n    console.log(this.usersRaw[accessKey])\n  }\n\n  private updateGenNewPassword(){\n    this.updateUser.patchValue({'secretKeyUpdate': this.generatePassword(24)});\n  }\n\n  private updateUserSave(){\n    var updatedSecret = this.updateUser.value.secretKeyUpdate;\n    var updatedPolicy = this.updateUser.value.policyUpdate;\n    var updatedStatus = this.updateUser.value.statusUpdate;\n\n    this.apiService.updateUser(this.userToUpdate,updatedSecret,updatedPolicy,updatedStatus).subscribe((data)=>{\n        this.apiService.validateAuthInResponse(data)\n        console.log(data);\n        this.getListOfUsers();\n        if(data[\"Success\"]){\n          this.toastr.success('User: '+this.userToUpdate+' has been updated', 'Success');\n        }else{\n          this.toastr.error(JSON.stringify(data), 'Error while updating user');\n        }\n    });\n  }\n\n\n  private deleteUser(){\n  \tthis.apiService.deleteUser(this.userToDelete).subscribe((data)=>{\n      this.apiService.validateAuthInResponse(data)\n      console.log(data);\n      if(data[\"Success\"]){\n          this.toastr.success('User: '+this.userToDelete+' has been deleted', 'Success');\n        }\n      this.updateUserFrom();\n      this.getListOfUsers();\n    });\n  }\n\n}\n","export const environment = {\n  production: false,\n  apiBaseUrl: \"http://localhost:8080\",\n  apiMultiBackend: false,\n  apiBackends: [{\"name\":\"myminio\",\"url\":\"http://localhost:8080\"},{\"name\":\"localhost\",\"url\":\"http://localhost:8081\"},{\"name\":\"error\",\"url\":\"http://localhost:8082\"}]\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}